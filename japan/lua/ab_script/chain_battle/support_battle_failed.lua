--足止め失敗

fcolor_r = 245;
fcolor_g = 245;
fcolor_b = 245;

SE_01 = 1035; --気を貯める
SE_02 = 1036; --気が広がる
SE_03 = 1036; --かめはめ
SE_04 = 1018; --カットイン
SE_05 = 1035; --カットイン攻撃
SE_06 = 1021; --発射
SE_07 = 1022; --のびる発射
SE_08 = 1042; --カットイン
SE_09 = 1023; --HIT
SE_10 = 1024; --爆破
SE_11 = 1054; --割れる音
SE_12 = 09;

------------------------------------------------------
-- テンプレ構文
------------------------------------------------------

multi_frm = 2;


changeAnime( 0, 0, 0);
changeAnime( 0, 1, 100);
setDisp( 0, 0, 0);
setDisp( 0, 1, 0);

setMoveKey(   0,   0,    0, -5000,   0);
setMoveKey(   1,   0,    0, -5000,   0);
setMoveKey(   2,   0,    0, -5000,   0);
setMoveKey(   3,   0,    0, -5000,   0);
setMoveKey(   4,   0,    0, -5000,   0);
setMoveKey(   5,   0,    0, -5000,   0);
setMoveKey(   6,   0,    0, -5000,   0);
setScaleKey(  0,   0,  1.6, 1.6 );
setScaleKey(  1,   0,  1.6, 1.6 );
setScaleKey(  2,   0,  1.6, 1.6 );
setScaleKey(  3,   0,  1.6, 1.6 );
setScaleKey(  4,   0,  1.6, 1.6 );
setScaleKey(  5,   0,  1.6, 1.6 );
setScaleKey(  6,   0,  1.6, 1.6 );
setRotateKey( 0,   0,  0 );
setRotateKey( 1,   0,  0 );
setRotateKey( 2,   0,  0 );
setRotateKey( 3,   0,  0 );
setRotateKey( 4,   0,  0 );
setRotateKey( 5,   0,  0 );
setRotateKey( 6,   0,  0 );

setMoveKey(   0,   1,    0, -5000,   0);
setMoveKey(   1,   1,    0, -5000,   0);
setMoveKey(   2,   1,    0, -5000,   0);
setMoveKey(   3,   1,    0, -5000,   0);
setMoveKey(   4,   1,    0, -5000,   0);
setMoveKey(   5,   1,    0, -5000,   0);
setMoveKey(   6,   1,    0, -5000,   0);
setScaleKey(  0,   1,  1.6, 1.6 );
setScaleKey(  1,   1,  1.6, 1.6 );
setScaleKey(  2,   1,  1.6, 1.6 );
setScaleKey(  3,   1,  1.6, 1.6 );
setScaleKey(  4,   1,  1.6, 1.6 );
setScaleKey(  5,   1,  1.6, 1.6 );
setScaleKey(  6,   1,  1.6, 1.6 );
setRotateKey( 0,   1,  0 );
setRotateKey( 1,   1,  0 );
setRotateKey( 2,   1,  0 );
setRotateKey( 3,   1,  0 );
setRotateKey( 4,   1,  0 );
setRotateKey( 5,   1,  0 );
setRotateKey( 6,   1,  0 );

view1 = entryCharaView(0, BONUS_CHARACTER_CARD_IDS[1], 0, 0, 0, -4000);  --右下
setDisp( 0, view1, 0);
changeAnime( 0, view1, 100);
setDrawFront(0,  view1,  1);
setMoveKey(   0,   view1,    0, -4000 , 0 );
setMoveKey(   1,   view1,    0, -4000 , 0 );
setMoveKey(   2,   view1,    0, -4000 , 0 );
setMoveKey(   3,   view1,    0, -4000 , 0 );
setMoveKey(   4,   view1,    0, -4000 , 0 );
setMoveKey(   5,   view1,    0, -4000 , 0 );
setMoveKey(   6,   view1,    0, -4000 , 0 );
setScaleKey(  0,   view1,  1.6, 1.6 );
setScaleKey(  1,   view1,  1.6, 1.6 );
setScaleKey(  2,   view1,  1.6, 1.6 );
setScaleKey(  3,   view1,  1.6, 1.6 );
setScaleKey(  4,   view1,  1.6, 1.6 );
setScaleKey(  5,   view1,  1.6, 1.6 );
setScaleKey(  6,   view1,  1.6, 1.6 );
setRotateKey( 0,   view1,  0 );
setRotateKey( 1,   view1,  0 );
setRotateKey( 2,   view1,  0 );
setRotateKey( 3,   view1,  0 );
setRotateKey( 4,   view1,  0 );
setRotateKey( 5,   view1,  0 );
setRotateKey( 6,   view1,  0 );

view2 = entryCharaView(0, BONUS_CHARACTER_CARD_IDS[2], 0, 0, 0, -4000);  --左下
setDisp( 0, view2, 0);
changeAnime( 0, view2, 100);
setDrawFront(0,  view2,  1);
setMoveKey(   0,   view2,    0, -4000 , 0 );
setMoveKey(   1,   view2,    0, -4000 , 0 );
setMoveKey(   2,   view2,    0, -4000 , 0 );
setMoveKey(   3,   view2,    0, -4000 , 0 );
setMoveKey(   4,   view2,    0, -4000 , 0 );
setMoveKey(   5,   view2,    0, -4000 , 0 );
setMoveKey(   6,   view2,    0, -4000 , 0 );
setScaleKey(  0,   view2,  1.6, 1.6 );
setScaleKey(  1,   view2,  1.6, 1.6 );
setScaleKey(  2,   view2,  1.6, 1.6 );
setScaleKey(  3,   view2,  1.6, 1.6 );
setScaleKey(  4,   view2,  1.6, 1.6 );
setScaleKey(  5,   view2,  1.6, 1.6 );
setScaleKey(  6,   view2,  1.6, 1.6 );
setRotateKey( 0,   view2,  0 );
setRotateKey( 1,   view2,  0 );
setRotateKey( 2,   view2,  0 );
setRotateKey( 3,   view2,  0 );
setRotateKey( 4,   view2,  0 );
setRotateKey( 5,   view2,  0 );
setRotateKey( 6,   view2,  0 );

view3 = entryCharaView(0, BONUS_CHARACTER_CARD_IDS[3], 0, 0, 0, 4000);  --右
setDisp( 0, view3, 0);
changeAnime( 0, view3, 100);
setDrawFront(0,  view3,  1);
setMoveKey(   0,   view3,    0, 4000 , 0 );
setMoveKey(   1,   view3,    0, 4000 , 0 );
setMoveKey(   2,   view3,    0, 4000 , 0 );
setMoveKey(   3,   view3,    0, 4000 , 0 );
setMoveKey(   4,   view3,    0, 4000 , 0 );
setMoveKey(   5,   view3,    0, 4000 , 0 );
setMoveKey(   6,   view3,    0, 4000 , 0 );
setScaleKey(  0,   view3,  1.6, 1.6 );
setScaleKey(  1,   view3,  1.6, 1.6 );
setScaleKey(  2,   view3,  1.6, 1.6 );
setScaleKey(  3,   view3,  1.6, 1.6 );
setScaleKey(  4,   view3,  1.6, 1.6 );
setScaleKey(  5,   view3,  1.6, 1.6 );
setScaleKey(  6,   view3,  1.6, 1.6 );
setRotateKey( 0,   view3,  0 );
setRotateKey( 1,   view3,  0 );
setRotateKey( 2,   view3,  0 );
setRotateKey( 3,   view3,  0 );
setRotateKey( 4,   view3,  0 );
setRotateKey( 5,   view3,  0 );
setRotateKey( 6,   view3,  0 );

setEnableAura(0,  0,  0);


kame_flag = 0x00;
------------------------------------------------------
-- 足止め演出（共通）
------------------------------------------------------
spep_0 = 0;

-- ** ターゲットラベル ** --
popTargetCursor( spep_0 + 0,  1,  1);
popTargetCursor( spep_0 + 20,  1,  1);

-- ** 敵 ** --
setDisp( spep_0 + 0, 1, 1 );
changeAnime( spep_0 + 0, 1, 103 );
changeAnime( spep_0 + 16, 1, 118 );
changeAnime( spep_0 + 48, 1, 108 );
changeAnime( spep_0 + 54, 1, 117 );
changeAnime( spep_0 + 58, 1, 111 );
changeAnime( spep_0 + 59, 1, 111 );
changeAnime( spep_0 + 60, 1, 111 );
changeAnime( spep_0 + 61, 1, 111 );
changeAnime( spep_0 + 62, 1, 111 );
changeAnime( spep_0 + 66, 1, 114 );
changeAnime( spep_0 + 70, 1, 110 );
changeAnime( spep_0 + 74, 1, 109 );
changeAnime( spep_0 + 78, 1, 113 );
changeAnime( spep_0 + 85, 1, 111 );
changeAnime( spep_0 + 86, 1, 111 );
changeAnime( spep_0 + 92, 1, 103 );
changeAnime( spep_0 + 106, 1, 113 );
changeAnime( spep_0 + 110, 1, 114 );
changeAnime( spep_0 + 114, 1, 109 );
changeAnime( spep_0 + 118, 1, 111 );
changeAnime( spep_0 + 122, 1, 104 );
changeAnime( spep_0 + 136, 1, 109 );
changeAnime( spep_0 + 140, 1, 113 );
changeAnime( spep_0 + 144, 1, 114 );
changeAnime( spep_0 + 148, 1, 110 );
changeAnime( spep_0 + 152, 1, 111 );
changeAnime( spep_0 + 153, 1, 111 );
changeAnime( spep_0 + 154, 1, 111 );
changeAnime( spep_0 + 155, 1, 111 );
changeAnime( spep_0 + 156, 1, 111 );
changeAnime( spep_0 + 182, 1, 117 );
changeAnime( spep_0 + 218, 1, 17 );
changeAnime( spep_0 + 230, 1, 4 );

changeAnime( spep_0 + 234, 1, 11 );
changeAnime( spep_0 + 235, 1, 11 );
changeAnime( spep_0 + 236, 1, 11 );
changeAnime( spep_0 + 237, 1, 11 );
changeAnime( spep_0 + 238, 1, 11 );
changeAnime( spep_0 + 239, 1, 11 );
changeAnime( spep_0 + 240, 1, 12 );
changeAnime( spep_0 + 244, 1, 13 );
changeAnime( spep_0 + 248, 1, 14 );
changeAnime( spep_0 + 254, 1, 9 );
changeAnime( spep_0 + 258, 1, 11 );
changeAnime( spep_0 + 262, 1, 10 );
changeAnime( spep_0 + 266, 1, 13 );
changeAnime( spep_0 + 271, 1, 11 );
changeAnime( spep_0 + 272, 1, 11 );
changeAnime( spep_0 + 276, 1, 10 );
changeAnime( spep_0 + 280, 1, 9 );
changeAnime( spep_0 + 284, 1, 14 );
changeAnime( spep_0 + 292, 1, 17 );


setMoveKey( spep_0 + 0, 1, 606.1, -208.2 , 0 );
setMoveKey( spep_0 + 2, 1, 537.2, -193.9 , 0 );
setMoveKey( spep_0 + 4, 1, 468.4, -179.6 , 0 );
setMoveKey( spep_0 + 6, 1, 399.5, -165.3 , 0 );
setMoveKey( spep_0 + 8, 1, 330.6, -151 , 0 );
setMoveKey( spep_0 + 10, 1, 261.7, -136.7 , 0 );
setMoveKey( spep_0 + 12, 1, 192.9, -122.4 , 0 );
setMoveKey( spep_0 + 15, 1, 124, -108.1 , 0 );
setMoveKey( spep_0 + 16, 1, 94.1, -32.1 , 0 );
setMoveKey( spep_0 + 18, 1, 95.1, -31.1 , 0 );
setMoveKey( spep_0 + 20, 1, 92.1, -34.1 , 0 );
setMoveKey( spep_0 + 22, 1, 98.1, -35.1 , 0 );
setMoveKey( spep_0 + 24, 1, 94.1, -32.1 , 0 );
setMoveKey( spep_0 + 92, 1, 94.1, -32.1 , 0 );
setMoveKey( spep_0 + 94, 1, 78.1, -32.1 , 0 );
setMoveKey( spep_0 + 96, 1, 62.1, -32.1 , 0 );
setMoveKey( spep_0 + 98, 1, 46.1, -32.1 , 0 );
setMoveKey( spep_0 + 100, 1, 30.1, -32.1 , 0 );
setMoveKey( spep_0 + 102, 1, 14.1, -32.1 , 0 );
setMoveKey( spep_0 + 105, 1, 14.1, -32.1 , 0 );
setMoveKey( spep_0 + 106, 1, -5.9, -32.1 , 0 );
setMoveKey( spep_0 + 122, 1, -5.9, -32.1 , 0 );
setMoveKey( spep_0 + 124, 1, 16.9, -43.7 , 0 );
setMoveKey( spep_0 + 126, 1, 39.7, -55.3 , 0 );
setMoveKey( spep_0 + 128, 1, 62.5, -66.9 , 0 );
setMoveKey( spep_0 + 130, 1, 85.3, -78.5 , 0 );
setMoveKey( spep_0 + 132, 1, 108.1, -90.1 , 0 );
setMoveKey( spep_0 + 152, 1, 108.1, -90.1 , 0 );
setMoveKey( spep_0 + 155, 1, 107.3, -90.1 , 0 );
setMoveKey( spep_0 + 156, 1, 106.4, -90.1 , 0 );
setMoveKey( spep_0 + 158, 1, 105.6, -90.1 , 0 );
setMoveKey( spep_0 + 160, 1, 104.7, -90.1 , 0 );
setMoveKey( spep_0 + 162, 1, 103.9, -90.1 , 0 );
setMoveKey( spep_0 + 164, 1, 103, -90.1 , 0 );
setMoveKey( spep_0 + 166, 1, 102.2, -90.1 , 0 );
setMoveKey( spep_0 + 168, 1, 101.3, -90.1 , 0 );
setMoveKey( spep_0 + 170, 1, 100.5, -90.1 , 0 );
setMoveKey( spep_0 + 172, 1, 99.6, -90.1 , 0 );
setMoveKey( spep_0 + 174, 1, 98.8, -90.1 , 0 );
setMoveKey( spep_0 + 176, 1, 97.9, -90.1 , 0 );
setMoveKey( spep_0 + 178, 1, 97.1, -90.1 , 0 );
setMoveKey( spep_0 + 181, 1, 96.2, -90.1 , 0 );
setMoveKey( spep_0 + 182, 1, 108.1, -90.1 , 0 );
setMoveKey( spep_0 + 184, 1, 102.6, -87 , 0 );
setMoveKey( spep_0 + 186, 1, 97, -84 , 0 );
setMoveKey( spep_0 + 188, 1, 91.5, -80.9 , 0 );
setMoveKey( spep_0 + 190, 1, 86, -77.9 , 0 );
setMoveKey( spep_0 + 192, 1, 80.5, -74.8 , 0 );
setMoveKey( spep_0 + 194, 1, 74.9, -71.7 , 0 );
setMoveKey( spep_0 + 196, 1, 69.4, -68.7 , 0 );
setMoveKey( spep_0 + 198, 1, 63.9, -65.6 , 0 );
setMoveKey( spep_0 + 200, 1, 58.3, -62.6 , 0 );
setMoveKey( spep_0 + 202, 1, 52.8, -59.5 , 0 );
setMoveKey( spep_0 + 204, 1, 47.3, -56.5 , 0 );
setMoveKey( spep_0 + 206, 1, 41.7, -53.4 , 0 );
setMoveKey( spep_0 + 208, 1, 36.2, -50.3 , 0 );
setMoveKey( spep_0 + 210, 1, 30.7, -47.3 , 0 );
setMoveKey( spep_0 + 212, 1, 25.2, -44.2 , 0 );
setMoveKey( spep_0 + 214, 1, 19.6, -41.2 , 0 );
setMoveKey( spep_0 + 217, 1, 14.1, -38.1 , 0 );
setMoveKey( spep_0 + 218, 1, 14.1, -38.1 , 0 );
setMoveKey( spep_0 + 220, 1, 9.3, -36.9 , 0 );
setMoveKey( spep_0 + 222, 1, 4.6, -35.7 , 0 );
setMoveKey( spep_0 + 224, 1, -0.2, -34.5 , 0 );
setMoveKey( spep_0 + 226, 1, -4.9, -33.3 , 0 );
setMoveKey( spep_0 + 229, 1, -9.7, -32.1 , 0 );
setMoveKey( spep_0 + 230, 1, -105.9, -32.1 , 0 );
setMoveKey( spep_0 + 247, 1, -105.9, -32.1 , 0 );
setMoveKey( spep_0 + 248, 1, -65.9, -32.1 , 0 );
setMoveKey( spep_0 + 283, 1, -65.9, -32.1 , 0 );
setMoveKey( spep_0 + 284, 1, -25.9, -32.1 , 0 );
setMoveKey( spep_0 + 286, 1, -21.9, -28.1 , 0 );
setMoveKey( spep_0 + 288, 1, -18, -24.2 , 0 );
setMoveKey( spep_0 + 291, 1, -14, -20.2 , 0 );
setMoveKey( spep_0 + 292, 1, -25.9, -32.1 , 0 );
setMoveKey( spep_0 + 294, 1, -23.5, -32.1 , 0 );
setMoveKey( spep_0 + 296, 1, -21.1, -32.1 , 0 );
setMoveKey( spep_0 + 298, 1, -18.8, -32.1 , 0 );
setMoveKey( spep_0 + 300, 1, -16.4, -32.1 , 0 );
setMoveKey( spep_0 + 302, 1, -14, -32.1 , 0 );
setScaleKey( spep_0 + 0, 1, 1, 1 );
setScaleKey( spep_0 + 54, 1, 1, 1 );
setScaleKey( spep_0 + 57, 1, 0.99, 0.99 );
setScaleKey( spep_0 + 58, 1, 0.99, 0.99 );
setScaleKey( spep_0 + 61, 1, 0.98, 0.98 );
setScaleKey( spep_0 + 62, 1, 0.98, 0.98 );
setScaleKey( spep_0 + 65, 1, 0.97, 0.97 );
setScaleKey( spep_0 + 66, 1, 0.97, 0.97 );
setScaleKey( spep_0 + 69, 1, 0.96, 0.96 );
setScaleKey( spep_0 + 70, 1, 0.96, 0.96 );
setScaleKey( spep_0 + 73, 1, 0.95, 0.95 );
setScaleKey( spep_0 + 74, 1, 0.95, 0.95 );
setScaleKey( spep_0 + 77, 1, 0.94, 0.94 );
setScaleKey( spep_0 + 78, 1, 0.94, 0.94 );
setScaleKey( spep_0 + 80, 1, 0.93, 0.93 );
setScaleKey( spep_0 + 83, 1, 0.93, 0.93 );
setScaleKey( spep_0 + 85, 1, 0.92, 0.92 );
setScaleKey( spep_0 + 86, 1, 0.92, 0.92 );
setScaleKey( spep_0 + 88, 1, 0.91, 0.91 );
setScaleKey( spep_0 + 91, 1, 0.91, 0.91 );
setScaleKey( spep_0 + 92, 1, 0.9, 0.9 );
setScaleKey( spep_0 + 94, 1, 0.91, 0.91 );
setScaleKey( spep_0 + 96, 1, 0.91, 0.91 );
setScaleKey( spep_0 + 98, 1, 0.92, 0.92 );
setScaleKey( spep_0 + 100, 1, 0.93, 0.93 );
setScaleKey( spep_0 + 102, 1, 0.93, 0.93 );
setScaleKey( spep_0 + 105, 1, 0.94, 0.94 );
setScaleKey( spep_0 + 106, 1, 0.95, 0.95 );
setScaleKey( spep_0 + 109, 1, 0.95, 0.95 );
setScaleKey( spep_0 + 110, 1, 0.96, 0.96 );
setScaleKey( spep_0 + 113, 1, 0.97, 0.97 );
setScaleKey( spep_0 + 114, 1, 0.97, 0.97 );
setScaleKey( spep_0 + 117, 1, 0.98, 0.98 );
setScaleKey( spep_0 + 118, 1, 0.99, 0.99 );
setScaleKey( spep_0 + 121, 1, 0.99, 0.99 );
setScaleKey( spep_0 + 122, 1, 1, 1 );
setScaleKey( spep_0 + 124, 1, 1.02, 1.02 );
setScaleKey( spep_0 + 126, 1, 1.05, 1.05 );
setScaleKey( spep_0 + 128, 1, 1.07, 1.07 );
setScaleKey( spep_0 + 130, 1, 1.09, 1.09 );
setScaleKey( spep_0 + 132, 1, 1.12, 1.12 );
setScaleKey( spep_0 + 135, 1, 1.14, 1.14 );
setScaleKey( spep_0 + 136, 1, 1.16, 1.16 );
setScaleKey( spep_0 + 139, 1, 1.18, 1.18 );
setScaleKey( spep_0 + 140, 1, 1.21, 1.21 );
setScaleKey( spep_0 + 143, 1, 1.23, 1.23 );
setScaleKey( spep_0 + 144, 1, 1.25, 1.25 );
setScaleKey( spep_0 + 147, 1, 1.28, 1.28 );
setScaleKey( spep_0 + 148, 1, 1.3, 1.3 );
setScaleKey( spep_0 + 294, 1, 1.3, 1.3 );
setScaleKey( spep_0 + 296, 1, 1.2, 1.2 );
setScaleKey( spep_0 + 298, 1, 1.1, 1.1 );
setScaleKey( spep_0 + 300, 1, 1, 1 );
setScaleKey( spep_0 + 302, 1, 0.9, 0.9 );
setRotateKey( spep_0 + 0, 1, 0 );
setRotateKey( spep_0 + 302, 1, 0 );



-- ** サポーター1人目 ** --
--view2 = entryCharaView(spep_0 + 14, BONUS_CHARACTER_CARD_IDS[2], 0, -150, 80 , 0 );
setDisp( spep_0 + 14,  view2,  1);
setDisp( spep_0 + 164,  view2,  0);
changeAnime( spep_0 + 14, view2, 0 );
changeAnime( spep_0 + 40, view2, 17 );
changeAnime( spep_0 + 42, view2, 11 );
changeAnime( spep_0 + 43, view2, 11 );
changeAnime( spep_0 + 44, view2, 11 );
changeAnime( spep_0 + 45, view2, 11 );
changeAnime( spep_0 + 46, view2, 11 );
changeAnime( spep_0 + 47, view2, 11 );
changeAnime( spep_0 + 48, view2, 11 );
changeAnime( spep_0 + 49, view2, 11 );
changeAnime( spep_0 + 62, view2, 8 );
changeAnime( spep_0 + 66, view2, 14 );
changeAnime( spep_0 + 70, view2, 10 );
changeAnime( spep_0 + 74, view2, 9 );
changeAnime( spep_0 + 78, view2, 10 );
changeAnime( spep_0 + 84, view2, 13 );
changeAnime( spep_0 + 88, view2, 6 );
changeAnime( spep_0 + 102, view2, 4 );
changeAnime( spep_0 + 116, view2, 12 );
changeAnime( spep_0 + 126, view2, 3 );
changeAnime( spep_0 + 134, view2, 13 );
changeAnime( spep_0 + 138, view2, 11 );
changeAnime( spep_0 + 139, view2, 11 );
changeAnime( spep_0 + 140, view2, 11 );
changeAnime( spep_0 + 142, view2, 9 );
changeAnime( spep_0 + 148, view2, 4 );
changeAnime( spep_0 + 152, view2, 9 );
changeAnime( spep_0 + 158, view2, 6 );

setMoveKey( spep_0 + 14, view2, -150, 80 , 0 );
setMoveKey( spep_0 + 38, view2, -150, 80 , 0 );
setMoveKey( spep_0 + 42, view2, -34, -30.1 , 0 );
setMoveKey( spep_0 + 44, view2, -34, -30.1 , 0 );
setMoveKey( spep_0 + 46, view2, -34, -30.1 , 0 );
setMoveKey( spep_0 + 60, view2, -34, -30.1 , 0 );
setMoveKey( spep_0 + 62, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 66, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 68, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 70, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 72, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 78, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 74, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 76, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 82, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 84, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 86, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 88, view2, -74, -30.1 , 0 );
setMoveKey( spep_0 + 90, view2, -94, -30.1 , 0 );
setMoveKey( spep_0 + 92, view2, -114, -30.1 , 0 );
setMoveKey( spep_0 + 94, view2, -134, -30.1 , 0 );
setMoveKey( spep_0 + 96, view2, -154, -30.1 , 0 );
setMoveKey( spep_0 + 98, view2, -174, -30.1 , 0 );
setMoveKey( spep_0 + 100, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 102, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 110, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 112, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 116, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 122, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 126, view2, -194, -30.1 , 0 );
setMoveKey( spep_0 + 128, view2, -152.6, -50.8 , 0 );
setMoveKey( spep_0 + 130, view2, -111.3, -71.4 , 0 );
setMoveKey( spep_0 + 132, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 134, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 138, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 140, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 144, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 146, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 148, view2, -69.9, -92.1 , 0 );
setMoveKey( spep_0 + 152, view2, -74, -90.1 , 0 );
setMoveKey( spep_0 + 158, view2, -74, -90.1 , 0 );
--setMoveKey( spep_0 + 158, view2, -154, -90.1 , 0 );
setMoveKey( spep_0 + 160, view2, -335.4, -47.4 , 0 );
setMoveKey( spep_0 + 162, view2, -516.7, -4.7 , 0 );
setMoveKey( spep_0 + 164, view2, -698.1, 38 , 0 );
setScaleKey( spep_0 + 14, view2, 1, 1 );
setScaleKey( spep_0 + 40, view2, 1, 1 );
setScaleKey( spep_0 + 42, view2, 1, 1 );
setScaleKey( spep_0 + 44, view2, 1, 1 );
setScaleKey( spep_0 + 46, view2, 1, 1 );
setScaleKey( spep_0 + 54, view2, 1, 1 );
setScaleKey( spep_0 + 56, view2, 0.99, 0.99 );
setScaleKey( spep_0 + 58, view2, 0.99, 0.99 );
setScaleKey( spep_0 + 60, view2, 0.98, 0.98 );
setScaleKey( spep_0 + 62, view2, 0.98, 0.98 );
setScaleKey( spep_0 + 64, view2, 0.97, 0.97 );
setScaleKey( spep_0 + 66, view2, 0.97, 0.97 );
setScaleKey( spep_0 + 68, view2, 0.96, 0.96 );
setScaleKey( spep_0 + 70, view2, 0.96, 0.96 );
setScaleKey( spep_0 + 72, view2, 0.95, 0.95 );
setScaleKey( spep_0 + 74, view2, 0.95, 0.95 );
setScaleKey( spep_0 + 76, view2, 0.94, 0.94 );
setScaleKey( spep_0 + 78, view2, 0.94, 0.94 );
setScaleKey( spep_0 + 80, view2, 0.93, 0.93 );
setScaleKey( spep_0 + 82, view2, 0.93, 0.93 );
setScaleKey( spep_0 + 84, view2, 0.92, 0.92 );
setScaleKey( spep_0 + 86, view2, 0.92, 0.92 );
setScaleKey( spep_0 + 88, view2, 0.91, 0.91 );
setScaleKey( spep_0 + 90, view2, 0.91, 0.91 );
setScaleKey( spep_0 + 92, view2, 0.9, 0.9 );
setScaleKey( spep_0 + 94, view2, 0.91, 0.91 );
setScaleKey( spep_0 + 96, view2, 0.91, 0.91 );
setScaleKey( spep_0 + 98, view2, 0.92, 0.92 );
setScaleKey( spep_0 + 100, view2, 0.93, 0.93 );
setScaleKey( spep_0 + 102, view2, 0.93, 0.93 );
setScaleKey( spep_0 + 104, view2, 0.94, 0.94 );
setScaleKey( spep_0 + 106, view2, 0.95, 0.95 );
setScaleKey( spep_0 + 108, view2, 0.95, 0.95 );
setScaleKey( spep_0 + 110, view2, 0.96, 0.96 );
setScaleKey( spep_0 + 112, view2, 0.97, 0.97 );
setScaleKey( spep_0 + 116, view2, 0.98, 0.98 );
setScaleKey( spep_0 + 118, view2, 0.99, 0.99 );
setScaleKey( spep_0 + 122, view2, 1, 1 );
setScaleKey( spep_0 + 124, view2, 1.02, 1.02 );
setScaleKey( spep_0 + 126, view2, 1.05, 1.05 );
setScaleKey( spep_0 + 128, view2, 1.07, 1.07 );
setScaleKey( spep_0 + 130, view2, 1.09, 1.09 );
setScaleKey( spep_0 + 132, view2, 1.12, 1.12 );
setScaleKey( spep_0 + 134, view2, 1.14, 1.14 );
setScaleKey( spep_0 + 136, view2, 1.16, 1.16 );
setScaleKey( spep_0 + 138, view2, 1.18, 1.18 );
setScaleKey( spep_0 + 140, view2, 1.21, 1.21 );
setScaleKey( spep_0 + 142, view2, 1.23, 1.23 );
setScaleKey( spep_0 + 144, view2, 1.25, 1.25 );
setScaleKey( spep_0 + 146, view2, 1.28, 1.28 );
setScaleKey( spep_0 + 148, view2, 1.3, 1.3 );
setScaleKey( spep_0 + 152, view2, 1.3, 1.3 );
setScaleKey( spep_0 + 158, view2, 1.3, 1.3 );
setScaleKey( spep_0 + 294, view2, 1.3, 1.3 );
setScaleKey( spep_0 + 296, view2, 1.2, 1.2 );
setScaleKey( spep_0 + 298, view2, 1.1, 1.1 );
setScaleKey( spep_0 + 300, view2, 1, 1 );
setScaleKey( spep_0 + 302, view2, 0.9, 0.9 );
setRotateKey( spep_0 + 14, view2, 0 );
setRotateKey( spep_0 + 164, view2, 0 );


-- ** サポーター2人目 ** --
--view1 = entryCharaView(spep_0 + 48, BONUS_CHARACTER_CARD_IDS[1], 0, 20.1, 180 , 0 );
setDisp( spep_0 + 48,  view1,  1);  --突進
setDisp( spep_0 + 88,  view1,  0);  --一度画面外へ
changeAnime( spep_0 + 48,  view1,  16);  
setMoveKey( spep_0 + 48, view1, 20.1, 180 , 0 );
setMoveKey( spep_0 + 50, view1, 49, 182 , 0 );
setMoveKey( spep_0 + 52, view1, 78, 184 , 0 );
setMoveKey( spep_0 + 54, view1, 107, 186 , 0 );
setMoveKey( spep_0 + 56, view1, 136, 188 , 0 );
setMoveKey( spep_0 + 58, view1, 164.9, 190 , 0 );
setMoveKey( spep_0 + 60, view1, 193.9, 192 , 0 );
setMoveKey( spep_0 + 62, view1, 222.9, 194 , 0 );
setMoveKey( spep_0 + 64, view1, 251.9, 196 , 0 );
setMoveKey( spep_0 + 66, view1, 280.8, 198 , 0 );
setMoveKey( spep_0 + 68, view1, 309.8, 200 , 0 );
setMoveKey( spep_0 + 70, view1, 338.8, 202 , 0 );
setMoveKey( spep_0 + 72, view1, 367.7, 204 , 0 );
setMoveKey( spep_0 + 74, view1, 396.7, 206 , 0 );
setMoveKey( spep_0 + 76, view1, 425.7, 208 , 0 );
setMoveKey( spep_0 + 78, view1, 454.7, 210 , 0 );
setMoveKey( spep_0 + 80, view1, 483.6, 212 , 0 );
setMoveKey( spep_0 + 82, view1, 512.6, 214 , 0 );
setMoveKey( spep_0 + 84, view1, 541.6, 216 , 0 );
setMoveKey( spep_0 + 86, view1, 570.5, 218 , 0 );
setMoveKey( spep_0 + 88, view1, 599.5, 220 , 0 );
setScaleKey( spep_0 + 48, view1, 0.1, 0.1 );
setScaleKey( spep_0 + 50, view1, 0.15, 0.15 );
setScaleKey( spep_0 + 52, view1, 0.19, 0.19 );
setScaleKey( spep_0 + 54, view1, 0.24, 0.24 );
setScaleKey( spep_0 + 56, view1, 0.28, 0.28 );
setScaleKey( spep_0 + 58, view1, 0.33, 0.33 );
setScaleKey( spep_0 + 60, view1, 0.37, 0.37 );
setScaleKey( spep_0 + 62, view1, 0.42, 0.42 );
setScaleKey( spep_0 + 64, view1, 0.46, 0.46 );
setScaleKey( spep_0 + 66, view1, 0.51, 0.51 );
setScaleKey( spep_0 + 68, view1, 0.55, 0.55 );
setScaleKey( spep_0 + 70, view1, 0.6, 0.6 );
setScaleKey( spep_0 + 72, view1, 0.64, 0.64 );
setScaleKey( spep_0 + 74, view1, 0.69, 0.69 );
setScaleKey( spep_0 + 76, view1, 0.73, 0.73 );
setScaleKey( spep_0 + 78, view1, 0.78, 0.78 );
setScaleKey( spep_0 + 80, view1, 0.82, 0.82 );
setScaleKey( spep_0 + 82, view1, 0.87, 0.87 );
setScaleKey( spep_0 + 84, view1, 0.91, 0.91 );
setScaleKey( spep_0 + 86, view1, 0.96, 0.96 );
setScaleKey( spep_0 + 88, view1, 1, 1 );
setRotateKey( spep_0 + 48, view1, 0 );
setRotateKey( spep_0 + 88, view1, 0 );


setDisp( spep_0 + 226,  view1,  1);  --格闘
setDisp( spep_0 + 292,  view1,  0);
changeAnime( spep_0 + 226,  view1,  111);  
changeAnime( spep_0 + 227,  view1,  111);  
changeAnime( spep_0 + 228,  view1,  111);  
changeAnime( spep_0 + 229,  view1,  111);  
changeAnime( spep_0 + 230,  view1,  111);  
changeAnime( spep_0 + 232,  view1,  112);
changeAnime( spep_0 + 238,  view1,  114);
changeAnime( spep_0 + 242,  view1,  110);
changeAnime( spep_0 + 248,  view1,  104);
changeAnime( spep_0 + 256,  view1,  113);
changeAnime( spep_0 + 260,  view1,  110);
changeAnime( spep_0 + 268,  view1,  109);
changeAnime( spep_0 + 272,  view1,  111); 
changeAnime( spep_0 + 273,  view1,  111); 
changeAnime( spep_0 + 274,  view1,  111); 
changeAnime( spep_0 + 278,  view1,  114); 
changeAnime( spep_0 + 286,  view1,  106); 

setMoveKey( spep_0 + 226, view1, 138, -30.1 , 0 );
setMoveKey( spep_0 + 228, view1, 138, -30.1 , 0 );
setMoveKey( spep_0 + 230, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 232, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 234, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 238, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 240, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 242, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 246, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 248, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 256, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 260, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 268, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 272, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 274, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 278, view1, 78, -30.1 , 0 );
setMoveKey( spep_0 + 286, view1, 138, 9.9 , 0 );
setMoveKey( spep_0 + 288, view1, 284, 85.9 , 0 );
setMoveKey( spep_0 + 290, view1, 430.1, 162 , 0 );
setMoveKey( spep_0 + 292, view1, 576.1, 238 , 0 );
setScaleKey( spep_0 + 226, view1, 1.3, 1.3 );
setScaleKey( spep_0 + 278, view1, 1.3, 1.3 );
setScaleKey( spep_0 + 286, view1, 1.3, 1.3 );
setScaleKey( spep_0 + 294, view1, 1.3, 1.3 );
setScaleKey( spep_0 + 296, view1, 1.2, 1.2 );
setScaleKey( spep_0 + 298, view1, 1.1, 1.1 );
setScaleKey( spep_0 + 300, view1, 1, 1 );
setScaleKey( spep_0 + 302, view1, 0.9, 0.9 );
setRotateKey( spep_0 + 226, view1, 0 );
setRotateKey( spep_0 + 292, view1, 0 );

-- ** 3人目 ** --
--view3 = entryCharaView(spep_0 + 54, BONUS_CHARACTER_CARD_IDS[3], 0, -19.9, 180 , 0 );
setDisp( spep_0 + 54,  view3,  1);  --突進
setDisp( spep_0 + 94,  view3,  0);  
changeAnime( spep_0 + 54,  view3,  116);
setMoveKey( spep_0 + 54, view3, -19.9, 180 , 0 );
setMoveKey( spep_0 + 56, view3, -48.9, 192 , 0 );
setMoveKey( spep_0 + 58, view3, -77.9, 204 , 0 );
setMoveKey( spep_0 + 60, view3, -106.9, 216 , 0 );
setMoveKey( spep_0 + 62, view3, -135.9, 228 , 0 );
setMoveKey( spep_0 + 64, view3, -164.8, 240 , 0 );
setMoveKey( spep_0 + 66, view3, -193.8, 252 , 0 );
setMoveKey( spep_0 + 68, view3, -222.8, 264 , 0 );
setMoveKey( spep_0 + 70, view3, -251.8, 276 , 0 );
setMoveKey( spep_0 + 72, view3, -280.7, 288 , 0 );
setMoveKey( spep_0 + 74, view3, -309.7, 300 , 0 );
setMoveKey( spep_0 + 76, view3, -338.7, 312 , 0 );
setMoveKey( spep_0 + 78, view3, -367.6, 324 , 0 );
setMoveKey( spep_0 + 80, view3, -396.6, 336 , 0 );
setMoveKey( spep_0 + 82, view3, -425.6, 348 , 0 );
setMoveKey( spep_0 + 84, view3, -454.6, 360 , 0 );
setMoveKey( spep_0 + 86, view3, -483.5, 372 , 0 );
setMoveKey( spep_0 + 88, view3, -512.5, 384 , 0 );
setMoveKey( spep_0 + 90, view3, -541.5, 396 , 0 );
setMoveKey( spep_0 + 92, view3, -570.4, 408 , 0 );
setMoveKey( spep_0 + 94, view3, -599.4, 420 , 0 );
setScaleKey( spep_0 + 54, view3, 0.1, 0.1 );
setScaleKey( spep_0 + 56, view3, 0.15, 0.15 );
setScaleKey( spep_0 + 58, view3, 0.19, 0.19 );
setScaleKey( spep_0 + 60, view3, 0.24, 0.24 );
setScaleKey( spep_0 + 62, view3, 0.28, 0.28 );
setScaleKey( spep_0 + 64, view3, 0.33, 0.33 );
setScaleKey( spep_0 + 66, view3, 0.37, 0.37 );
setScaleKey( spep_0 + 68, view3, 0.42, 0.42 );
setScaleKey( spep_0 + 70, view3, 0.46, 0.46 );
setScaleKey( spep_0 + 72, view3, 0.51, 0.51 );
setScaleKey( spep_0 + 74, view3, 0.55, 0.55 );
setScaleKey( spep_0 + 76, view3, 0.6, 0.6 );
setScaleKey( spep_0 + 78, view3, 0.64, 0.64 );
setScaleKey( spep_0 + 80, view3, 0.69, 0.69 );
setScaleKey( spep_0 + 82, view3, 0.73, 0.73 );
setScaleKey( spep_0 + 84, view3, 0.78, 0.78 );
setScaleKey( spep_0 + 86, view3, 0.82, 0.82 );
setScaleKey( spep_0 + 88, view3, 0.87, 0.87 );
setScaleKey( spep_0 + 90, view3, 0.91, 0.91 );
setScaleKey( spep_0 + 92, view3, 0.96, 0.96 );
setScaleKey( spep_0 + 94, view3, 1, 1 );
setRotateKey( spep_0 + 54, view3, 0 );
setRotateKey( spep_0 + 94, view3, 0 );

setDisp( spep_0 + 228,  view3,  1);  --通り過ぎる
setDisp( spep_0 + 268,  view3,  0); 
changeAnime( spep_0 + 228,  view3,  18);
setMoveKey( spep_0 + 228, view3, -828.2, -166.1 , 0 );
setMoveKey( spep_0 + 230, view3, -746.2, -164.1 , 0 );
setMoveKey( spep_0 + 232, view3, -664.1, -162.1 , 0 );
setMoveKey( spep_0 + 234, view3, -582.1, -160.1 , 0 );
setMoveKey( spep_0 + 236, view3, -500.1, -158.1 , 0 );
setMoveKey( spep_0 + 238, view3, -418.1, -156.1 , 0 );
setMoveKey( spep_0 + 240, view3, -336, -154.1 , 0 );
setMoveKey( spep_0 + 242, view3, -254, -152.1 , 0 );
setMoveKey( spep_0 + 244, view3, -172, -150.1 , 0 );
setMoveKey( spep_0 + 246, view3, -90, -148.1 , 0 );
setMoveKey( spep_0 + 248, view3, -7.9, -146.1 , 0 );
setMoveKey( spep_0 + 250, view3, 74.1, -144.1 , 0 );
setMoveKey( spep_0 + 252, view3, 156.1, -142.1 , 0 );
setMoveKey( spep_0 + 254, view3, 238.1, -140.1 , 0 );
setMoveKey( spep_0 + 256, view3, 320.2, -138.1 , 0 );
setMoveKey( spep_0 + 258, view3, 402.2, -136.1 , 0 );
setMoveKey( spep_0 + 260, view3, 484.2, -134.1 , 0 );
setMoveKey( spep_0 + 262, view3, 566.2, -132.1 , 0 );
setMoveKey( spep_0 + 264, view3, 648.3, -130.1 , 0 );
setMoveKey( spep_0 + 266, view3, 730.3, -128.1 , 0 );
setMoveKey( spep_0 + 268, view3, 812.3, -126.1 , 0 );
setScaleKey( spep_0 + 228, view3, 2.6, 2.6 );
setScaleKey( spep_0 + 268, view3, 2.6, 2.6 );
setRotateKey( spep_0 + 228, view3, 0 );
setRotateKey( spep_0 + 268, view3, 0 );


-- ** 書き文字 ** --
ctex = entryEffectLife( spep_0 + 16,  10000, 20, 0x100, -1, 0, 146.1, 105.9 );
setEffMoveKey( spep_0 + 16, ctex, 146.1, 105.9 , 0 );
setEffMoveKey( spep_0 + 18, ctex, 148.1, 107.9 , 0 );
setEffMoveKey( spep_0 + 20, ctex, 144.1, 103.9 , 0 );
setEffMoveKey( spep_0 + 22, ctex, 148.1, 103.9 , 0 );
setEffMoveKey( spep_0 + 24, ctex, 146.1, 105.9 , 0 );
setEffScaleKey( spep_0 + 16, ctex, 0.86, 0.86 );
setEffRotateKey( spep_0 + 16, ctex, 0 );
setEffAlphaKey( spep_0 + 16, ctex, 255 );

ctbaki = entryEffectLife( spep_0 + 48,  10020, 8, 0x100, -1, 0, 24, -204.2 );  --バキ
setEffMoveKey( spep_0 + 48, ctbaki, 24, -204.2 , 0 );
setEffMoveKey( spep_0 + 50, ctbaki, 30.8, -206.4 , 0 );
setEffMoveKey( spep_0 + 52, ctbaki, 17.3, -201.9 , 0 );
setEffMoveKey( spep_0 + 54, ctbaki, 21.3, -207.8 , 0 );
setEffMoveKey( spep_0 + 56, ctbaki, 26.3, -197.4 , 0 );
setEffScaleKey( spep_0 + 48, ctbaki, 1, 1 );
setEffScaleKey( spep_0 + 56, ctbaki, 1, 1 );
setEffRotateKey( spep_0 + 56, ctbaki, 0 );
setEffAlphaKey( spep_0 + 48, ctbaki, 255 );
setEffAlphaKey( spep_0 + 56, ctbaki, 255 );


ctgaga = entryEffectLife( spep_0 + 64,  10002, 26, 0x100, -1, 0, -43.9, 154 );  --ガガ
setEffMoveKey( spep_0 + 64, ctgaga, -43.9, 154 , 0 );
setEffMoveKey( spep_0 + 68, ctgaga, -43.9, 154 , 0 );
setEffMoveKey( spep_0 + 70, ctgaga, -40.4, 157.5 , 0 );
setEffMoveKey( spep_0 + 72, ctgaga, -40.4, 150.5 , 0 );
setEffMoveKey( spep_0 + 74, ctgaga, -50.9, 157.5 , 0 );
setEffMoveKey( spep_0 + 76, ctgaga, -47.4, 150.5 , 0 );
setEffMoveKey( spep_0 + 78, ctgaga, -43.9, 154 , 0 );
setEffMoveKey( spep_0 + 80, ctgaga, -40.4, 157.5 , 0 );
setEffMoveKey( spep_0 + 82, ctgaga, -40.4, 150.5 , 0 );
setEffMoveKey( spep_0 + 84, ctgaga, -50.9, 157.5 , 0 );
setEffMoveKey( spep_0 + 86, ctgaga, -47.4, 150.5 , 0 );
setEffMoveKey( spep_0 + 88, ctgaga, -43.9, 154 , 0 );
setEffMoveKey( spep_0 + 90, ctgaga, -40.4, 157.5 , 0 );
setEffScaleKey( spep_0 + 64, ctgaga, 1.4, 0.14 );
setEffScaleKey( spep_0 + 66, ctgaga, 1.4, 0.77 );
setEffScaleKey( spep_0 + 68, ctgaga, 1.4, 1.4 );
setEffScaleKey( spep_0 + 90, ctgaga, 1.4, 1.4 );
setEffRotateKey( spep_0 + 64, ctgaga, 0 );
setEffRotateKey( spep_0 + 90, ctgaga, 0 );
setEffAlphaKey( spep_0 + 64, ctgaga, 255 );
setEffAlphaKey( spep_0 + 90, ctgaga, 255 );

ctdogaga = entryEffectLife( spep_0 + 106,  10017, 14, 0x100, -1, 0, -149, 148.1 );  --ドガガ
setEffMoveKey( spep_0 + 106, ctdogaga, -149, 148.1 , 0 );
setEffMoveKey( spep_0 + 108, ctdogaga, -154, 151.6 , 0 );
setEffMoveKey( spep_0 + 110, ctdogaga, -139.5, 145.3 , 0 );
setEffMoveKey( spep_0 + 112, ctdogaga, -152.5, 142.9 , 0 );
setEffMoveKey( spep_0 + 114, ctdogaga, -146.2, 157.5 , 0 );
setEffMoveKey( spep_0 + 116, ctdogaga, -149, 148.1 , 0 );
setEffMoveKey( spep_0 + 118, ctdogaga, -154, 151.6 , 0 );
setEffMoveKey( spep_0 + 120, ctdogaga, -139.5, 145.3 , 0 );
setEffScaleKey( spep_0 + 106, ctdogaga, 1.4, 1.4 );
setEffScaleKey( spep_0 + 120, ctdogaga, 1.4, 1.4 );
setEffRotateKey( spep_0 + 106, ctdogaga, 0 );
setEffRotateKey( spep_0 + 120, ctdogaga, 0 );
setEffAlphaKey( spep_0 + 106, ctdogaga, 255 );
setEffAlphaKey( spep_0 + 120, ctdogaga, 255 );

ctgagaga = entryEffectLife( spep_0 + 136,  10002, 20, 0x100, -1, 0, 49.1, 142 );  --ガガ
setEffMoveKey( spep_0 + 136, ctgagaga, 49.1, 142 , 0 );
setEffMoveKey( spep_0 + 140, ctgagaga, 49.1, 142 , 0 );
setEffMoveKey( spep_0 + 142, ctgagaga, 54.8, 147.7 , 0 );
setEffMoveKey( spep_0 + 144, ctgagaga, 54.8, 136.3 , 0 );
setEffMoveKey( spep_0 + 146, ctgagaga, 37.7, 147.7 , 0 );
setEffMoveKey( spep_0 + 148, ctgagaga, 43.4, 136.3 , 0 );
setEffMoveKey( spep_0 + 150, ctgagaga, 49.1, 142 , 0 );
setEffMoveKey( spep_0 + 152, ctgagaga, 54.8, 147.7 , 0 );
setEffMoveKey( spep_0 + 154, ctgagaga, 54.8, 136.3 , 0 );
setEffMoveKey( spep_0 + 156, ctgagaga, 37.7, 147.7 , 0 );
setEffScaleKey( spep_0 + 136, ctgagaga, 2.28, 0.23 );
setEffScaleKey( spep_0 + 138, ctgagaga, 2.28, 1.25 );
setEffScaleKey( spep_0 + 140, ctgagaga, 2.28, 2.28 );
setEffScaleKey( spep_0 + 156, ctgagaga, 2.28, 2.28 );
setEffRotateKey( spep_0 + 136, ctgagaga, 0 );
setEffRotateKey( spep_0 + 156, ctgagaga, 0 );
setEffAlphaKey( spep_0 + 136, ctgagaga, 255 );
setEffAlphaKey( spep_0 + 156, ctgagaga, 255 );

ctbago = entryEffectLife( spep_0 + 156,  10021, 18, 0x100, -1, 0, -64.7, -270.1 );
setEffMoveKey( spep_0 + 156, ctbago, -64.7, -270.1 , 0 );
setEffMoveKey( spep_0 + 158, ctbago, -53.7, -266.7 , 0 );
setEffMoveKey( spep_0 + 160, ctbago, -77.6, -277.2 , 0 );
setEffMoveKey( spep_0 + 162, ctbago, -64.4, -261 , 0 );
setEffMoveKey( spep_0 + 164, ctbago, -59.4, -277.6 , 0 );
setEffMoveKey( spep_0 + 166, ctbago, -64.7, -270.1 , 0 );
setEffMoveKey( spep_0 + 168, ctbago, -53.7, -266.7 , 0 );
setEffMoveKey( spep_0 + 170, ctbago, -77.6, -277.2 , 0 );
setEffMoveKey( spep_0 + 172, ctbago, -64.4, -261 , 0 );
setEffMoveKey( spep_0 + 174, ctbago, -59.4, -277.6 , 0 );
setEffScaleKey( spep_0 + 156, ctbago, 1.61, 1.61 );
setEffScaleKey( spep_0 + 174, ctbago, 1.61, 1.61 );
setEffRotateKey( spep_0 + 156, ctbago, 14 );
setEffRotateKey( spep_0 + 174, ctbago, 14 );
setEffAlphaKey( spep_0 + 156, ctbago, 255 );
setEffAlphaKey( spep_0 + 174, ctbago, 255 );

ctbaki2 = entryEffectLife( spep_0 + 230,  10020, 8, 0x100, -1, 0, -12, -220.1 );
setEffMoveKey( spep_0 + 230, ctbaki2, -12, -220.1 , 0 );
setEffMoveKey( spep_0 + 232, ctbaki2, -5.2, -222.3 , 0 );
setEffMoveKey( spep_0 + 234, ctbaki2, -18.7, -217.8 , 0 );
setEffMoveKey( spep_0 + 236, ctbaki2, -14.7, -223.7 , 0 );
setEffMoveKey( spep_0 + 238, ctbaki2, -9.7, -213.3 , 0 );
setEffScaleKey( spep_0 + 230, ctbaki2, 1, 1 );
setEffRotateKey( spep_0 + 230, ctbaki2, 0 );
setEffAlphaKey( spep_0 + 230, ctbaki2, 255 );

ctdogaga2 = entryEffectLife( spep_0 + 258,  10017, 30, 0x100, -1, 0, 64.9, 256 );
setEffMoveKey( spep_0 + 258, ctdogaga2, 64.9, 256 , 0 );
setEffMoveKey( spep_0 + 260, ctdogaga2, 58.3, 263 , 0 );
setEffMoveKey( spep_0 + 262, ctdogaga2, 78.6, 248.6 , 0 );
setEffMoveKey( spep_0 + 264, ctdogaga2, 57.8, 249.2 , 0 );
setEffMoveKey( spep_0 + 266, ctdogaga2, 72.3, 269.5 , 0 );
setEffMoveKey( spep_0 + 268, ctdogaga2, 64.9, 256 , 0 );
setEffMoveKey( spep_0 + 270, ctdogaga2, 58.3, 263 , 0 );
setEffMoveKey( spep_0 + 272, ctdogaga2, 78.6, 248.6 , 0 );
setEffMoveKey( spep_0 + 274, ctdogaga2, 57.8, 249.2 , 0 );
setEffMoveKey( spep_0 + 276, ctdogaga2, 72.3, 269.5 , 0 );
setEffMoveKey( spep_0 + 278, ctdogaga2, 64.9, 256 , 0 );
setEffMoveKey( spep_0 + 280, ctdogaga2, 58.3, 263 , 0 );
setEffMoveKey( spep_0 + 282, ctdogaga2, 78.6, 248.6 , 0 );
setEffMoveKey( spep_0 + 284, ctdogaga2, 57.8, 249.2 , 0 );
setEffMoveKey( spep_0 + 286, ctdogaga2, 72.3, 269.5 , 0 );
setEffScaleKey( spep_0 + 258, ctdogaga2, 2.2, 2.2 );
setEffRotateKey( spep_0 + 258, ctdogaga2, 12 );
setEffAlphaKey( spep_0 + 258, ctdogaga2, 255 );

ctbago2 = entryEffectLife( spep_0 + 284,  10021, 8, 0x100, -1, 0, 152, -238.1 );
setEffMoveKey( spep_0 + 284, ctbago2, 152, -238.1 , 0 );
setEffMoveKey( spep_0 + 286, ctbago2, 159.5, -229.3 , 0 );
setEffMoveKey( spep_0 + 288, ctbago2, 144.8, -251 , 0 );
setEffMoveKey( spep_0 + 290, ctbago2, 147.4, -230.2 , 0 );
setEffMoveKey( spep_0 + 292, ctbago2, 160.5, -241.6 , 0 );
setEffScaleKey( spep_0 + 284, ctbago2, 1.62, 1.62 );
setEffRotateKey( spep_0 + 284, ctbago2, -18 );
setEffAlphaKey( spep_0 + 284, ctbago2, 255 );

-- ** 瞬間移動 ** --
shun = entryEffectLife( spep_0 + 10,  700, 8, 0x100, -1, 0, -150, 80 );
setEffMoveKey( spep_0 + 10, shun, -150, 80 , 0 );
setEffMoveKey( spep_0 + 12, shun, -150, 80 , 0 );
setEffMoveKey( spep_0 + 14, shun, -150, 80 , 0 );
setEffMoveKey( spep_0 + 16, shun, -150, 80 , 0 );
setEffMoveKey( spep_0 + 18, shun, -150, 80 , 0 );
setEffScaleKey( spep_0 + 10, shun, 1.6, 1.6 );
setEffScaleKey( spep_0 + 18, shun, 1.6, 1.6 );
setEffRotateKey( spep_0 + 10, shun, 0 );
setEffAlphaKey( spep_0 + 10, shun, 85 );
setEffAlphaKey( spep_0 + 12, shun, 170 );
setEffAlphaKey( spep_0 + 14, shun, 255 );
setEffAlphaKey( spep_0 + 16, shun, 128 );
setEffAlphaKey( spep_0 + 18, shun, 0 );

-- ** ヒットエフェクト ** --
hit = entryEffectLife( spep_0 + 48,  908, 8, 0x100, -1, 0, 65.4, -26.3 );
setEffMoveKey( spep_0 + 48, hit, 65.4, -26.3 , 0 );
setEffMoveKey( spep_0 + 56, hit, 65.4, -26.3 , 0 );
setEffScaleKey( spep_0 + 48, hit, 0.17, 0.17 );
setEffScaleKey( spep_0 + 50, hit, 0.79, 0.79 );
setEffScaleKey( spep_0 + 52, hit, 1.4, 1.4 );
setEffScaleKey( spep_0 + 54, hit, 2.01, 2.01 );
setEffScaleKey( spep_0 + 56, hit, 1.79, 1.79 );
setEffRotateKey( spep_0 + 48, hit, 0 );
setEffRotateKey( spep_0 + 56, hit, 0 );
setEffAlphaKey( spep_0 + 48, hit, 255 );
setEffAlphaKey( spep_0 + 54, hit, 255 );
setEffAlphaKey( spep_0 + 56, hit, 138 );

hit1 = entryEffectLife( spep_0 + 62,  908, 6, 0x100, -1, 0, -74.6, -6.3 );
setEffMoveKey( spep_0 + 62, hit1, -74.6, -6.3 , 0 );
setEffMoveKey( spep_0 + 66, hit1, -74.6, -6.3 , 0 );
setEffScaleKey( spep_0 + 62, hit1, 0.17, 0.17 );
setEffScaleKey( spep_0 + 64, hit1, 0.79, 0.79 );
setEffScaleKey( spep_0 + 66, hit1, 1.4, 1.4 );
setEffRotateKey( spep_0 + 62, hit1, 0 );
setEffRotateKey( spep_0 + 66, hit1, 0 );
setEffAlphaKey( spep_0 + 62, hit1, 255 );
setEffAlphaKey( spep_0 + 66, hit1, 255 );

hit3 = entryEffectLife( spep_0 + 70,  908, 6, 0x100, -1, 0, -74.6, -89.7 );
setEffMoveKey( spep_0 + 70, hit3, -74.6, -89.7 , 0 );
setEffMoveKey( spep_0 + 74, hit3, -74.6, -89.7 , 0 );
setEffScaleKey( spep_0 + 70, hit3, 0.1, 0.1 );
setEffScaleKey( spep_0 + 72, hit3, 0.47, 0.47 );
setEffScaleKey( spep_0 + 74, hit3, 0.84, 0.84 );
setEffRotateKey( spep_0 + 70, hit3, 60 );
setEffRotateKey( spep_0 + 74, hit3, 60 );
setEffAlphaKey( spep_0 + 70, hit3, 255 );
setEffAlphaKey( spep_0 + 74, hit3, 255 );

hit4 = entryEffectLife( spep_0 + 82,  908, 6, 0x100, -1, 0, -79.6, -180.7 );
setEffMoveKey( spep_0 + 82, hit4, -79.6, -180.7 , 0 );
setEffMoveKey( spep_0 + 86, hit4, -79.6, -180.7 , 0 );
setEffScaleKey( spep_0 + 82, hit4, 0.1, 0.1 );
setEffScaleKey( spep_0 + 84, hit4, 0.47, 0.47 );
setEffScaleKey( spep_0 + 86, hit4, 0.84, 0.84 );
setEffRotateKey( spep_0 + 82, hit4, 100 );
setEffRotateKey( spep_0 + 86, hit4, 100 );
setEffAlphaKey( spep_0 + 82, hit4, 255 );
setEffAlphaKey( spep_0 + 86, hit4, 255 );

hi4 = entryEffectLife( spep_0 + 90,  908, 6, 0x100, -1, 0, -59.6, -80.7 );
setEffMoveKey( spep_0 + 90, hi4, -59.6, -80.7 , 0 );
setEffMoveKey( spep_0 + 96, hi4, -59.6, -80.7 , 0 );
setEffScaleKey( spep_0 + 90, hi4, 0.1, 0.1 );
setEffScaleKey( spep_0 + 94, hi4, 0.47, 0.47 );
setEffScaleKey( spep_0 + 96, hi4, 0.84, 0.84 );
setEffRotateKey( spep_0 + 90, hi4, 100 );
setEffRotateKey( spep_0 + 96, hi4, 100 );
setEffAlphaKey( spep_0 + 90, hi4, 255 );
setEffAlphaKey( spep_0 + 96, hi4, 255 );

hit5 = entryEffectLife( spep_0 + 238,  908, 6, 0, -1, 0, 113.2, -46,  -100 );
setEffMoveKey( spep_0 + 238, hit5, 113.2, -46 , 0 );
setEffMoveKey( spep_0 + 242, hit5, 113.2, -46 , 0 );
setEffScaleKey( spep_0 + 238, hit5, 0.17, 0.17 );
setEffScaleKey( spep_0 + 240, hit5, 0.79, 0.79 );
setEffScaleKey( spep_0 + 242, hit5, 1.4, 1.4 );
setEffRotateKey( spep_0 + 238, hit5, 60 );
setEffRotateKey( spep_0 + 242, hit5, 60 );
setEffAlphaKey( spep_0 + 238, hit5, 255 );
setEffAlphaKey( spep_0 + 242, hit5, 255 );


hit6 = entryEffectLife( spep_0 + 246,  908, 6, 0, -1, 0, 5.4, -54.3,  -100 );
setEffMoveKey( spep_0 + 246, hit6, 5.4, -54.3 , 0 );
setEffMoveKey( spep_0 + 250, hit6, 5.4, -54.3 , 0 );
setEffScaleKey( spep_0 + 246, hit6, 0.17, 0.17 );
setEffScaleKey( spep_0 + 248, hit6, 0.79, 0.79 );
setEffScaleKey( spep_0 + 250, hit6, 1.4, 1.4 );
setEffRotateKey( spep_0 + 246, hit6, 0 );
setEffRotateKey( spep_0 + 250, hit6, 0 );
setEffAlphaKey( spep_0 + 246, hit6, 255 );
setEffAlphaKey( spep_0 + 250, hit6, 255 );

hit7 = entryEffectLife( spep_0 + 280,  908, 6, 0x100, -1, 0, -78.6, -104.6 );
setEffMoveKey( spep_0 + 280, hit7, -78.6, -104.6 , 0 );
setEffScaleKey( spep_0 + 280, hit7, 0.1, 0.1 );
setEffScaleKey( spep_0 + 282, hit7, 0.47, 0.47 );
setEffScaleKey( spep_0 + 284, hit7, 0.84, 0.84 );
setEffScaleKey( spep_0 + 286, hit7, 1.21, 1.21 );
setEffRotateKey( spep_0 + 280, hit7, 100 );
setEffAlphaKey( spep_0 + 280, hit7, 255 );

hit8 = entryEffectLife( spep_0 + 66,  908, 6, 0x100, -1, 0, 69.3, -95 );
setEffMoveKey( spep_0 + 66, hit8, 69.3, -95 , 0 );
setEffMoveKey( spep_0 + 70, hit8, 69.3, -95 , 0 );
setEffScaleKey( spep_0 + 66, hit8, 0.47, 0.47 );
setEffScaleKey( spep_0 + 68, hit8, 0.84, 0.84 );
setEffScaleKey( spep_0 + 70, hit8, 1.21, 1.21 );
setEffRotateKey( spep_0 + 66, hit8, 0 );
setEffRotateKey( spep_0 + 70, hit8, 0 );
setEffAlphaKey( spep_0 + 66, hit8, 255 );
setEffAlphaKey( spep_0 + 70, hit8, 255 );

hit9 = entryEffectLife( spep_0 + 78,  908, 6, 0x100, -1, 0, 25.4, -46.3 );
setEffMoveKey( spep_0 + 78, hit9, 25.4, -46.3 , 0 );
setEffMoveKey( spep_0 + 84, hit9, 25.4, -46.3 , 0 );
setEffScaleKey( spep_0 + 78, hit9, 0.17, 0.17 );
setEffScaleKey( spep_0 + 80, hit9, 0.79, 0.79 );
setEffScaleKey( spep_0 + 82, hit9, 1.4, 1.4 );
setEffScaleKey( spep_0 + 84, hit9, 2.01, 2.01 );
setEffRotateKey( spep_0 + 78, hit9, 0 );
setEffRotateKey( spep_0 + 84, hit9, 0 );
setEffAlphaKey( spep_0 + 78, hit9, 255 );
setEffAlphaKey( spep_0 + 84, hit9, 255 );

hit11 = entryEffectLife( spep_0 + 230,  908, 6, 0, -1, 0, -54.6, 25.7,  -100 );
setEffMoveKey( spep_0 + 230, hit11, -54.6, 25.7 , 0 );
setEffMoveKey( spep_0 + 234, hit11, -54.6, 25.7 , 0 );
setEffScaleKey( spep_0 + 230, hit11, 0.17, 0.17 );
setEffScaleKey( spep_0 + 232, hit11, 0.79, 0.79 );
setEffScaleKey( spep_0 + 234, hit11, 1.4, 1.4 );
setEffRotateKey( spep_0 + 230, hit11, 0 );
setEffRotateKey( spep_0 + 234, hit11, 0 );
setEffAlphaKey( spep_0 + 230, hit11, 255 );
setEffAlphaKey( spep_0 + 234, hit11, 255 );

hit12 = entryEffectLife( spep_0 + 240,  908, 6, 0, -1, 0, -65.4, -140.7,  -100 );
setEffMoveKey( spep_0 + 240, hit12, -65.4, -140.7 , 0 );
setEffMoveKey( spep_0 + 244, hit12, -65.4, -140.7 , 0 );
setEffScaleKey( spep_0 + 240, hit12, 0.1, 0.1 );
setEffScaleKey( spep_0 + 242, hit12, 0.47, 0.47 );
setEffScaleKey( spep_0 + 244, hit12, 0.84, 0.84 );
setEffRotateKey( spep_0 + 240, hit12, 100 );
setEffRotateKey( spep_0 + 244, hit12, 100 );
setEffAlphaKey( spep_0 + 240, hit12, 255 );
setEffAlphaKey( spep_0 + 244, hit12, 255 );

hit13 = entryEffectLife( spep_0 + 266,  908, 10, 0, -1, 0, -34.6, -14.3,  -100 );
setEffMoveKey( spep_0 + 266, hit13, -34.6, -14.3 , 0 );
setEffScaleKey( spep_0 + 266, hit13, 0.17, 0.17 );
setEffScaleKey( spep_0 + 268, hit13, 0.79, 0.79 );
setEffScaleKey( spep_0 + 270, hit13, 1.4, 1.4 );
setEffScaleKey( spep_0 + 272, hit13, 2.01, 2.01 );
setEffScaleKey( spep_0 + 274, hit13, 1.79, 1.79 );
setEffScaleKey( spep_0 + 276, hit13, 1.56, 1.56 );
setEffRotateKey( spep_0 + 266, hit13, 0 );
setEffAlphaKey( spep_0 + 266, hit13, 255 );
setEffAlphaKey( spep_0 + 272, hit13, 255 );
setEffAlphaKey( spep_0 + 274, hit13, 138 );
setEffAlphaKey( spep_0 + 276, hit13, 20 );

hit14 = entryEffectLife( spep_0 + 106,  908, 6, 0x100, -1, 0, -166.6, -87.7 );
setEffMoveKey( spep_0 + 106, hit14, -166.6, -87.7 , 0 );
setEffMoveKey( spep_0 + 110, hit14, -166.6, -87.7 , 0 );
setEffScaleKey( spep_0 + 106, hit14, 0.17, 0.17 );
setEffScaleKey( spep_0 + 108, hit14, 0.79, 0.79 );
setEffScaleKey( spep_0 + 110, hit14, 1.4, 1.4 );
setEffRotateKey( spep_0 + 106, hit14, 0 );
setEffRotateKey( spep_0 + 110, hit14, 0 );
setEffAlphaKey( spep_0 + 106, hit14, 255 );
setEffAlphaKey( spep_0 + 110, hit14, 255 );

hit15 = entryEffectLife( spep_0 + 116,  908, 6, 0x100, -1, 0, -31.6, 9.7 );
setEffMoveKey( spep_0 + 116, hit15, -31.6, 9.7 , 0 );
setEffMoveKey( spep_0 + 120, hit15, -31.6, 9.7 , 0 );
setEffScaleKey( spep_0 + 116, hit15, 0.17, 0.17 );
setEffScaleKey( spep_0 + 118, hit15, 0.79, 0.79 );
setEffScaleKey( spep_0 + 120, hit15, 1.4, 1.4 );
setEffRotateKey( spep_0 + 116, hit15, 0 );
setEffRotateKey( spep_0 + 120, hit15, 0 );
setEffAlphaKey( spep_0 + 116, hit15, 255 );
setEffAlphaKey( spep_0 + 120, hit15, 255 );

hit16 = entryEffectLife( spep_0 + 124,  908, 6, 0x100, -1, 0, 4.4, -53.3 );
setEffMoveKey( spep_0 + 124, hit16, 4.4, -53.3 , 0 );
setEffMoveKey( spep_0 + 126, hit16, 4.4, -53.3 , 0 );
setEffScaleKey( spep_0 + 124, hit16, 0.17, 0.17 );
setEffScaleKey( spep_0 + 126, hit16, 0.79, 0.79 );
setEffRotateKey( spep_0 + 124, hit16, 0 );
setEffRotateKey( spep_0 + 126, hit16, 0 );
setEffAlphaKey( spep_0 + 124, hit16, 255 );
setEffAlphaKey( spep_0 + 126, hit16, 255 );

hit17 = entryEffectLife( spep_0 + 134,  908, 6, 0x100, -1, 0, 96.1, -204.3 );
setEffMoveKey( spep_0 + 134, hit17, 96.1, -204.3 , 0 );
setEffMoveKey( spep_0 + 138, hit17, 96.1, -204.3 , 0 );
setEffScaleKey( spep_0 + 134, hit17, 0.1, 0.1 );
setEffScaleKey( spep_0 + 136, hit17, 0.47, 0.47 );
setEffScaleKey( spep_0 + 138, hit17, 0.84, 0.84 );
setEffRotateKey( spep_0 + 134, hit17, 60 );
setEffRotateKey( spep_0 + 138, hit17, 60 );
setEffAlphaKey( spep_0 + 134, hit17, 255 );
setEffAlphaKey( spep_0 + 138, hit17, 255 );

hit18 = entryEffectLife( spep_0 + 142,  908, 6, 0x100, -1, 0, 37.5, -78.3 );
setEffMoveKey( spep_0 + 142, hit18, 37.5, -78.3 , 0 );
setEffMoveKey( spep_0 + 146, hit18, 37.5, -78.3 , 0 );
setEffScaleKey( spep_0 + 142, hit18, 0.17, 0.17 );
setEffScaleKey( spep_0 + 144, hit18, 0.79, 0.79 );
setEffScaleKey( spep_0 + 146, hit18, 1.4, 1.4 );
setEffRotateKey( spep_0 + 142, hit18, 0 );
setEffRotateKey( spep_0 + 146, hit18, 0 );
setEffAlphaKey( spep_0 + 142, hit18, 255 );
setEffAlphaKey( spep_0 + 146, hit18, 255 );

hit19 = entryEffectLife( spep_0 + 254,  908, 6, 0, -1, 0, 81.4, 33.7,  -100 );
setEffMoveKey( spep_0 + 254, hit19, 81.4, 33.7 , 0 );
setEffMoveKey( spep_0 + 258, hit19, 81.4, 33.7 , 0 );
setEffScaleKey( spep_0 + 254, hit19, 0.17, 0.17 );
setEffScaleKey( spep_0 + 256, hit19, 0.79, 0.79 );
setEffScaleKey( spep_0 + 258, hit19, 1.4, 1.4 );
setEffRotateKey( spep_0 + 254, hit19, 0 );
setEffRotateKey( spep_0 + 258, hit19, 0 );
setEffAlphaKey( spep_0 + 254, hit19, 255 );
setEffAlphaKey( spep_0 + 258, hit19, 255 );

hit20 = entryEffectLife( spep_0 + 262,  908, 6, 0, -1, 0, 41.4, -11.7,  -100 );
setEffMoveKey( spep_0 + 262, hit20, 41.4, -11.7 , 0 );
setEffScaleKey( spep_0 + 262, hit20, 0.17, 0.17 );
setEffScaleKey( spep_0 + 264, hit20, 0.79, 0.79 );
setEffScaleKey( spep_0 + 266, hit20, 1.4, 1.4 );
setEffRotateKey( spep_0 + 262, hit20, 0 );
setEffAlphaKey( spep_0 + 262, hit20, 255 );

hit21 = entryEffectLife( spep_0 + 110,  908, 6, 0x100, -1, 0, -101.7, -26.7 );
setEffMoveKey( spep_0 + 110, hit21, -101.7, -26.7 , 0 );
setEffMoveKey( spep_0 + 114, hit21, -101.7, -26.7 , 0 );
setEffScaleKey( spep_0 + 110, hit21, 0.1, 0.1 );
setEffScaleKey( spep_0 + 112, hit21, 0.47, 0.47 );
setEffScaleKey( spep_0 + 114, hit21, 0.84, 0.84 );
setEffRotateKey( spep_0 + 110, hit21, 60 );
setEffRotateKey( spep_0 + 114, hit21, 60 );
setEffAlphaKey( spep_0 + 110, hit21, 255 );
setEffAlphaKey( spep_0 + 114, hit21, 255 );

hit22 = entryEffectLife( spep_0 + 120,  908, 6, 0x100, -1, 0, -178.7, -66.6 );
setEffMoveKey( spep_0 + 120, hit22, -178.7, -66.6 , 0 );
setEffMoveKey( spep_0 + 124, hit22, -178.7, -66.6 , 0 );
setEffScaleKey( spep_0 + 120, hit22, 0.1, 0.1 );
setEffScaleKey( spep_0 + 122, hit22, 0.47, 0.47 );
setEffScaleKey( spep_0 + 124, hit22, 0.84, 0.84 );
setEffRotateKey( spep_0 + 120, hit22, 100 );
setEffRotateKey( spep_0 + 124, hit22, 100 );
setEffAlphaKey( spep_0 + 120, hit22, 255 );
setEffAlphaKey( spep_0 + 124, hit22, 255 );

hit23 = entryEffectLife( spep_0 + 136,  908, 6, 0x100, -1, 0, -94.6, -26.3 );
setEffMoveKey( spep_0 + 136, hit23, -94.6, -26.3 , 0 );
setEffMoveKey( spep_0 + 140, hit23, -94.6, -26.3 , 0 );
setEffScaleKey( spep_0 + 136, hit23, 0.17, 0.17 );
setEffScaleKey( spep_0 + 138, hit23, 0.79, 0.79 );
setEffScaleKey( spep_0 + 140, hit23, 1.4, 1.4 );
setEffRotateKey( spep_0 + 136, hit23, 0 );
setEffRotateKey( spep_0 + 140, hit23, 0 );
setEffAlphaKey( spep_0 + 136, hit23, 255 );
setEffAlphaKey( spep_0 + 140, hit23, 255 );

hit24 = entryEffectLife( spep_0 + 146,  908, 6, 0x100, -1, 0, -79.6, -165.7 );
setEffMoveKey( spep_0 + 146, hit24, -79.6, -165.7 , 0 );
setEffScaleKey( spep_0 + 146, hit24, 0.1, 0.1 );
setEffScaleKey( spep_0 + 148, hit24, 0.47, 0.47 );
setEffScaleKey( spep_0 + 150, hit24, 0.84, 0.84 );
setEffRotateKey( spep_0 + 146, hit24, 100 );
setEffAlphaKey( spep_0 + 146, hit24, 255 );

hit26 = entryEffectLife( spep_0 + 156,  4, 12, 0x100, -1, 0, -75.2, -24 );
setEffMoveKey( spep_0 + 156, hit26, -75.2, -24 , 0 );
setEffMoveKey( spep_0 + 158, hit26, -77.2, -22.4 , 0 );
setEffMoveKey( spep_0 + 160, hit26, -80.4, -19.6 , 0 );
setEffMoveKey( spep_0 + 162, hit26, -84.8, -15.8 , 0 );
setEffMoveKey( spep_0 + 164, hit26, -90.6, -10.9 , 0 );
setEffMoveKey( spep_0 + 166, hit26, -97.6, -4.8 , 0 );
setEffMoveKey( spep_0 + 168, hit26, -105.9, 2.3 , 0 );
setEffScaleKey( spep_0 + 156, hit26, 0.25, 0.25 );
setEffScaleKey( spep_0 + 158, hit26, 0.27, 0.27 );
setEffScaleKey( spep_0 + 160, hit26, 0.31, 0.31 );
setEffScaleKey( spep_0 + 162, hit26, 0.36, 0.36 );
setEffScaleKey( spep_0 + 164, hit26, 0.43, 0.43 );
setEffScaleKey( spep_0 + 166, hit26, 0.5, 0.5 );
setEffScaleKey( spep_0 + 168, hit26, 0.6, 0.6 );
setEffRotateKey( spep_0 + 156, hit26, -51.4 );
setEffRotateKey( spep_0 + 168, hit26, -51.4 );
setEffAlphaKey( spep_0 + 156, hit26, 173 );
setEffAlphaKey( spep_0 + 158, hit26, 255 );
setEffAlphaKey( spep_0 + 160, hit26, 236 );
setEffAlphaKey( spep_0 + 162, hit26, 197 );
setEffAlphaKey( spep_0 + 164, hit26, 147 );
setEffAlphaKey( spep_0 + 166, hit26, 90 );
setEffAlphaKey( spep_0 + 168, hit26, 26 );

hit25 = entryEffectLife( spep_0 + 286,  4, 12, 0x100, -1, 0, 113.2, 37.3 );
setEffMoveKey( spep_0 + 286, hit25, 113.2, 37.3 , 0 );
setEffScaleKey( spep_0 + 286, hit25, 0.66, 0.66 );
setEffScaleKey( spep_0 + 288, hit25, 0.89, 0.89 );
setEffScaleKey( spep_0 + 290, hit25, 1.09, 1.09 );
setEffScaleKey( spep_0 + 292, hit25, 1.25, 1.25 );
setEffScaleKey( spep_0 + 294, hit25, 1.36, 1.36 );
setEffScaleKey( spep_0 + 296, hit25, 1.4, 1.4 );
setEffRotateKey( spep_0 + 286, hit25, 0 );
setEffAlphaKey( spep_0 + 286, hit25, 243 );
setEffAlphaKey( spep_0 + 288, hit25, 212 );
setEffAlphaKey( spep_0 + 290, hit25, 171 );
setEffAlphaKey( spep_0 + 292, hit25, 121 );
setEffAlphaKey( spep_0 + 294, hit25, 64 );
setEffAlphaKey( spep_0 + 296, hit25, 0 );

-- ** SE ** --
playSe( spep_0 + 6,  1004);
playSe( spep_0 + 17,  43);
playSe( spep_0 + 47,  1189);
playSe( spep_0 + 52,  1009);
playSe( spep_0 + 67,  1000);
playSe( spep_0 + 72,  1006);
setSeVolume( spep_0 + 72,  1006,  79);
playSe( spep_0 + 79,  1000);
setSeVolume( spep_0 + 79,  1000,  89);
playSe( spep_0 + 85,  1010);
playSe( spep_0 + 92,  1007);
playSe( spep_0 + 110,  1006);
playSe( spep_0 + 114,  1000);
setSeVolume( spep_0 + 114,  1000,  89);
playSe( spep_0 + 118,  1006);
playSe( spep_0 + 122,  1001);
setSeVolume( spep_0 + 122,  1001,  71);
playSe( spep_0 + 136,  1000);
playSe( spep_0 + 142,  1006);
playSe( spep_0 + 147,  1000);
playSe( spep_0 + 153,  1010);
playSe( spep_0 + 163,  1120);
playSe( spep_0 + 223,  1003);
playSe( spep_0 + 234,  1000);
playSe( spep_0 + 237,  1006);
playSe( spep_0 + 244,  1007);
playSe( spep_0 + 248,  8);
setSeVolume( spep_0 + 248,  8,  63);
playSe( spep_0 + 250,  1009);
setSeVolume( spep_0 + 250,  1009,  79);
playSe( spep_0 + 256,  1010);
playSe( spep_0 + 264,  1006);
playSe( spep_0 + 271,  1000);
playSe( spep_0 + 277,  1007);
playSe( spep_0 + 283,  1010);
playSe( spep_0 + 308,  1048);
playSe( spep_0 + 310,  1006);
playSe( spep_0 + 312,  1013);

playSe( spep_0 + 364-25,  1000);
playSe( spep_0 + 370-25,  1006);
setSeVolume( spep_0 + 370-25,  1006,  89);
playSe( spep_0 + 374-25,  1007);
setSeVolume( spep_0 + 374-35,  1007,  89);
playSe( spep_0 + 379-25,  1000);
setSeVolume( spep_0 + 379-25,  1000,  112);
playSe( spep_0 + 386-25,  1010);
setSeVolume( spep_0 + 386-25,  1010,  79);
playSe( spep_0 + 391-25,  1000);
playSe( spep_0 + 396-25,  1000);
playSe( spep_0 + 397-25,  8);
playSe( spep_0 + 404-25,  1006);
playSe( spep_0 + 415-25,  1009);
playSe( spep_0 + 435-25,  43);
playSe( spep_0 + 460-25,  43);
playSe( spep_0 + 473-25,  1110);
playSe( spep_0 + 473-25,  1010);
playSe( spep_0 + 505-25,  43);
playSe( spep_0 + 518-25,  1110);
playSe( spep_0 + 518-25,  1010);
setSeVolume( spep_0 + 518-25,  1010,  79);
playSe( spep_0 + 518-25,  1001);
setSeVolume( spep_0 + 518-25,  1001,  89);
playSe( spep_0 + 535-25,  43);
playSe( spep_0 + 555-25,  1110);
playSe( spep_0 + 555-25,  1009);
playSe( spep_0 + 556-25,  1012);
playSe( spep_0 + 613-25,  1003);
playSe( spep_0 + 618-25,  1123);

-- ** 背景 ** --
--entryFadeBg( spep_0,  0, 304,  0,  0,  0,  0,  200);  --薄い黒

------------------------------------------------------
-- 足止め失敗
------------------------------------------------------
spep_1 = spep_0 + 304;

-- ** 瞬間移動 ** --
shun2 = entryEffectLife( spep_1 + 104,  700, 8, 0x100, -1, 0, 31.1, 15.6 );
setEffMoveKey( spep_1 + 104, shun2, 31.1, 15.6 , 0 );
setEffMoveKey( spep_1 + 106, shun2, 31.1, -13.4 , 0 );
setEffMoveKey( spep_1 + 108, shun2, 31.1, 30.1 , 0 );
setEffMoveKey( spep_1 + 110, shun2, 31.1, 73.7 , 0 );
setEffMoveKey( spep_1 + 112, shun2, 31.1, 73.7 , 0 );
setEffScaleKey( spep_1 + 104, shun2, 1.6, 1.6 );
setEffScaleKey( spep_1 + 106, shun2, 1.6, 1.6 );
setEffScaleKey( spep_1 + 108, shun2, 1.6, 1.6 );
setEffScaleKey( spep_1 + 110, shun2, 1.6, 1.6 );
setEffScaleKey( spep_1 + 112, shun2, 1.6, 1.6 );
setEffRotateKey( spep_1 + 104, shun2, 0 );
setEffRotateKey( spep_1 + 112, shun2, 0 );
setEffAlphaKey( spep_1 + 104, shun2, 85 );
setEffAlphaKey( spep_1 + 106, shun2, 170 );
setEffAlphaKey( spep_1 + 108, shun2, 255 );
setEffAlphaKey( spep_1 + 110, shun2, 128 );
setEffAlphaKey( spep_1 + 112, shun2, 0 );


shun3 = entryEffectLife( spep_1 + 130,  700, 8, 0x100, -1, 0,  -151.9, -36.4 );
setEffMoveKey( spep_1 + 130, shun3, -151.9, -36.4 , 0 );
setEffMoveKey( spep_1 + 132, shun3, -151.9, -65.4 , 0 );
setEffMoveKey( spep_1 + 134, shun3, -151.9, -21.9 , 0 );
setEffMoveKey( spep_1 + 136, shun3, -151.9, 21.7 , 0 );
setEffMoveKey( spep_1 + 138, shun3, -151.9, 21.7 , 0 );
setEffScaleKey( spep_1 + 130, shun3, 1.6, 1.6 );
setEffScaleKey( spep_1 + 132, shun3, 1.6, 1.6 );
setEffScaleKey( spep_1 + 134, shun3, 1.6, 1.6 );
setEffScaleKey( spep_1 + 136, shun3, 1.6, 1.6 );
setEffScaleKey( spep_1 + 138, shun3, 1.6, 1.6 );
setEffRotateKey( spep_1 + 130, shun3, 0 );
setEffRotateKey( spep_1 + 138, shun3, 0 );
setEffAlphaKey( spep_1 + 130, shun3, 170 );
setEffAlphaKey( spep_1 + 132, shun3, 255 );
setEffAlphaKey( spep_1 + 134, shun3, 128 );
setEffAlphaKey( spep_1 + 138, shun3, 0 );

shun4 = entryEffectLife( spep_1 + 152,  700, 6, 0x100, -1, 0, -136.5, -20.9 );
setEffMoveKey( spep_1 + 152, shun4, -136.5, -20.9 , 0 );
setEffMoveKey( spep_1 + 154, shun4, -136.5, -50 , 0 );
setEffMoveKey( spep_1 + 156, shun4, -136.5, -6.4 , 0 );
setEffMoveKey( spep_1 + 158, shun4, -136.5, 37.2 , 0 );
setEffScaleKey( spep_1 + 152, shun4, 1.6, 1.6 );
setEffScaleKey( spep_1 + 154, shun4, 1.6, 1.6 );
setEffScaleKey( spep_1 + 156, shun4, 1.6, 1.6 );
setEffScaleKey( spep_1 + 158, shun4, 1.6, 1.6 );
setEffRotateKey( spep_1 + 152, shun4, 0 );
setEffRotateKey( spep_1 + 158, shun4, 0 );
setEffAlphaKey( spep_1 + 152, shun4, 170 );
setEffAlphaKey( spep_1 + 154, shun4, 255 );
setEffAlphaKey( spep_1 + 156, shun4, 128 );
setEffAlphaKey( spep_1 + 158, shun4, 0 );

shun5 = entryEffectLife( spep_1 + 172,  700, 16, 0x100, -1, 0, 166.2, 251.9 );
setEffMoveKey( spep_1 + 172, shun5, 166.2, 251.9 , 0 );
setEffMoveKey( spep_1 + 174, shun5, 166.2, 238 , 0 );
setEffMoveKey( spep_1 + 176, shun5, 166.2, 258.9 , 0 );
setEffMoveKey( spep_1 + 178, shun5, 166.2, 279.9 , 0 );
setEffMoveKey( spep_1 + 188, shun5, 166.2, 279.9 , 0 );
setEffScaleKey( spep_1 + 172, shun5, 1, 0.07 );
setEffScaleKey( spep_1 + 174, shun5, 1, 0.71 );
setEffScaleKey( spep_1 + 176, shun5, 1, 1.36 );
setEffScaleKey( spep_1 + 178, shun5, 1, 2 );
setEffScaleKey( spep_1 + 180, shun5, 1, 1.04 );
setEffScaleKey( spep_1 + 182, shun5, 1, 0.07 );
setEffScaleKey( spep_1 + 188, shun5, 1, 0.07 );
setEffRotateKey( spep_1 + 172, shun5, 0 );
setEffRotateKey( spep_1 + 188, shun5, 0 );
setEffAlphaKey( spep_1 + 172, shun5, 170 );
setEffAlphaKey( spep_1 + 174, shun5, 255 );
setEffAlphaKey( spep_1 + 176, shun5, 128 );
setEffAlphaKey( spep_1 + 182, shun5, 0 );
setEffAlphaKey( spep_1 + 188, shun5, 0 );

shun6 = entryEffectLife( spep_1 + 192,  700, 6, 0x100, -1, 0, 173.4, 154.7 );
setEffMoveKey( spep_1 + 192, shun6, 173.4, 154.7 , 0 );
setEffMoveKey( spep_1 + 194, shun6, 143.4, 99.2 , 0 );
setEffMoveKey( spep_1 + 196, shun6, 153.4, 151.5 , 0 );
setEffMoveKey( spep_1 + 198, shun6, 153.4, 201.7 , 0 );
setEffScaleKey( spep_1 + 192, shun6, 1.6, 1.6 );
setEffScaleKey( spep_1 + 194, shun6, 1.6, 1.6 );
setEffScaleKey( spep_1 + 196, shun6, 1.6, 1.6 );
setEffScaleKey( spep_1 + 198, shun6, 1.6, 1.6 );
setEffRotateKey( spep_1 + 192, shun6, 0 );
setEffRotateKey( spep_1 + 198, shun6, 0 );
setEffAlphaKey( spep_1 + 192, shun6, 170 );
setEffAlphaKey( spep_1 + 194, shun6, 255 );
setEffAlphaKey( spep_1 + 196, shun6, 128 );
setEffAlphaKey( spep_1 + 198, shun6, 0 );

shun7 = entryEffectLife( spep_1 + 202,  700, 6, 0x100, -1, 0, -227.9, -169 );
setEffMoveKey( spep_1 + 202, shun7, -227.9, -124.2 , 0 );
setEffMoveKey( spep_1 + 204, shun7, -227.9, -139.8 , 0 );
setEffMoveKey( spep_1 + 206, shun7, -227.9, -155.4 , 0 );
setEffMoveKey( spep_1 + 208, shun7, -227.9, -171 , 0 );
setEffMoveKey( spep_1 + 210, shun7, -227.9, -147.6 , 0 );
setEffScaleKey( spep_1 + 202, shun7, 1.6, 1.6 );
setEffScaleKey( spep_1 + 204, shun7, 1.6, 1.6 );
setEffScaleKey( spep_1 + 206, shun7, 1.6, 1.6 );
setEffScaleKey( spep_1 + 208, shun7, 1.6, 1.6 );
setEffRotateKey( spep_1 + 202, shun7, 0 );
setEffAlphaKey( spep_1 + 202, shun7, 170 );
setEffAlphaKey( spep_1 + 204, shun7, 255 );
setEffAlphaKey( spep_1 + 206, shun7, 128 );
setEffAlphaKey( spep_1 + 208, shun7, 0 );

-- ** 敵 ** --
setDisp( spep_1 + 0, 1, 1 );
setDisp( spep_1 + 104, 1, 0 );
setDisp( spep_1 + 132, 1, 1 );
setDisp( spep_1 + 162, 1, 0 );
setDisp( spep_1 + 178, 1, 1 );
setDisp( spep_1 + 202, 1, 0 );
setDisp( spep_1 + 204, 1, 1 );
setDisp( spep_1 + 242, 1, 0 );
setDisp( spep_1 + 262, 1, 1 );
setDisp( spep_1 + 380, 1, 0 );
changeAnime( spep_1 + 0, 1, 17 );
changeAnime( spep_1 + 6, 1, 4 );
changeAnime( spep_1 + 21, 1, 0 );
changeAnime( spep_1 + 22, 1, 117 );
changeAnime( spep_1 + 28, 1, 111 );
changeAnime( spep_1 + 29, 1, 111 );
changeAnime( spep_1 + 30, 1, 111 );
changeAnime( spep_1 + 31, 1, 111 );
changeAnime( spep_1 + 32, 1, 111 );
changeAnime( spep_1 + 36, 1, 109 );
changeAnime( spep_1 + 40, 1, 110 );
changeAnime( spep_1 + 44, 1, 114 );
changeAnime( spep_1 + 50, 1, 111 );
changeAnime( spep_1 + 51, 1, 111 );
changeAnime( spep_1 + 52, 1, 111 );
changeAnime( spep_1 + 53, 1, 111 );
changeAnime( spep_1 + 54, 1, 111 );
changeAnime( spep_1 + 60, 1, 112 );
changeAnime( spep_1 + 66, 1, 114 );
changeAnime( spep_1 + 74, 1, 110 );
changeAnime( spep_1 + 82, 1, 111 );
changeAnime( spep_1 + 83, 1, 111 );
changeAnime( spep_1 + 84, 1, 111 );
changeAnime( spep_1 + 85, 1, 111 );
changeAnime( spep_1 + 86, 1, 111 );
changeAnime( spep_1 + 98, 1, 110 );
changeAnime( spep_1 + 104, 1, 111 );
changeAnime( spep_1 + 130, 1, 18 );
changeAnime( spep_1 + 140, 1, 13 );
changeAnime( spep_1 + 176, 1, 111 );
changeAnime( spep_1 + 177, 1, 111 );
changeAnime( spep_1 + 178, 1, 111 );
changeAnime( spep_1 + 179, 1, 111 );
changeAnime( spep_1 + 180, 1, 111 );
changeAnime( spep_1 + 190, 1, 117 );
changeAnime( spep_1 + 202, 1, 17 );
changeAnime( spep_1 + 220, 1, 12 );
changeAnime( spep_1 + 260, 1, 115 );
changeAnime( spep_1 + 261, 1, 115 );
changeAnime( spep_1 + 262, 1, 115 );
changeAnime( spep_1 + 263, 1, 115 );
changeAnime( spep_1 + 264, 1, 115 );
changeAnime( spep_1 + 265, 1, 115 );
changeAnime( spep_1 + 266, 1, 115 );
changeAnime( spep_1 + 267, 1, 115 );
changeAnime( spep_1 + 268, 1, 115 );
changeAnime( spep_1 + 269, 1, 115 );
changeAnime( spep_1 + 270, 1, 115 );
changeAnime( spep_1 + 271, 1, 115 );
changeAnime( spep_1 + 272, 1, 115 );
changeAnime( spep_1 + 273, 1, 115 );
changeAnime( spep_1 + 274, 1, 115 );
changeAnime( spep_1 + 275, 1, 115 );
changeAnime( spep_1 + 276, 1, 115 );
changeAnime( spep_1 + 277, 1, 115 );
changeAnime( spep_1 + 278, 1, 115 );
changeAnime( spep_1 + 279, 1, 115 );
changeAnime( spep_1 + 280, 1, 115 );
changeAnime( spep_1 + 281, 1, 115 );
changeAnime( spep_1 + 282, 1, 115 );
changeAnime( spep_1 + 283, 1, 115 );
changeAnime( spep_1 + 284, 1, 115 );
changeAnime( spep_1 + 285, 1, 115 );
changeAnime( spep_1 + 286, 1, 115 );
changeAnime( spep_1 + 318, 1, 117 );
changeAnime( spep_1 + 354, 1, 103 );


setMoveKey( spep_1 + 0, 1, 9.4, 23 , 0 );
setMoveKey( spep_1 + 2, 1, 9.1, 25.4 , 0 );
setMoveKey( spep_1 + 4, 1, 8.8, 27.9 , 0 );
setMoveKey( spep_1 + 6, 1, -1.8, 30.3 , 0 );
setMoveKey( spep_1 + 8, 1, -10.5, 32.7 , 0 );
setMoveKey( spep_1 + 10, 1, -2.1, 31.6 , 0 );
setMoveKey( spep_1 + 12, 1, -2.3, 30.5 , 0 );
setMoveKey( spep_1 + 14, 1, -2.4, 29.4 , 0 );
setMoveKey( spep_1 + 16, 1, -2.5, 28.3 , 0 );
setMoveKey( spep_1 + 18, 1, -2.7, 27.2 , 0 );
setMoveKey( spep_1 + 20, 1, -2.8, 26.1 , 0 );
setMoveKey( spep_1 + 22, 1, -2.9, 24.9 , 0 );
setMoveKey( spep_1 + 24, 1, -3.1, 23.8 , 0 );
setMoveKey( spep_1 + 26, 1, -3.2, 22.7 , 0 );
setMoveKey( spep_1 + 28, 1, -3.3, 21.6 , 0 );
setMoveKey( spep_1 + 30, 1, 1.1, 23.1 , 0 );
setMoveKey( spep_1 + 32, 1, 5.5, 24.5 , 0 );
setMoveKey( spep_1 + 34, 1, 9.8, 26 , 0 );
setMoveKey( spep_1 + 36, 1, 14.2, 27.5 , 0 );
setMoveKey( spep_1 + 38, 1, 18.6, 28.9 , 0 );
setMoveKey( spep_1 + 40, 1, 23, 30.4 , 0 );
setMoveKey( spep_1 + 42, 1, 27.4, 31.9 , 0 );
setMoveKey( spep_1 + 44, 1, 31.8, 33.3 , 0 );
setMoveKey( spep_1 + 46, 1, 36.2, 34.8 , 0 );
setMoveKey( spep_1 + 48, 1, 40.5, 36.3 , 0 );
setMoveKey( spep_1 + 50, 1, 44.9, 37.7 , 0 );
setMoveKey( spep_1 + 52, 1, 49.3, 39.2 , 0 );
setMoveKey( spep_1 + 54, 1, 53.7, 40.7 , 0 );
setMoveKey( spep_1 + 56, 1, 58.1, 42.1 , 0 );
setMoveKey( spep_1 + 58, 1, 62.5, 43.6 , 0 );
setMoveKey( spep_1 + 60, 1, 66.8, 45.1 , 0 );
setMoveKey( spep_1 + 62, 1, 71.2, 46.6 , 0 );
setMoveKey( spep_1 + 64, 1, 75.6, 48 , 0 );
setMoveKey( spep_1 + 66, 1, 80, 49.5 , 0 );
setMoveKey( spep_1 + 68, 1, 84.4, 51 , 0 );
setMoveKey( spep_1 + 70, 1, 88.8, 52.4 , 0 );
setMoveKey( spep_1 + 72, 1, 93.2, 53.9 , 0 );
setMoveKey( spep_1 + 74, 1, 97.5, 55.4 , 0 );
setMoveKey( spep_1 + 76, 1, 101.9, 56.8 , 0 );
setMoveKey( spep_1 + 78, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 80, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 82, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 84, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 86, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 96, 1, 106.3, 58.3 , 0 );
setMoveKey( spep_1 + 98, 1, 41.3, 58.3 , 0 );
setMoveKey( spep_1 + 104, 1, 28.3, 58.3 , 0 );
setMoveKey( spep_1 + 110, 1, 28.3, 58.3 , 0 );
setMoveKey( spep_1 + 130, 1, -163.7, -56.1 , 0 );
setMoveKey( spep_1 + 132, 1, -163.7, -43.1 , 0 );
setMoveKey( spep_1 + 134, 1, -163.7, -30.1 , 0 );
setMoveKey( spep_1 + 136, 1, -163.7, -17.1 , 0 );
setMoveKey( spep_1 + 138, 1, -163.7, -4.1 , 0 );
setMoveKey( spep_1 + 140, 1, -163.7, -4.1 , 0 );
setMoveKey( spep_1 + 142, 1, -162, -0.7 , 0 );
setMoveKey( spep_1 + 144, 1, -160.3, 2.8 , 0 );
setMoveKey( spep_1 + 146, 1, -158.6, 6.2 , 0 );
setMoveKey( spep_1 + 148, 1, -156.8, 9.7 , 0 );
setMoveKey( spep_1 + 150, 1, -155.1, 13.1 , 0 );
setMoveKey( spep_1 + 152, 1, -153.4, 16.5 , 0 );
setMoveKey( spep_1 + 154, 1, -151.7, 20 , 0 );
setMoveKey( spep_1 + 156, 1, -150, 23.4 , 0 );
setMoveKey( spep_1 + 158, 1, -148.2, 26.8 , 0 );
setMoveKey( spep_1 + 176, 1, 174.2, 244 , 0 );
setMoveKey( spep_1 + 178, 1, 174.2, 255.9 , 0 );
setMoveKey( spep_1 + 180, 1, 171.8, 253.5 , 0 );
setMoveKey( spep_1 + 182, 1, 169.4, 251.1 , 0 );
setMoveKey( spep_1 + 184, 1, 154.6, 155.2 , 0 );
setMoveKey( spep_1 + 186, 1, 91.1, 111.7 , 0 );
setMoveKey( spep_1 + 188, 1, 187.5, 168.1 , 0 );
setMoveKey( spep_1 + 190, 1, 145.4, 146 , 0 );
setMoveKey( spep_1 + 192, 1, 185.4, 186 , 0 );
setMoveKey( spep_1 + 194, 1, 155.4, 164 , 0 );
setMoveKey( spep_1 + 196, 1, 165.4, 166 , 0 );
setMoveKey( spep_1 + 198, 1, 165.4, 166 , 0 );
setMoveKey( spep_1 + 202, 1, -1157.9, -1202.5 , 0 );
setMoveKey( spep_1 + 204, 1, -179.9, -148.3 , 0 );
setMoveKey( spep_1 + 206, 1, -179.9, -160.2 , 0 );
setMoveKey( spep_1 + 220, 1, -179.9, -160.2 , 0 );
setMoveKey( spep_1 + 222, 1, -178.6, -158.9 , 0 );
setMoveKey( spep_1 + 224, 1, -205.9, -216.2 , 0 );
setMoveKey( spep_1 + 226, 1, -163.9, -174.2 , 0 );
setMoveKey( spep_1 + 228, 1, -261.9, -252.2 , 0 );
setMoveKey( spep_1 + 230, 1, -179.9, -190.2 , 0 );
setMoveKey( spep_1 + 232, 1, -217.9, -228.3 , 0 );
setMoveKey( spep_1 + 234, 1, -184, -198.3 , 0 );
setMoveKey( spep_1 + 236, 1, -194, -204.3 , 0 );
setMoveKey( spep_1 + 238, 1, -192, -202.3 , 0 );
setMoveKey( spep_1 + 260, 1, 4, 981.4 , 0 );
setMoveKey( spep_1 + 262, 1, 4, 976.4 , 0 );
setMoveKey( spep_1 + 264, 1, 4, 961.4 , 0 );
setMoveKey( spep_1 + 266, 1, 4, 936.4 , 0 );
setMoveKey( spep_1 + 268, 1, 4, 901.4 , 0 );
setMoveKey( spep_1 + 270, 1, 4, 856.4 , 0 );
setMoveKey( spep_1 + 272, 1, 4, 801.4 , 0 );
setMoveKey( spep_1 + 274, 1, 4, 736.4 , 0 );
setMoveKey( spep_1 + 276, 1, 4, 661.4 , 0 );
setMoveKey( spep_1 + 278, 1, 4, 576.4 , 0 );
setMoveKey( spep_1 + 280, 1, 4, 481.4 , 0 );
setMoveKey( spep_1 + 282, 1, 4, 376.4 , 0 );
setMoveKey( spep_1 + 284, 1, 4, 261.4 , 0 );
setMoveKey( spep_1 + 286, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 290, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 292, 1, 54, 191.4 , 0 );
setMoveKey( spep_1 + 294, 1, -46, 91.4 , 0 );
setMoveKey( spep_1 + 296, 1, -46, 191.4 , 0 );
setMoveKey( spep_1 + 298, 1, 54, 91.4 , 0 );
setMoveKey( spep_1 + 300, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 302, 1, 54, 161.4 , 0 );
setMoveKey( spep_1 + 304, 1, -46, 121.4 , 0 );
setMoveKey( spep_1 + 306, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 308, 1, 64, 121.4 , 0 );
setMoveKey( spep_1 + 310, 1, -56, 161.4 , 0 );
setMoveKey( spep_1 + 312, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 318, 1, 4, 141.4 , 0 );
setMoveKey( spep_1 + 320, 1, 7.5, 139 , 0 );
setMoveKey( spep_1 + 322, 1, 11.1, 136.7 , 0 );
setMoveKey( spep_1 + 324, 1, 14.6, 134.3 , 0 );
setMoveKey( spep_1 + 326, 1, 18.1, 132 , 0 );
setMoveKey( spep_1 + 328, 1, 21.6, 129.6 , 0 );
setMoveKey( spep_1 + 330, 1, 25.2, 127.3 , 0 );
setMoveKey( spep_1 + 332, 1, 28.7, 124.9 , 0 );
setMoveKey( spep_1 + 334, 1, 32.2, 122.6 , 0 );
setMoveKey( spep_1 + 336, 1, 35.8, 120.2 , 0 );
setMoveKey( spep_1 + 338, 1, 39.3, 117.9 , 0 );
setMoveKey( spep_1 + 340, 1, 42.8, 115.5 , 0 );
setMoveKey( spep_1 + 342, 1, 46.4, 113.2 , 0 );
setMoveKey( spep_1 + 344, 1, 49.9, 110.8 , 0 );
setMoveKey( spep_1 + 346, 1, 53.4, 108.5 , 0 );
setMoveKey( spep_1 + 348, 1, 56.9, 106.1 , 0 );
setMoveKey( spep_1 + 350, 1, 60.5, 103.8 , 0 );
setMoveKey( spep_1 + 352, 1, 64, 101.4 , 0 );
setMoveKey( spep_1 + 354, 1, -10, -22.6 , 0 );
setMoveKey( spep_1 + 356, 1, -185.6, -22.6 , 0 );
setMoveKey( spep_1 + 358, 1, -361.3, -22.6 , 0 );
setMoveKey( spep_1 + 360, 1, -536.9, -22.5 , 0 );
setMoveKey( spep_1 + 362, 1, -712.6, -22.5 , 0 );
setMoveKey( spep_1 + 364, 1, -888.2, -22.5 , 0 );

setScaleKey( spep_1 + 0, 1, 0.9, 0.9 );
setScaleKey( spep_1 + 2, 1, 0.89, 0.89 );
setScaleKey( spep_1 + 4, 1, 0.88, 0.88 );
setScaleKey( spep_1 + 6, 1, 0.86, 0.86 );
setScaleKey( spep_1 + 8, 1, 0.85, 0.85 );
setScaleKey( spep_1 + 10, 1, 0.86, 0.86 );
setScaleKey( spep_1 + 12, 1, 0.86, 0.86 );
setScaleKey( spep_1 + 14, 1, 0.87, 0.87 );
setScaleKey( spep_1 + 16, 1, 0.87, 0.87 );
setScaleKey( spep_1 + 18, 1, 0.88, 0.88 );
setScaleKey( spep_1 + 20, 1, 0.88, 0.88 );
setScaleKey( spep_1 + 22, 1, 0.89, 0.89 );
setScaleKey( spep_1 + 24, 1, 0.89, 0.89 );
setScaleKey( spep_1 + 26, 1, 0.9, 0.9 );
setScaleKey( spep_1 + 28, 1, 0.9, 0.9 );
setScaleKey( spep_1 + 30, 1, 0.92, 0.92 );
setScaleKey( spep_1 + 32, 1, 0.93, 0.93 );
setScaleKey( spep_1 + 34, 1, 0.95, 0.95 );
setScaleKey( spep_1 + 36, 1, 0.96, 0.96 );
setScaleKey( spep_1 + 38, 1, 0.98, 0.98 );
setScaleKey( spep_1 + 40, 1, 1, 1 );
setScaleKey( spep_1 + 42, 1, 1.01, 1.01 );
setScaleKey( spep_1 + 44, 1, 1.03, 1.03 );
setScaleKey( spep_1 + 46, 1, 1.04, 1.04 );
setScaleKey( spep_1 + 48, 1, 1.06, 1.06 );
setScaleKey( spep_1 + 50, 1, 1.08, 1.08 );
setScaleKey( spep_1 + 52, 1, 1.09, 1.09 );
setScaleKey( spep_1 + 54, 1, 1.11, 1.11 );
setScaleKey( spep_1 + 56, 1, 1.12, 1.12 );
setScaleKey( spep_1 + 58, 1, 1.14, 1.14 );
setScaleKey( spep_1 + 60, 1, 1.16, 1.16 );
setScaleKey( spep_1 + 62, 1, 1.17, 1.17 );
setScaleKey( spep_1 + 64, 1, 1.19, 1.19 );
setScaleKey( spep_1 + 66, 1, 1.2, 1.2 );
setScaleKey( spep_1 + 68, 1, 1.22, 1.22 );
setScaleKey( spep_1 + 70, 1, 1.24, 1.24 );
setScaleKey( spep_1 + 72, 1, 1.25, 1.25 );
setScaleKey( spep_1 + 74, 1, 1.27, 1.27 );
setScaleKey( spep_1 + 76, 1, 1.28, 1.28 );
setScaleKey( spep_1 + 78, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 80, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 82, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 84, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 86, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 96, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 98, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 104, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 110, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 130, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 140, 1, 1.3, 1.3 );
setScaleKey( spep_1 + 176, 1, 1, 1 );
setScaleKey( spep_1 + 180, 1, 1.01, 1.01 );
setScaleKey( spep_1 + 182, 1, 1.02, 1.02 );
setScaleKey( spep_1 + 184, 1, 1.55, 1.55 );
setScaleKey( spep_1 + 186, 1, 1.56, 1.56 );
setScaleKey( spep_1 + 188, 1, 1.58, 1.58 );
setScaleKey( spep_1 + 190, 1, 1.58, 1.58 );
setScaleKey( spep_1 + 198, 1, 1.58, 1.58 );
setScaleKey( spep_1 + 202, 1, 1.5, 1.5 );
setScaleKey( spep_1 + 204, 1, 1, 1 );
setScaleKey( spep_1 + 220, 1, 1, 1 );
setScaleKey( spep_1 + 222, 1, 1.01, 1.01 );
setScaleKey( spep_1 + 224, 1, 1.52, 1.52 );
setScaleKey( spep_1 + 226, 1, 1.53, 1.53 );
setScaleKey( spep_1 + 228, 1, 1.53, 1.53 );
setScaleKey( spep_1 + 230, 1, 1.54, 1.54 );
setScaleKey( spep_1 + 232, 1, 1.55, 1.55 );
setScaleKey( spep_1 + 234, 1, 1.56, 1.56 );
setScaleKey( spep_1 + 236, 1, 1.57, 1.57 );
setScaleKey( spep_1 + 238, 1, 1.58, 1.58 );
setScaleKey( spep_1 + 260, 1, 1.5, 1.5 );
setScaleKey( spep_1 + 286, 1, 1.5, 1.5 );
setScaleKey( spep_1 + 318, 1, 1.5, 1.5 );
setScaleKey( spep_1 + 354, 1, 1.5, 1.5 );
setScaleKey( spep_1 + 356, 1, 1.6, 1.6 );
setScaleKey( spep_1 + 358, 1, 1.7, 1.7 );
setScaleKey( spep_1 + 360, 1, 1.8, 1.8 );
setScaleKey( spep_1 + 362, 1, 1.9, 1.9 );
setScaleKey( spep_1 + 364, 1, 2, 2 );
setRotateKey( spep_1 + 0, 1, 0 );
setRotateKey( spep_1 + 354, 1, 0 );



-- ** サポーター ** --
setDisp( spep_1 + 0, view3, 1 );
setDisp( spep_1 + 162 + 0, view3, 0 );
setDisp( spep_1 + 174 + 0, view3, 1 );
setDisp( spep_1 + 192 + 0, view3, 0 );
setDisp( spep_1 + 200 + 0, view3, 1 );
setDisp( spep_1 + 232 + 0, view3, 0 );
setDisp( spep_1 + 256 + 0, view3, 1 );
setDisp( spep_1 + 326 + 0, view3, 0 );
changeAnime( spep_1 + 0, view3, 113 );
changeAnime( spep_1 + 20, view3, 17 );
changeAnime( spep_1 + 28, view3, 4 );
changeAnime( spep_1 + 40, view3, 13 );
changeAnime( spep_1 + 44, view3, 10 );
changeAnime( spep_1 + 54, view3, 8 );
changeAnime( spep_1 + 60, view3, 4 );
changeAnime( spep_1 + 86, view3, 8 );
changeAnime( spep_1 + 140, view3, 6 );
changeAnime( spep_1 + 174 + 0, view3, 6 );
changeAnime( spep_1 + 174 + 8, view3, 7 );
changeAnime( spep_1 + 200 + 0, view3, 8 );
changeAnime( spep_1 + 200 + 20, view3, 107 );
changeAnime( spep_1 + 256 + 0, view3, 108 );
changeAnime( spep_1 + 256 + 32, view3, 106 );

setMoveKey( spep_1 + 0, view3, 621.6, 388.5 , 0 );
setMoveKey( spep_1 + 2, view3, 417, 284.6 , 0 );
setMoveKey( spep_1 + 4, view3, 217.9, 183.6 , 0 );
setMoveKey( spep_1 + 6, view3, 24.4, 85.4 , 0 );
setMoveKey( spep_1 + 8, view3, -163.7, -9.9 , 0 );
setMoveKey( spep_1 + 10, view3, -171.6, -14.7 , 0 );
setMoveKey( spep_1 + 12, view3, -179.6, -19.5 , 0 );
setMoveKey( spep_1 + 14, view3, -187.7, -24.3 , 0 );
setMoveKey( spep_1 + 16, view3, -195.8, -29.2 , 0 );
setMoveKey( spep_1 + 18, view3, -204.1, -34.2 , 0 );
setMoveKey( spep_1 + 20, view3, -196.6, -35.5 , 0 );
setMoveKey( spep_1 + 22, view3, -186, -15.8 , 0 );
setMoveKey( spep_1 + 24, view3, -175.3, 4.3 , 0 );
setMoveKey( spep_1 + 26, view3, -164.5, 24.5 , 0 );
setMoveKey( spep_1 + 28, view3, -165.5, 23.4 , 0 );
setMoveKey( spep_1 + 30, view3, -164, 24.9 , 0 );
setMoveKey( spep_1 + 32, view3, -162.5, 26.4 , 0 );
setMoveKey( spep_1 + 34, view3, -161, 27.9 , 0 );
setMoveKey( spep_1 + 36, view3, -159.5, 29.4 , 0 );
setMoveKey( spep_1 + 38, view3, -158, 30.9 , 0 );
setMoveKey( spep_1 + 40, view3, -156.5, 32.4 , 0 );
setMoveKey( spep_1 + 42, view3, -155, 33.9 , 0 );
setMoveKey( spep_1 + 44, view3, -153.5, 35.4 , 0 );
setMoveKey( spep_1 + 46, view3, -152, 36.9 , 0 );
setMoveKey( spep_1 + 48, view3, -150.5, 38.4 , 0 );
setMoveKey( spep_1 + 50, view3, -149, 39.9 , 0 );
setMoveKey( spep_1 + 52, view3, -147.5, 41.4 , 0 );
setMoveKey( spep_1 + 54, view3, -146, 42.9 , 0 );
setMoveKey( spep_1 + 56, view3, -157.8, 44.4 , 0 );
setMoveKey( spep_1 + 58, view3, -129.4, 47.3 , 0 );
setMoveKey( spep_1 + 60, view3, -141.5, 47.4 , 0 );
setMoveKey( spep_1 + 62, view3, -140, 48.9 , 0 );
setMoveKey( spep_1 + 64, view3, -138.5, 50.4 , 0 );
setMoveKey( spep_1 + 66, view3, -137, 51.9 , 0 );
setMoveKey( spep_1 + 68, view3, -135.5, 53.4 , 0 );
setMoveKey( spep_1 + 70, view3, -134, 54.9 , 0 );
setMoveKey( spep_1 + 72, view3, -132.5, 56.4 , 0 );
setMoveKey( spep_1 + 74, view3, -131, 57.9 , 0 );
setMoveKey( spep_1 + 76, view3, -129.5, 59.4 , 0 );
setMoveKey( spep_1 + 78, view3, -128, 60.9 , 0 );
setMoveKey( spep_1 + 86, view3, -141, 60.9 , 0 );
setMoveKey( spep_1 + 88, view3, -159.4, 60.9 , 0 );
setMoveKey( spep_1 + 90, view3, -131.4, 62.5 , 0 );
setMoveKey( spep_1 + 92, view3, -165.3, 64 , 0 );
setMoveKey( spep_1 + 94, view3, -145, 57.8 , 0 );
setMoveKey( spep_1 + 96, view3, -155.8, 60.9 , 0 );
setMoveKey( spep_1 + 98, view3, -174.2, 60.9 , 0 );
setMoveKey( spep_1 + 100, view3, -146.2, 62.5 , 0 );
setMoveKey( spep_1 + 102, view3, -180.1, 64 , 0 );
setMoveKey( spep_1 + 104, view3, -159.8, 57.8 , 0 );
setMoveKey( spep_1 + 106, view3, -170.6, 60.9 , 0 );
setMoveKey( spep_1 + 108, view3, -189, 60.9 , 0 );
setMoveKey( spep_1 + 110, view3, -161, 62.5 , 0 );
setMoveKey( spep_1 + 112, view3, -194.9, 64 , 0 );
setMoveKey( spep_1 + 114, view3, -174.6, 57.8 , 0 );
setMoveKey( spep_1 + 116, view3, -166.8, 60.9 , 0 );
setMoveKey( spep_1 + 118, view3, -166.6, 60.9 , 0 );
setMoveKey( spep_1 + 120, view3, -120.1, 62.5 , 0 );
setMoveKey( spep_1 + 122, view3, -135.4, 64 , 0 );
setMoveKey( spep_1 + 124, view3, -96.5, 57.8 , 0 );
setMoveKey( spep_1 + 126, view3, -88.6, 60.9 , 0 );
setMoveKey( spep_1 + 128, view3, -88.5, 60.9 , 0 );
setMoveKey( spep_1 + 130, view3, -41.9, 62.5 , 0 );
setMoveKey( spep_1 + 132, view3, -57.2, 64 , 0 );
setMoveKey( spep_1 + 134, view3, -18.3, 57.8 , 0 );
setMoveKey( spep_1 + 136, view3, -10.5, 60.9 , 0 );
setMoveKey( spep_1 + 138, view3, -10.3, 60.9 , 0 );
setMoveKey( spep_1 + 140, view3, 88.1, 143.8 , 0 );
setMoveKey( spep_1 + 142, view3, 188.6, 220.3 , 0 );
setMoveKey( spep_1 + 144, view3, 277.3, 287.7 , 0 );
setMoveKey( spep_1 + 146, view3, 354.1, 346.2 , 0 );
setMoveKey( spep_1 + 148, view3, 419.1, 395.7 , 0 );
setMoveKey( spep_1 + 150, view3, 472.3, 436.1 , 0 );
setMoveKey( spep_1 + 152, view3, 513.7, 467.6 , 0 );
setMoveKey( spep_1 + 154, view3, 543.2, 490.1 , 0 );
setMoveKey( spep_1 + 156, view3, 561, 503.6 , 0 );
setMoveKey( spep_1 + 158, view3, 566.9, 508.1 , 0 );
setMoveKey( spep_1 + 172, view3, -10, 255.9 , 0 );
setMoveKey( spep_1 + 180, view3, -10.2, 255.8 , 0 );
setMoveKey( spep_1 + 182, view3, -115.3, 169.1 , 0 );
setMoveKey( spep_1 + 184, view3, -381.6, -57.1 , 0 );
setMoveKey( spep_1 + 186, view3, -509.2, -152.8 , 0 );
setMoveKey( spep_1 + 188, view3, -431.7, -111.4 , 0 );
setMoveKey( spep_1 + 200, view3, -463.3, -763.9 , 0 );
setMoveKey( spep_1 + 202, view3, -470.2, -768.9 , 0 );
setMoveKey( spep_1 + 204, view3, 264.8, 130.9 , 0 );
setMoveKey( spep_1 + 206, view3, 241.9, 114.3 , 0 );
setMoveKey( spep_1 + 208, view3, 209.7, 91.1 , 0 );
setMoveKey( spep_1 + 210, view3, 168.4, 61.3 , 0 );
setMoveKey( spep_1 + 212, view3, 117.8, 24.9 , 0 );
setMoveKey( spep_1 + 214, view3, 58.1, -18.1 , 0 );
setMoveKey( spep_1 + 216, view3, -10.8, -67.8 , 0 );
setMoveKey( spep_1 + 218, view3, -88.9, -124.1 , 0 );
setMoveKey( spep_1 + 220, view3, -88.9, -124.1 , 0 );
setMoveKey( spep_1 + 222, view3, 25.8, -62.8 , 0 );
setMoveKey( spep_1 + 224, view3, 221.7, -8.4 , 0 );
setMoveKey( spep_1 + 226, view3, 335.4, 71 , 0 );
setMoveKey( spep_1 + 228, view3, 260, 4.2 , 0 );
setMoveKey( spep_1 + 254, view3, 6, -992.7 , 0 );
setMoveKey( spep_1 + 256, view3, 6.9, -885.3 , 0 );
setMoveKey( spep_1 + 258, view3, 7.8, -782.5 , 0 );
setMoveKey( spep_1 + 260, view3, 8.6, -684.3 , 0 );
setMoveKey( spep_1 + 262, view3, 9.4, -590.8 , 0 );
setMoveKey( spep_1 + 264, view3, 10.2, -501.8 , 0 );
setMoveKey( spep_1 + 266, view3, 10.9, -417.4 , 0 );
setMoveKey( spep_1 + 268, view3, 11.6, -337.6 , 0 );
setMoveKey( spep_1 + 270, view3, 12.2, -262.5 , 0 );
setMoveKey( spep_1 + 272, view3, 12.8, -191.9 , 0 );
setMoveKey( spep_1 + 274, view3, 13.4, -125.9 , 0 );
setMoveKey( spep_1 + 276, view3, 13.9, -64.6 , 0 );
setMoveKey( spep_1 + 278, view3, 13.9, -44.6 , 0 );
setMoveKey( spep_1 + 280, view3, 13.9, -24.6 , 0 );
setMoveKey( spep_1 + 282, view3, 13.9, -4.6 , 0 );
setMoveKey( spep_1 + 284, view3, 13.9, 15.4 , 0 );
setMoveKey( spep_1 + 286, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 290, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 292, view3, 64, -54.8 , 0 );
setMoveKey( spep_1 + 294, view3, -36, -154.8 , 0 );
setMoveKey( spep_1 + 296, view3, -36, -54.8 , 0 );
setMoveKey( spep_1 + 298, view3, 64, -154.8 , 0 );
setMoveKey( spep_1 + 300, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 302, view3, 64, -84.8 , 0 );
setMoveKey( spep_1 + 304, view3, -36, -124.8 , 0 );
setMoveKey( spep_1 + 306, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 308, view3, 74, -124.8 , 0 );
setMoveKey( spep_1 + 310, view3, -46, -84.8 , 0 );
setMoveKey( spep_1 + 312, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 316, view3, 14, -104.8 , 0 );
setMoveKey( spep_1 + 318, view3, 0.7, -478.2 , 0 );
setMoveKey( spep_1 + 320, view3, -12.7, -851.5 , 0 );
setMoveKey( spep_1 + 322, view3, -26, -1224.8 , 0 );
setScaleKey( spep_1 + 0, view3, 0.9, 0.9 );
setScaleKey( spep_1 + 2, view3, 0.89, 0.89 );
setScaleKey( spep_1 + 4, view3, 0.88, 0.88 );
setScaleKey( spep_1 + 6, view3, 0.86, 0.86 );
setScaleKey( spep_1 + 8, view3, 0.85, 0.85 );
setScaleKey( spep_1 + 10, view3, 0.86, 0.86 );
setScaleKey( spep_1 + 12, view3, 0.86, 0.86 );
setScaleKey( spep_1 + 14, view3, 0.87, 0.87 );
setScaleKey( spep_1 + 16, view3, 0.87, 0.87 );
setScaleKey( spep_1 + 18, view3, 0.88, 0.88 );
setScaleKey( spep_1 + 20, view3, 0.88, 0.88 );
setScaleKey( spep_1 + 22, view3, 0.89, 0.89 );
setScaleKey( spep_1 + 24, view3, 0.89, 0.89 );
setScaleKey( spep_1 + 26, view3, 0.9, 0.9 );
setScaleKey( spep_1 + 28, view3, 0.9, 0.9 );
setScaleKey( spep_1 + 30, view3, 0.92, 0.92 );
setScaleKey( spep_1 + 32, view3, 0.93, 0.93 );
setScaleKey( spep_1 + 34, view3, 0.95, 0.95 );
setScaleKey( spep_1 + 36, view3, 0.96, 0.96 );
setScaleKey( spep_1 + 38, view3, 0.98, 0.98 );
setScaleKey( spep_1 + 40, view3, 1, 1 );
setScaleKey( spep_1 + 42, view3, 1.01, 1.01 );
setScaleKey( spep_1 + 44, view3, 1.03, 1.03 );
setScaleKey( spep_1 + 46, view3, 1.04, 1.04 );
setScaleKey( spep_1 + 48, view3, 1.06, 1.06 );
setScaleKey( spep_1 + 50, view3, 1.08, 1.08 );
setScaleKey( spep_1 + 52, view3, 1.09, 1.09 );
setScaleKey( spep_1 + 54, view3, 1.11, 1.11 );
setScaleKey( spep_1 + 56, view3, 1.12, 1.12 );
setScaleKey( spep_1 + 58, view3, 1.14, 1.14 );
setScaleKey( spep_1 + 60, view3, 1.16, 1.16 );
setScaleKey( spep_1 + 62, view3, 1.17, 1.17 );
setScaleKey( spep_1 + 64, view3, 1.19, 1.19 );
setScaleKey( spep_1 + 66, view3, 1.2, 1.2 );
setScaleKey( spep_1 + 68, view3, 1.22, 1.22 );
setScaleKey( spep_1 + 70, view3, 1.24, 1.24 );
setScaleKey( spep_1 + 72, view3, 1.25, 1.25 );
setScaleKey( spep_1 + 74, view3, 1.27, 1.27 );
setScaleKey( spep_1 + 76, view3, 1.28, 1.28 );
setScaleKey( spep_1 + 78, view3, 1.3, 1.3 );
setScaleKey( spep_1 + 86, view3, 1.3, 1.3 );
setScaleKey( spep_1 + 140, view3, 1.3, 1.3 );
setScaleKey( spep_1 + 172, view3, 1, 1 );
setScaleKey( spep_1 + 180, view3, 0.7, 0.7 );
setScaleKey( spep_1 + 182, view3, 0.92, 0.92 );
setScaleKey( spep_1 + 184, view3, 1.61, 1.61 );
setScaleKey( spep_1 + 186, view3, 1.75, 1.75 );
setScaleKey( spep_1 + 188, view3, 1.8, 1.8 );
setScaleKey( spep_1 + 200, view3, 4.5, 4.5 );
setScaleKey( spep_1 + 202, view3, 4.47, 4.47 );
setScaleKey( spep_1 + 204, view3, 2.92, 2.92 );
setScaleKey( spep_1 + 206, view3, 2.81, 2.81 );
setScaleKey( spep_1 + 208, view3, 2.66, 2.66 );
setScaleKey( spep_1 + 210, view3, 2.48, 2.48 );
setScaleKey( spep_1 + 212, view3, 2.24, 2.24 );
setScaleKey( spep_1 + 214, view3, 1.97, 1.97 );
setScaleKey( spep_1 + 216, view3, 1.66, 1.66 );
setScaleKey( spep_1 + 218, view3, 1.3, 1.3 );
setScaleKey( spep_1 + 220, view3, 1, 1 );
setScaleKey( spep_1 + 222, view3, 1.26, 1.26 );
setScaleKey( spep_1 + 224, view3, 2.18, 2.18 );
setScaleKey( spep_1 + 226, view3, 2.34, 2.34 );
setScaleKey( spep_1 + 228, view3, 2.4, 2.4 );
setScaleKey( spep_1 + 254, view3, 2, 2 );
setScaleKey( spep_1 + 256, view3, 2.02, 2.02 );
setScaleKey( spep_1 + 258, view3, 2.05, 2.05 );
setScaleKey( spep_1 + 260, view3, 2.07, 2.07 );
setScaleKey( spep_1 + 262, view3, 2.09, 2.09 );
setScaleKey( spep_1 + 264, view3, 2.11, 2.11 );
setScaleKey( spep_1 + 266, view3, 2.12, 2.12 );
setScaleKey( spep_1 + 268, view3, 2.14, 2.14 );
setScaleKey( spep_1 + 270, view3, 2.16, 2.16 );
setScaleKey( spep_1 + 272, view3, 2.17, 2.17 );
setScaleKey( spep_1 + 274, view3, 2.19, 2.19 );
setScaleKey( spep_1 + 276, view3, 2.2, 2.2 );
setScaleKey( spep_1 + 286, view3, 2.2, 2.2 );
setScaleKey( spep_1 + 326, view3, 2.2, 2.2 );
setRotateKey( spep_1 + 0, view3, -24 );
setRotateKey( spep_1 + 19, view3, -24 );
setRotateKey( spep_1 + 20, view3, 0 );
setRotateKey( spep_1 + 28, view3, 0 );
setRotateKey( spep_1 + 38, view3, 0 );
setRotateKey( spep_1 + 40, view3, 0 );
setRotateKey( spep_1 + 44, view3, 0 );
setRotateKey( spep_1 + 54, view3, 0 );
setRotateKey( spep_1 + 58, view3, 0 );
setRotateKey( spep_1 + 60, view3, 0 );
setRotateKey( spep_1 + 86, view3, 0 );
setRotateKey( spep_1 + 219, view3, 0 );
setRotateKey( spep_1 + 220, view3, -47 );
setRotateKey( spep_1 + 253, view3, -47 );
setRotateKey( spep_1 + 254, view3, -50 );
setRotateKey( spep_1 + 285, view3, -50 );
setRotateKey( spep_1 + 286, view3, -143 );
setRotateKey( spep_1 + 326, view3, -143 );

-- ** 書き文字 ** --
cttga = entryEffectLife( spep_1 + 6,  10005, 12, 0x100, -1, 0, -85.9, 222 );
setEffMoveKey( spep_1 + 6, cttga, -85.9, 222 , 0 );
setEffMoveKey( spep_1 + 8, cttga, -76.4, 231.5 , 0 );
setEffMoveKey( spep_1 + 10, cttga, -95.4, 212.5 , 0 );
setEffMoveKey( spep_1 + 12, cttga, -95.4, 231.5 , 0 );
setEffMoveKey( spep_1 + 14, cttga, -76.4, 212.5 , 0 );
setEffScaleKey( spep_1 + 6, cttga, 1, 1 );
setEffScaleKey( spep_1 + 14, cttga, 1, 1 );
setEffRotateKey( spep_1 + 6, cttga, -13 );
setEffRotateKey( spep_1 + 14, cttga, -13 );
setEffAlphaKey( spep_1 + 6, cttga, 255 );
setEffAlphaKey( spep_1 + 14, cttga, 255 );

cttgaga = entryEffectLife( spep_1 + 30,  10002, 22, 0x100, -1, 0, -123.9, 250 );
setEffMoveKey( spep_1 + 30, cttgaga, -123.9, 250 , 0 );
setEffMoveKey( spep_1 + 34, cttgaga, -123.9, 250 , 0 );
setEffMoveKey( spep_1 + 36, cttgaga, -120.6, 253.3 , 0 );
setEffMoveKey( spep_1 + 38, cttgaga, -120.6, 246.7 , 0 );
setEffMoveKey( spep_1 + 40, cttgaga, -130.5, 253.3 , 0 );
setEffMoveKey( spep_1 + 42, cttgaga, -127.2, 246.7 , 0 );
setEffMoveKey( spep_1 + 44, cttgaga, -123.9, 250 , 0 );
setEffMoveKey( spep_1 + 46, cttgaga, -120.6, 253.3 , 0 );
setEffMoveKey( spep_1 + 48, cttgaga, -120.6, 246.7 , 0 );
setEffMoveKey( spep_1 + 50, cttgaga, -130.5, 253.3 , 0 );
setEffMoveKey( spep_1 + 52, cttgaga, -127.2, 246.7 , 0 );
setEffScaleKey( spep_1 + 30, cttgaga, 1.31, 0.13 );
setEffScaleKey( spep_1 + 32, cttgaga, 1.31, 0.72 );
setEffScaleKey( spep_1 + 34, cttgaga, 1.31, 1.31 );
setEffScaleKey( spep_1 + 52, cttgaga, 1.31, 1.31 );
setEffRotateKey( spep_1 + 30, cttgaga, 0 );
setEffRotateKey( spep_1 + 52, cttgaga, 0 );
setEffAlphaKey( spep_1 + 30, cttgaga, 255 );
setEffAlphaKey( spep_1 + 52, cttgaga, 255 );

cttdogaga = entryEffectLife( spep_1 + 54,  10017, 26, 0x100, -1, 0, -15.8, 280 );
setEffMoveKey( spep_1 + 54, cttdogaga, -15.8, 280 , 0 );
setEffMoveKey( spep_1 + 56, cttdogaga, -21.2, 285.4 , 0 );
setEffMoveKey( spep_1 + 58, cttdogaga, -4.8, 274.5 , 0 );
setEffMoveKey( spep_1 + 60, cttdogaga, -21.2, 274.4 , 0 );
setEffMoveKey( spep_1 + 62, cttdogaga, -10.3, 290.9 , 0 );
setEffMoveKey( spep_1 + 64, cttdogaga, -15.8, 280 , 0 );
setEffMoveKey( spep_1 + 66, cttdogaga, -21.2, 285.4 , 0 );
setEffMoveKey( spep_1 + 68, cttdogaga, -4.8, 274.5 , 0 );
setEffMoveKey( spep_1 + 70, cttdogaga, -21.2, 274.4 , 0 );
setEffMoveKey( spep_1 + 72, cttdogaga, -10.3, 290.9 , 0 );
setEffMoveKey( spep_1 + 74, cttdogaga, -15.8, 280 , 0 );
setEffMoveKey( spep_1 + 76, cttdogaga, -21.2, 285.4 , 0 );
setEffMoveKey( spep_1 + 78, cttdogaga, -4.8, 274.5 , 0 );
setEffMoveKey( spep_1 + 80, cttdogaga, -21.2, 274.4 , 0 );
setEffScaleKey( spep_1 + 54, cttdogaga, 1.74, 1.74 );
setEffScaleKey( spep_1 + 80, cttdogaga, 1.74, 1.74 );
setEffRotateKey( spep_1 + 54, cttdogaga, 10 );
setEffRotateKey( spep_1 + 80, cttdogaga, 10 );
setEffAlphaKey( spep_1 + 54, cttdogaga, 255 );
setEffAlphaKey( spep_1 + 80, cttdogaga, 255 );

cttbaki = entryEffectLife( spep_1 + 86,  10020, 16, 0x100, -1, 0, -67.9, -242.1 );
setEffMoveKey( spep_1 + 86, cttbaki, -67.9, -242.1 , 0 );
setEffMoveKey( spep_1 + 88, cttbaki, -56, -246 , 0 );
setEffMoveKey( spep_1 + 90, cttbaki, -79.6, -238.1 , 0 );
setEffMoveKey( spep_1 + 92, cttbaki, -72.6, -248.4 , 0 );
setEffMoveKey( spep_1 + 94, cttbaki, -63.9, -230.2 , 0 );
setEffMoveKey( spep_1 + 102, cttbaki, -63.9, -230.2 , 0 );
setEffScaleKey( spep_1 + 86, cttbaki, 1.75, 1.75 );
setEffScaleKey( spep_1 + 102, cttbaki, 1.75, 1.75 );
setEffRotateKey( spep_1 + 86, cttbaki, 0 );
setEffRotateKey( spep_1 + 102, cttbaki, 0 );
setEffAlphaKey( spep_1 + 86, cttbaki, 255 );
setEffAlphaKey( spep_1 + 102, cttbaki, 255 );

cttdon = entryEffectLife( spep_1 + 98,  10019, 8, 0x100, -1, 0, -29.9, 315.9 );
setEffMoveKey( spep_1 + 98, cttdon, -29.9, 315.9 , 0 );
setEffMoveKey( spep_1 + 100, cttdon, -37.9, 323.9 , 0 );
setEffMoveKey( spep_1 + 102, cttdon, -13.9, 307.9 , 0 );
setEffMoveKey( spep_1 + 104, cttdon, -38, 312.6 , 0 );
setEffMoveKey( spep_1 + 106, cttdon, -24.3, 323.7 , 0 );
setEffScaleKey( spep_1 + 98, cttdon, 1.31, 1.31 );
setEffScaleKey( spep_1 + 106, cttdon, 1.31, 1.31 );
setEffRotateKey( spep_1 + 98, cttdon, 15 );
setEffRotateKey( spep_1 + 106, cttdon, 15 );
setEffAlphaKey( spep_1 + 98, cttdon, 255 );
setEffAlphaKey( spep_1 + 106, cttdon, 255 );

cttshun = entryEffectLife( spep_1 + 102,  10011, 12, 0x100, -1, 0, 163.9, 185.9 );
setEffMoveKey( spep_1 + 102, cttshun, 163.9, 185.9 , 0 );
setEffMoveKey( spep_1 + 104, cttshun, 163.9, 185.9 , 0 );
setEffMoveKey( spep_1 + 106, cttshun, 163.9, 186 , 0 );
setEffMoveKey( spep_1 + 110, cttshun, 163.9, 186 , 0 );
setEffMoveKey( spep_1 + 112, cttshun, 163.9, 185.9 , 0 );
setEffMoveKey( spep_1 + 114, cttshun, 163.9, 185.9 , 0 );
setEffScaleKey( spep_1 + 102, cttshun, 1, 0.1 );
setEffScaleKey( spep_1 + 104, cttshun, 1, 0.55 );
setEffScaleKey( spep_1 + 106, cttshun, 1, 1 );
setEffScaleKey( spep_1 + 110, cttshun, 1, 1 );
setEffScaleKey( spep_1 + 112, cttshun, 1.05, 1.05 );
setEffScaleKey( spep_1 + 114, cttshun, 1.1, 1.1 );
setEffRotateKey( spep_1 + 102, cttshun, 0 );
setEffRotateKey( spep_1 + 114, cttshun, 0 );
setEffAlphaKey( spep_1 + 102, cttshun, 255 );
setEffAlphaKey( spep_1 + 110, cttshun, 255 );
setEffAlphaKey( spep_1 + 112, cttshun, 128 );
setEffAlphaKey( spep_1 + 114, cttshun, 0 );

cttbago = entryEffectLife( spep_1 + 106,  10021, 12, 0x100, -1, 0, 81.9, -125.5 );
setEffMoveKey( spep_1 + 106, cttbago, 81.9, -125.5 , 0 );
setEffMoveKey( spep_1 + 108, cttbago, 91.9, -115.4 , 0 );
setEffMoveKey( spep_1 + 110, cttbago, 71.9, -140.7 , 0 );
setEffMoveKey( spep_1 + 112, cttbago, 76.9, -115.5 , 0 );
setEffMoveKey( spep_1 + 114, cttbago, 92, -130.6 , 0 );
setEffMoveKey( spep_1 + 118, cttbago, 92, -130.6 , 0 );
setEffScaleKey( spep_1 + 106, cttbago, 1.99, 1.99 );
setEffScaleKey( spep_1 + 118, cttbago, 1.99, 1.99 );
setEffRotateKey( spep_1 + 106, cttbago, -14 );
setEffRotateKey( spep_1 + 118, cttbago, -14 );
setEffAlphaKey( spep_1 + 106, cttbago, 255 );
setEffAlphaKey( spep_1 + 118, cttbago, 255 );

cttshun2 = entryEffectLife( spep_1 + 130,  10011, 12, 0x100, -1, 0, -108.1, -352.3 );
setEffMoveKey( spep_1 + 130, cttshun2, -108.1, -352.3 , 0 );
setEffMoveKey( spep_1 + 132, cttshun2, -108.1, -352.3 , 0 );
setEffMoveKey( spep_1 + 134, cttshun2, -108.1, -352.2 , 0 );
setEffMoveKey( spep_1 + 140, cttshun2, -108.1, -352.2 , 0 );
setEffMoveKey( spep_1 + 142, cttshun2, -108.2, -352.2 , 0 );
setEffScaleKey( spep_1 + 130, cttshun2, 1, 0.1 );
setEffScaleKey( spep_1 + 132, cttshun2, 1, 0.55 );
setEffScaleKey( spep_1 + 134, cttshun2, 1, 1 );
setEffScaleKey( spep_1 + 138, cttshun2, 1, 1 );
setEffScaleKey( spep_1 + 140, cttshun2, 1.05, 1.05 );
setEffScaleKey( spep_1 + 142, cttshun2, 1.1, 1.1 );
setEffRotateKey( spep_1 + 130, cttshun, 0 );
setEffRotateKey( spep_1 + 142, cttshun, 0 );
setEffAlphaKey( spep_1 + 130, cttshun, 255 );
setEffAlphaKey( spep_1 + 138, cttshun, 255 );
setEffAlphaKey( spep_1 + 140, cttshun, 128 );
setEffAlphaKey( spep_1 + 142, cttshun, 0 );

cttbaki2 = entryEffectLife( spep_1 + 140,  10020, 14, 0x100, -1, 0, 119.9, -145.3 );
setEffMoveKey( spep_1 + 140, cttbaki2, 119.9, -145.3 , 0 );
setEffMoveKey( spep_1 + 142, cttbaki2, 131, -150.7 , 0 );
setEffMoveKey( spep_1 + 144, cttbaki2, 109, -139.7 , 0 );
setEffMoveKey( spep_1 + 146, cttbaki2, 114.4, -150.8 , 0 );
setEffMoveKey( spep_1 + 148, cttbaki2, 125.5, -134.2 , 0 );
setEffMoveKey( spep_1 + 150, cttbaki2, 119.9, -145.3 , 0 );
setEffMoveKey( spep_1 + 152, cttbaki2, 131, -150.7 , 0 );
setEffMoveKey( spep_1 + 154, cttbaki2, 109, -139.7 , 0 );
setEffScaleKey( spep_1 + 140, cttbaki2, 1.73, 1.73 );
setEffScaleKey( spep_1 + 154, cttbaki2, 1.73, 1.73 );
setEffRotateKey( spep_1 + 140, cttbaki2, 8 );
setEffRotateKey( spep_1 + 154, cttbaki2, 8 );
setEffAlphaKey( spep_1 + 140, cttbaki2, 255 );
setEffAlphaKey( spep_1 + 154, cttbaki2, 255 );

cttshun3 = entryEffectLife( spep_1 + 172,  10011, 8, 0x100, -1, 0, 105.8, 478 );
setEffMoveKey( spep_1 + 172, cttshun3, 105.8, 478 , 0 );
setEffMoveKey( spep_1 + 180, cttshun3, 105.8, 478 , 0 );
setEffScaleKey( spep_1 + 172, cttshun3, 0.7, 0.07 );
setEffScaleKey( spep_1 + 174, cttshun3, 0.7, 0.38 );
setEffScaleKey( spep_1 + 176, cttshun3, 0.7, 0.7 );
setEffScaleKey( spep_1 + 178, cttshun3, 0.74, 0.74 );
setEffScaleKey( spep_1 + 180, cttshun3, 0.77, 0.77 );
setEffRotateKey( spep_1 + 172, cttshun3, -12 );
setEffRotateKey( spep_1 + 180, cttshun3, -12 );
setEffAlphaKey( spep_1 + 172, cttshun3, 255 );
setEffAlphaKey( spep_1 + 176, cttshun3, 255 );
setEffAlphaKey( spep_1 + 178, cttshun3, 128 );
setEffAlphaKey( spep_1 + 180, cttshun3, 0 );

cttbaki3 = entryEffectLife( spep_1 + 180,  10020, 16, 0x100, -1, 0, 125.1, -148.2 );
setEffMoveKey( spep_1 + 180, cttbaki3, 125.1, -148.2 , 0 );
setEffMoveKey( spep_1 + 182, cttbaki3, 140.2, -155.5 , 0 );
setEffMoveKey( spep_1 + 184, cttbaki3, 110.2, -140.6 , 0 );
setEffMoveKey( spep_1 + 186, cttbaki3, 117.6, -155.7 , 0 );
setEffMoveKey( spep_1 + 188, cttbaki3, 132.6, -133.1 , 0 );
setEffMoveKey( spep_1 + 190, cttbaki3, 125.1, -148.2 , 0 );
setEffMoveKey( spep_1 + 192, cttbaki3, 140.2, -155.5 , 0 );
setEffMoveKey( spep_1 + 194, cttbaki3, 110.2, -140.6 , 0 );
setEffMoveKey( spep_1 + 196, cttbaki3, 117.6, -155.7 , 0 );
setEffScaleKey( spep_1 + 180, cttbaki3, 2.35, 2.35 );
setEffScaleKey( spep_1 + 196, cttbaki3, 2.35, 2.35 );
setEffRotateKey( spep_1 + 180, cttbaki3, 8 );
setEffRotateKey( spep_1 + 196, cttbaki3, 8 );
setEffAlphaKey( spep_1 + 180, cttbaki3, 255 );
setEffAlphaKey( spep_1 + 196, cttbaki3, 255 );

cttshun4 = entryEffectLife( spep_1 + 204,  10011, 8, 0x100, -1, 0, -216.2, 63.9 );
setEffMoveKey( spep_1 + 204, cttshun4, -216.2, 63.9 , 0 );
setEffMoveKey( spep_1 + 210, cttshun4, -216.2, 63.9 , 0 );
setEffMoveKey( spep_1 + 212, cttshun4, -216.3, 63.9 , 0 );
setEffScaleKey( spep_1 + 204, cttshun4, 0.7, 0.07 );
setEffScaleKey( spep_1 + 206, cttshun4, 0.7, 0.38 );
setEffScaleKey( spep_1 + 208, cttshun4, 0.7, 0.7 );
setEffScaleKey( spep_1 + 210, cttshun4, 0.74, 0.74 );
setEffScaleKey( spep_1 + 212, cttshun4, 0.77, 0.77 );
setEffRotateKey( spep_1 + 204, cttshun4, 0 );
setEffRotateKey( spep_1 + 2012, cttshun4, 0 );
setEffAlphaKey( spep_1 + 204, cttshun4, 255 );
setEffAlphaKey( spep_1 + 208, cttshun4, 255 );
setEffAlphaKey( spep_1 + 210, cttshun4, 128 );
setEffAlphaKey( spep_1 + 212, cttshun4, 0 );

cttdon2 = entryEffectLife( spep_1 + 220,  10019, 8, 0x100, -1, 0, -55.9, 216 );
setEffMoveKey( spep_1 + 220, cttdon2, -55.9, 216 , 0 );
setEffMoveKey( spep_1 + 222, cttdon2, -75.2, 227.1 , 0 );
setEffMoveKey( spep_1 + 224, cttdon2, -21.5, 209.1 , 0 );
setEffMoveKey( spep_1 + 226, cttdon2, -69.5, 205.7 , 0 );
setEffMoveKey( spep_1 + 228, cttdon2, -49.2, 233.7 , 0 );
setEffScaleKey( spep_1 + 220, cttdon2, 2.57, 2.57 );
setEffScaleKey( spep_1 + 228, cttdon2, 2.57, 2.57 );
setEffRotateKey( spep_1 + 220, cttdon2, 0 );
setEffRotateKey( spep_1 + 228, cttdon2, 0 );
setEffAlphaKey( spep_1 + 220, cttdon2, 255 );
setEffAlphaKey( spep_1 + 228, cttdon2, 255 );

cttbago2 = entryEffectLife( spep_1 + 286,  10021, 28, 0x100, -1, 0, -120.9, 416.1 );
setEffMoveKey( spep_1 + 286, cttbago2, -120.9, 416.1 , 0 );
setEffMoveKey( spep_1 + 288, cttbago2, -110.9, 426.2 , 0 );
setEffMoveKey( spep_1 + 290, cttbago2, -130.9, 400.9 , 0 );
setEffMoveKey( spep_1 + 292, cttbago2, -125.9, 426.1 , 0 );
setEffMoveKey( spep_1 + 294, cttbago2, -120.9, 416.1 , 0 );
setEffMoveKey( spep_1 + 296, cttbago2, -110.9, 426.2 , 0 );
setEffMoveKey( spep_1 + 298, cttbago2, -130.9, 400.9 , 0 );
setEffMoveKey( spep_1 + 300, cttbago2, -125.9, 426.1 , 0 );
setEffMoveKey( spep_1 + 302, cttbago2, -120.9, 416.1 , 0 );
setEffMoveKey( spep_1 + 304, cttbago2, -110.9, 426.2 , 0 );
setEffMoveKey( spep_1 + 306, cttbago2, -130.9, 400.9 , 0 );
setEffMoveKey( spep_1 + 308, cttbago2, -125.9, 426.1 , 0 );
setEffMoveKey( spep_1 + 310, cttbago2, -120.9, 416.1 , 0 );
setEffMoveKey( spep_1 + 312, cttbago2, -110.9, 426.2 , 0 );
setEffMoveKey( spep_1 + 314, cttbago2, -130.9, 400.9 , 0 );
setEffScaleKey( spep_1 + 286, cttbago2, 1.99, 1.99 );
setEffScaleKey( spep_1 + 314, cttbago2, 1.99, 1.99 );
setEffRotateKey( spep_1 + 286, cttbago2, -14 );
setEffRotateKey( spep_1 + 314, cttbago2, -14 );
setEffAlphaKey( spep_1 + 286, cttbago2, 255 );
setEffAlphaKey( spep_1 + 314, cttbago2, 255 );

-- ** ヒットエフェクト ** --
hitt = entryEffectLife( spep_1 + 6,  908, 8, 0x100, -1, 0, -37.2, -19.6 );
setEffMoveKey( spep_1 + 6, hitt, -37.2, -19.6 , 0 );
setEffMoveKey( spep_1 + 14, hitt, -37.2, -19.6 , 0 );
setEffScaleKey( spep_1 + 6, hitt, 0.17, 0.17 );
setEffScaleKey( spep_1 + 8, hitt, 0.79, 0.79 );
setEffScaleKey( spep_1 + 10, hitt, 1.4, 1.4 );
setEffScaleKey( spep_1 + 12, hitt, 2.01, 2.01 );
setEffScaleKey( spep_1 + 14, hitt, 1.79, 1.79 );
setEffRotateKey( spep_1 + 6, hitt, 0 );
setEffRotateKey( spep_1 + 14, hitt, 0 );
setEffAlphaKey( spep_1 + 6, hitt, 255 );
setEffAlphaKey( spep_1 + 12, hitt, 255 );
setEffAlphaKey( spep_1 + 14, hitt, 138 );

hitt1 = entryEffectLife( spep_1 + 32,  908, 4, 0x100, -1, 0, -202.6, 7 );
setEffMoveKey( spep_1 + 32, hitt1, -202.6, 7 , 0 );
setEffMoveKey( spep_1 + 36, hitt1, -202.6, 7 , 0 );
setEffScaleKey( spep_1 + 32, hitt1, 0.17, 0.17 );
setEffScaleKey( spep_1 + 34, hitt1, 0.79, 0.79 );
setEffScaleKey( spep_1 + 36, hitt1, 1.4, 1.4 );
setEffRotateKey( spep_1 + 32, hitt1, 0 );
setEffRotateKey( spep_1 + 36, hitt1, 0 );
setEffAlphaKey( spep_1 + 32, hitt1, 255 );
setEffAlphaKey( spep_1 + 36, hitt1, 255 );

hitt2 = entryEffectLife( spep_1 + 40,  908, 4, 0x100, -1, 0, -50.7, -55 );
setEffMoveKey( spep_1 + 40, hitt2, -50.7, -55 , 0 );
setEffMoveKey( spep_1 + 44, hitt2, -50.7, -55 , 0 );
setEffScaleKey( spep_1 + 40, hitt2, 0.1, 0.1 );
setEffScaleKey( spep_1 + 42, hitt2, 0.47, 0.47 );
setEffScaleKey( spep_1 + 44, hitt2, 0.84, 0.84 );
setEffRotateKey( spep_1 + 40, hitt2, 60 );
setEffRotateKey( spep_1 + 44, hitt2, 60 );
setEffAlphaKey( spep_1 + 40, hitt2, 255 );
setEffAlphaKey( spep_1 + 44, hitt2, 255 );

hitt3 = entryEffectLife( spep_1 + 46,  908, 4, 0x100, -1, 0, -211.2, 15.4 );
setEffMoveKey( spep_1 + 46, hitt3, -211.2, 15.4 , 0 );
setEffMoveKey( spep_1 + 50, hitt3, -211.2, 15.4 , 0 );
setEffScaleKey( spep_1 + 46, hitt3, 0.1, 0.1 );
setEffScaleKey( spep_1 + 48, hitt3, 0.47, 0.47 );
setEffScaleKey( spep_1 + 50, hitt3, 0.84, 0.84 );
setEffRotateKey( spep_1 + 46, hitt3, 0 );
setEffRotateKey( spep_1 + 50, hitt3, 0 );
setEffAlphaKey( spep_1 + 46, hitt3, 255 );
setEffAlphaKey( spep_1 + 50, hitt3, 255 );

hitt4 = entryEffectLife( spep_1 + 54,  908, 8, 0x100, -1, 0, -246.6, -14.8 );
setEffMoveKey( spep_1 + 54, hitt4, -246.6, -14.8 , 0 );
setEffMoveKey( spep_1 + 62, hitt4, -246.6, -14.8 , 0 );
setEffScaleKey( spep_1 + 54, hitt4, 0.17, 0.17 );
setEffScaleKey( spep_1 + 56, hitt4, 0.79, 0.79 );
setEffScaleKey( spep_1 + 58, hitt4, 1.4, 1.4 );
setEffScaleKey( spep_1 + 60, hitt4, 2.01, 2.01 );
setEffScaleKey( spep_1 + 62, hitt4, 1.79, 1.79 );
setEffRotateKey( spep_1 + 54, hitt4, 0 );
setEffRotateKey( spep_1 + 62, hitt4, 0 );
setEffAlphaKey( spep_1 + 54, hitt4, 255 );
setEffAlphaKey( spep_1 + 60, hitt4, 255 );
setEffAlphaKey( spep_1 + 62, hitt4, 138 );

hitt5 = entryEffectLife( spep_1 + 66,  908, 4, 0x100, -1, 0, -197.1, 74 );
setEffMoveKey( spep_1 + 66, hitt5, -197.1, 74 , 0 );
setEffScaleKey( spep_1 + 66, hitt5, 0.1, 0.1 );
setEffScaleKey( spep_1 + 68, hitt5, 0.47, 0.47 );
setEffScaleKey( spep_1 + 70, hitt5, 0.84, 0.84 );
setEffRotateKey( spep_1 + 66, hitt5, 100 );
setEffRotateKey( spep_1 + 70, hitt5, 100 );
setEffAlphaKey( spep_1 + 66, hitt5, 255 );
setEffAlphaKey( spep_1 + 70, hitt5, 255 );

hitt6 = entryEffectLife( spep_1 + 74,  908, 4, 0x100, -1, 0, -173.9, -80.4 );
setEffMoveKey( spep_1 + 74, hitt6, -173.9, -80.4 , 0 );
setEffScaleKey( spep_1 + 74, hitt6, 0.17, 0.17 );
setEffScaleKey( spep_1 + 76, hitt6, 0.79, 0.79 );
setEffScaleKey( spep_1 + 78, hitt6, 1.4, 1.4 );
setEffRotateKey( spep_1 + 74, hitt6, 60 );
setEffRotateKey( spep_1 + 78, hitt6, 60 );
setEffAlphaKey( spep_1 + 74, hitt6, 255 );
setEffAlphaKey( spep_1 + 78, hitt6, 255 );


hitt7 = entryEffectLife( spep_1 + 86,  2, 10, 0x100, -1, 0, -186.9, 21.9 );
setEffMoveKey( spep_1 + 86, hitt7, -186.9, 21.9 , 0 );
setEffMoveKey( spep_1 + 96, hitt7, -186.9, 21.9 , 0 );
setEffScaleKey( spep_1 + 86, hitt7, 0.66, 0.66 );
setEffScaleKey( spep_1 + 88, hitt7, 0.89, 0.89 );
setEffScaleKey( spep_1 + 90, hitt7, 1.09, 1.09 );
setEffScaleKey( spep_1 + 92, hitt7, 1.25, 1.25 );
setEffScaleKey( spep_1 + 94, hitt7, 1.36, 1.36 );
setEffScaleKey( spep_1 + 96, hitt7, 1.4, 1.4 );
setEffRotateKey( spep_1 + 86, hitt7, 0 );
setEffRotateKey( spep_1 + 96, hitt7, 0 );
setEffAlphaKey( spep_1 + 86, hitt7, 243 );
setEffAlphaKey( spep_1 + 88, hitt7, 212 );
setEffAlphaKey( spep_1 + 90, hitt7, 171 );
setEffAlphaKey( spep_1 + 92, hitt7, 121 );
setEffAlphaKey( spep_1 + 94, hitt7, 64 );
setEffAlphaKey( spep_1 + 96, hitt7, 0 );

hitt8 = entryEffectLife( spep_1 + 104,  2, 10, 0x100, -1, 0, -186.9, 21.9 );
setEffMoveKey( spep_1 + 104, hitt8, -186.9, 21.9 , 0 );
setEffMoveKey( spep_1 + 114, hitt8, -186.9, 21.9 , 0 );
setEffScaleKey( spep_1 + 104, hitt8, 0.66, 0.66 );
setEffScaleKey( spep_1 + 106, hitt8, 0.89, 0.89 );
setEffScaleKey( spep_1 + 108, hitt8, 1.09, 1.09 );
setEffScaleKey( spep_1 + 110, hitt8, 1.25, 1.25 );
setEffScaleKey( spep_1 + 112, hitt8, 1.36, 1.36 );
setEffScaleKey( spep_1 + 114, hitt8, 1.4, 1.4 );
setEffRotateKey( spep_1 + 104, hitt8, 0 );
setEffRotateKey( spep_1 + 114, hitt8, 0 );
setEffAlphaKey( spep_1 + 104, hitt8, 243 );
setEffAlphaKey( spep_1 + 106, hitt8, 212 );
setEffAlphaKey( spep_1 + 108, hitt8, 171 );
setEffAlphaKey( spep_1 + 110, hitt8, 121 );
setEffAlphaKey( spep_1 + 112, hitt8, 64 );
setEffAlphaKey( spep_1 + 114, hitt8, 0 );

hitt9 = entryEffectLife( spep_1 + 140,  2, 10, 0x100, -1, 0, -70, -11.9 );
setEffMoveKey( spep_1 + 140, hitt9, -70, -11.9 , 0 );
setEffMoveKey( spep_1 + 150, hitt9, -70, -11.9 , 0 );
setEffScaleKey( spep_1 + 140, hitt9, 0.66, 0.66 );
setEffScaleKey( spep_1 + 142, hitt9, 0.89, 0.89 );
setEffScaleKey( spep_1 + 144, hitt9, 1.09, 1.09 );
setEffScaleKey( spep_1 + 146, hitt9, 1.25, 1.25 );
setEffScaleKey( spep_1 + 148, hitt9, 1.36, 1.36 );
setEffScaleKey( spep_1 + 150, hitt9, 1.4, 1.4 );
setEffRotateKey( spep_1 + 140, hitt9, 0 );
setEffRotateKey( spep_1 + 150, hitt9, 0 );
setEffAlphaKey( spep_1 + 140, hitt9, 243 );
setEffAlphaKey( spep_1 + 142, hitt9, 212 );
setEffAlphaKey( spep_1 + 144, hitt9, 171 );
setEffAlphaKey( spep_1 + 146, hitt9, 121 );
setEffAlphaKey( spep_1 + 148, hitt9, 64 );
setEffAlphaKey( spep_1 + 150, hitt9, 0 );

hitt13 = entryEffectLife( spep_1 + 180,  3, 10, 0x100, -1, 0, 548, 796.1, -100);
setEffMoveKey( spep_1 + 180, hitt13, 548, 796.1 , 0 );
setEffScaleKey( spep_1 + 180, hitt13, 1.32, 1.32 );
setEffScaleKey( spep_1 + 182, hitt13, 1.78, 1.78 );
setEffScaleKey( spep_1 + 184, hitt13, 2.18, 2.18 );
setEffScaleKey( spep_1 + 186, hitt13, 2.5, 2.5 );
setEffScaleKey( spep_1 + 188, hitt13, 2.72, 2.72 );
setEffScaleKey( spep_1 + 190, hitt13, 2.8, 2.8 );
setEffRotateKey( spep_1 + 180, hitt13, 0 );
setEffRotateKey( spep_1 + 190, hitt13, 0 );
setEffAlphaKey( spep_1 + 180, hitt13, 243 );
setEffAlphaKey( spep_1 + 182, hitt13, 212 );
setEffAlphaKey( spep_1 + 184, hitt13, 171 );
setEffAlphaKey( spep_1 + 186, hitt13, 121 );
setEffAlphaKey( spep_1 + 188, hitt13, 64 );
setEffAlphaKey( spep_1 + 190, hitt13, 0 );

hitt10 = entryEffectLife( spep_1 + 180,  4, 10, 0x100, -1, 0, 59.9, 247.9 );
setEffMoveKey( spep_1 + 180, hitt10, 59.9, 247.9 , 0 );
setEffMoveKey( spep_1 + 182, hitt10, 59.9, 247.9 , 0 );
setEffMoveKey( spep_1 + 184, hitt10, -6.1, 154 , 0 );
setEffMoveKey( spep_1 + 186, hitt10, -66.1, 114 , 0 );
setEffMoveKey( spep_1 + 188, hitt10, 33.9, 174 , 0 );
setEffMoveKey( spep_1 + 190, hitt10, -26.1, 134 , 0 );
setEffScaleKey( spep_1 + 180, hitt10, 1.22, 1.22 );
setEffScaleKey( spep_1 + 182, hitt10, 1.44, 1.44 );
setEffScaleKey( spep_1 + 184, hitt10, 2.43, 2.43 );
setEffScaleKey( spep_1 + 186, hitt10, 2.58, 2.58 );
setEffScaleKey( spep_1 + 188, hitt10, 2.67, 2.67 );
setEffScaleKey( spep_1 + 190, hitt10, 2.7, 2.7 );
setEffRotateKey( spep_1 + 180, hitt10, 0 );
setEffRotateKey( spep_1 + 190, hitt10, 0 );
setEffAlphaKey( spep_1 + 180, hitt10, 243 );
setEffAlphaKey( spep_1 + 182, hitt10, 212 );
setEffAlphaKey( spep_1 + 184, hitt10, 171 );
setEffAlphaKey( spep_1 + 186, hitt10, 121 );
setEffAlphaKey( spep_1 + 188, hitt10, 64 );
setEffAlphaKey( spep_1 + 190, hitt10, 0 );

--[[
hitt10 = entryEffectLife( spep_1 + 180,  2, 10, 0x100, 1, 0, 548, 796.1 );
setEffMoveKey( spep_1 + 180, hitt10, 548, 796.1 , 0 );
setEffMoveKey( spep_1 + 190, hitt10, 548, 796.1 , 0 );
setEffScaleKey( spep_1 + 180, hitt10, 1.32, 1.32 );
setEffScaleKey( spep_1 + 182, hitt10, 1.78, 1.78 );
setEffScaleKey( spep_1 + 184, hitt10, 2.18, 2.18 );
setEffScaleKey( spep_1 + 186, hitt10, 2.5, 2.5 );
setEffScaleKey( spep_1 + 188, hitt10, 2.72, 2.72 );
setEffScaleKey( spep_1 + 190, hitt10, 2.8, 2.8 );
setEffRotateKey( spep_1 + 180, hitt10, 0 );
setEffRotateKey( spep_1 + 190, hitt10, 0 );
setEffAlphaKey( spep_1 + 180, hitt10, 243 );
setEffAlphaKey( spep_1 + 182, hitt10, 212 );
setEffAlphaKey( spep_1 + 184, hitt10, 171 );
setEffAlphaKey( spep_1 + 186, hitt10, 121 );
setEffAlphaKey( spep_1 + 188, hitt10, 64 );
setEffAlphaKey( spep_1 + 190, hitt10, 0 );
]]

hitt11 = entryEffectLife( spep_1 + 220,  2, 10, 0x100, -1, 0, -171.3, -120.1 );
setEffMoveKey( spep_1 + 220, hitt11, -171.3, -120.1 , 0 );
setEffScaleKey( spep_1 + 220, hitt11, 1.32, 1.32 );
setEffScaleKey( spep_1 + 222, hitt11, 1.78, 1.78 );
setEffScaleKey( spep_1 + 224, hitt11, 2.18, 2.18 );
setEffScaleKey( spep_1 + 226, hitt11, 2.5, 2.5 );
setEffScaleKey( spep_1 + 228, hitt11, 2.72, 2.72 );
setEffScaleKey( spep_1 + 230, hitt11, 2.8, 2.8 );
setEffRotateKey( spep_1 + 220, hitt11, 0 );
setEffRotateKey( spep_1 + 230, hitt11, 0 );
setEffAlphaKey( spep_1 + 220, hitt11, 243 );
setEffAlphaKey( spep_1 + 222, hitt11, 212 );
setEffAlphaKey( spep_1 + 224, hitt11, 171 );
setEffAlphaKey( spep_1 + 226, hitt11, 121 );
setEffAlphaKey( spep_1 + 228, hitt11, 64 );
setEffAlphaKey( spep_1 + 230, hitt11, 0 );

hitt12 = entryEffectLife( spep_1 + 286,  4, 14, 0x100, -1, 0, 0, 94.3 );
setEffMoveKey( spep_1 + 286, hitt12, 0, 94.3 , 0 );
setEffMoveKey( spep_1 + 288, hitt12, 1.9, 96.1 , 0 );
setEffMoveKey( spep_1 + 290, hitt12, 2.9, 97.1 , 0 );
setEffMoveKey( spep_1 + 292, hitt12, 2.9, 97.3 , 0 );
setEffMoveKey( spep_1 + 294, hitt12, 3.3, 97.7 , 0 );
setEffMoveKey( spep_1 + 296, hitt12, 3.7, 98.1 , 0 );
setEffMoveKey( spep_1 + 298, hitt12, 4.3, 98.7 , 0 );
setEffMoveKey( spep_1 + 300, hitt12, 4.9, 99.3 , 0 );
setEffMoveKey( spep_1 + 302, hitt12, 5.5, 99.9 , 0 );
setEffMoveKey( spep_1 + 304, hitt12, 6.1, 100.7 , 0 );
setEffScaleKey( spep_1 + 286, hitt12, 2, 1.31 );
setEffScaleKey( spep_1 + 288, hitt12, 2, 1.33 );
setEffScaleKey( spep_1 + 290, hitt12, 2, 1.38 );
setEffScaleKey( spep_1 + 292, hitt12, 2, 1.48 );
setEffScaleKey( spep_1 + 294, hitt12, 2, 1.62 );
setEffScaleKey( spep_1 + 296, hitt12, 2, 1.78 );
setEffScaleKey( spep_1 + 298, hitt12, 2, 1.99 );
setEffScaleKey( spep_1 + 300, hitt12, 2, 2.24 );
setEffRotateKey( spep_1 + 286, hitt12, 0 );
setEffRotateKey( spep_1 + 286, hitt12, 0 );
setEffAlphaKey( spep_1 + 286, hitt12, 255 );
setEffAlphaKey( spep_1 + 290, hitt12, 255 );
setEffAlphaKey( spep_1 + 292, hitt12, 244 );
setEffAlphaKey( spep_1 + 294, hitt12, 218 );
setEffAlphaKey( spep_1 + 296, hitt12, 183 );
setEffAlphaKey( spep_1 + 298, hitt12, 144 );
setEffAlphaKey( spep_1 + 300, hitt12, 99 );
setEffAlphaKey( spep_1 + 302, hitt12, 52 );
setEffAlphaKey( spep_1 + 304, hitt12, 0 );


-- ** 流線 ** --
ryusen = entryEffectLife( spep_1 + 80,  914, 44, 0x80, -1, 0, 0, 0 );
setEffMoveKey( spep_1 + 80, ryusen, 0, 0 , 0 );
setEffMoveKey( spep_1 + 124, ryusen, 0, 0, 0 );
setEffScaleKey( spep_1 + 80, ryusen, 2.16, 1 );
setEffScaleKey( spep_1 + 124, ryusen, 2.16, 1 );
setEffRotateKey( spep_1 + 80, ryusen, 0 );
setEffRotateKey( spep_1 + 124, ryusen, 0 );
setEffAlphaKey( spep_1 + 80, ryusen, 165 );
setEffAlphaKey( spep_1 + 82, ryusen, 166 );
setEffAlphaKey( spep_1 + 90, ryusen, 166 );
setEffAlphaKey( spep_1 + 92, ryusen, 165 );
setEffAlphaKey( spep_1 + 94, ryusen, 166 );
setEffAlphaKey( spep_1 + 102, ryusen, 166 );
setEffAlphaKey( spep_1 + 104, ryusen, 165 );
setEffAlphaKey( spep_1 + 106, ryusen, 166 );
setEffAlphaKey( spep_1 + 114, ryusen, 166 );
setEffAlphaKey( spep_1 + 116, ryusen, 165 );
setEffAlphaKey( spep_1 + 118, ryusen, 166 );
setEffAlphaKey( spep_1 + 124, ryusen, 166 );

ryusen2 = entryEffectLife( spep_1 + 136,  914, 26, 0x80, -1, 0, 0, 0 );
setEffMoveKey( spep_1 + 136, ryusen2, 0, 0 , 0 );
setEffMoveKey( spep_1 + 162, ryusen2, 0, 0 , 0 );
setEffScaleKey( spep_1 + 136, ryusen2, 3.49, 1 );
setEffScaleKey( spep_1 + 162, ryusen2, 3.49, 1 );
setEffRotateKey( spep_1 + 136, ryusen2, -46 );
setEffRotateKey( spep_1 + 162, ryusen2, -46 );
setEffAlphaKey( spep_1 + 136, ryusen2, 165 );
setEffAlphaKey( spep_1 + 138, ryusen2, 166 );
setEffAlphaKey( spep_1 + 146, ryusen2, 166 );
setEffAlphaKey( spep_1 + 148, ryusen2, 165 );
setEffAlphaKey( spep_1 + 150, ryusen2, 166 );
setEffAlphaKey( spep_1 + 158, ryusen2, 166 );
setEffAlphaKey( spep_1 + 160, ryusen2, 165 );
setEffAlphaKey( spep_1 + 162, ryusen2, 166 );

ryusen4 = entryEffectLife( spep_1 + 184,  924, 18, 0x80, -1, 0, 0, 0 );
setEffMoveKey( spep_1 + 184, ryusen4, 0, 0, 0 );
setEffMoveKey( spep_1 + 202, ryusen4, 0, 0, 0 );
setEffScaleKey( spep_1 + 184, ryusen4, 2, 2 );
setEffScaleKey( spep_1 + 202, ryusen4, 2, 2 );
setEffRotateKey( spep_1 + 184, ryusen4, -60 );
setEffRotateKey( spep_1 + 1202, ryusen4, -60 );
setEffAlphaKey( spep_1 + 184, ryusen4, 178 );
setEffAlphaKey( spep_1 + 186, ryusen4, 195 );
setEffAlphaKey( spep_1 + 202, ryusen4, 195 );

ryusen5 = entryEffectLife( spep_1 + 203,  924, 40, 0x80, -1, 0, 0, 0 );
setEffMoveKey( spep_1 + 203, ryusen5, 0, 0 , 0 );
setEffMoveKey( spep_1 + 243, ryusen5, 0, 0 , 0 );
setEffScaleKey( spep_1 + 200, ryusen5, 2, 2 );
setEffScaleKey( spep_1 + 243, ryusen5, 2, 2 );
setEffRotateKey( spep_1 + 200, ryusen5, 120 );
setEffRotateKey( spep_1 + 243, ryusen5, 120 );
setEffAlphaKey( spep_1 + 200, ryusen5, 204 );
setEffAlphaKey( spep_1 + 202, ryusen5, 149 );
setEffAlphaKey( spep_1 + 204, ryusen5, 149 );
setEffAlphaKey( spep_1 + 206, ryusen5, 51 );
setEffAlphaKey( spep_1 + 243, ryusen5, 51 );

ryusen3 = entryEffectLife( spep_1 + 244,  914, 70, 0x80, -1, 0, 0, 0 );
setEffMoveKey( spep_1 + 244, ryusen3, 0, 0 , 0 );
setEffMoveKey( spep_1 + 314, ryusen3, 0, 0 , 0 );
setEffScaleKey( spep_1 + 244, ryusen3, 3.33, 1 );
setEffScaleKey( spep_1 + 314, ryusen3, 3.33, 1 );
setEffRotateKey( spep_1 + 244, ryusen3, 90 );
setEffRotateKey( spep_1 + 314, ryusen3, 90 );
setEffAlphaKey( spep_1 + 244, ryusen3, 166 );
setEffAlphaKey( spep_1 + 308, ryusen3, 166 );

entryFade( spep_1 + 160,  4,  2,  6,  fcolor_r,  fcolor_g,  fcolor_b,  255);  --whitefade

-- ** 背景 ** --
--entryFadeBg( spep_1,  0, 80,  0,  0,  0,  0,  200);  --薄い黒
entryFadeBg( spep_1 + 80,  0, 308,  0,  0,  0,  0,  255);  --黒

------------------------------------------------------
-- 気溜め失敗
------------------------------------------------------
spep_2 = spep_1 + 388;



aura = entryEffectLife( spep_2 + 196,  9006, 164 + 40 + 20, 0x80, -1, 0, -8.3, -200 );
setEffMoveKey( spep_2 + 196 + 40 + 20, aura, -8.3, -200 , 0 );
setEffMoveKey( spep_2 + 360+ 40 + 20, aura, -8.3, -200 , 0 );
setEffScaleKey( spep_2 + 196 + 40 + 20, aura, 1.79, 2.03 );
setEffScaleKey( spep_2 + 360+ 40 + 20, aura, 1.94, 2.4 );
setEffRotateKey( spep_2 + 196 + 40 + 20, aura, 0 );
setEffRotateKey( spep_2 + 360+ 40 + 20, aura, 0 );
setEffAlphaKey( spep_2 + 196 + 40 + 20, aura, 200 );
setEffAlphaKey( spep_2 + 359+ 40 + 20, aura, 200 );
setEffAlphaKey( spep_2 + 360+ 40 + 20, aura, 0 );

aurabg = entryEffectLife( spep_2 + 0,  9018, 388+ 40 + 20, 0x100, -1, 0, 0, 0 );  --気溜め失敗
setEffMoveKey( spep_2 + 0,  aurabg,  0,  0,  0);
setEffMoveKey( spep_2 + 388+ 40 + 20,  aurabg,  0,  0,  0);
setEffScaleKey( spep_2 + 0,  aurabg,  1.0,  1.0);
setEffScaleKey( spep_2 + 388+ 40 + 20,  aurabg,  1.0,  1.0);
setEffRotateKey(  spep_2 + 0,  aurabg,  0);
setEffRotateKey(  spep_2 + 388+ 40 + 20,  aurabg,  0);
setEffAlphaKey(  spep_2 + 0,  aurabg,  255);
setEffAlphaKey(  spep_2 + 388+ 40 + 20,  aurabg,  255);

-- ** ビリビリ ** --
sunder = entryEffectLife( spep_2 + 0,  9015, 84, 0x100, -1, 0, -216.6, 12.7 );
setEffMoveKey( spep_2 + 0, sunder,  -216.6, 12.7 , 0 );
setEffScaleKey( spep_2 + 0, sunder, 1.4, 1.4 );
setEffRotateKey( spep_2 + 0, sunder, 95 );
setEffRotateKey( spep_2 + 84, sunder, 95 );
setEffAlphaKey( spep_2 + 0, sunder, 255 );

sunder2 = entryEffectLife( spep_2 + 0,  9015, 90, 0x100, -1, 0, -37.6, -274.3 );
setEffMoveKey( spep_2 + 0, sunder2, -37.6, -274.3 , 0 );
setEffScaleKey( spep_2 + 0, sunder2, 0.58, 1.61 );
setEffRotateKey( spep_2 + 0, sunder2, 8.4 );
setEffRotateKey( spep_2 + 90, sunder2, 8.4 );
setEffAlphaKey( spep_2 + 0, sunder2, 255 );

sunder3 = entryEffectLife( spep_2 + 4,  9015, 86, 0x100, -1, 0, 205.4, 8.3 );
setEffMoveKey( spep_2 + 4, sunder3, 205.4, 8.3 , 0 );
setEffScaleKey( spep_2 + 4, sunder3, 1.4, 1.4 );
setEffRotateKey( spep_2 + 4, sunder3, -90 );
setEffRotateKey( spep_2 + 90, sunder3, -90 );
setEffAlphaKey( spep_2 + 4, sunder3, 255 );

sunder4 = entryEffectLife( spep_2 + 4,  9015, 86, 0x100, -1, 0, -21.6, 255.5 );
setEffMoveKey( spep_2 + 4, sunder4, -21.6, 255.5 , 0 );
setEffScaleKey( spep_2 + 4, sunder4, 0.61, 1.46 );
setEffRotateKey( spep_2 + 4, sunder4, 174.8 );
setEffRotateKey( spep_2 + 90, sunder4, 174.8 );
setEffAlphaKey( spep_2 + 4, sunder4, 255 );

sunder6 = entryEffectLife( spep_2 + 6,  9015, 84, 0x100, -1, 0, -8.7, 260.7 );
setEffMoveKey( spep_2 + 6, sunder6, -8.7, 260.7 , 0 );
setEffScaleKey( spep_2 + 6, sunder6, 0.58, 1.61 );
setEffRotateKey( spep_2 + 6, sunder6, 0 );
setEffRotateKey( spep_2 + 90, sunder6, 0 );
setEffAlphaKey( spep_2 + 6, sunder6, 255 );

sunder8 = entryEffectLife( spep_2 + 10,  9015, 80, 0x100, -1, 0, -147.7, 244.3 );
setEffMoveKey( spep_2 + 10, sunder8, -147.7, 244.3 , 0 );
setEffScaleKey( spep_2 + 10, sunder8, 0.61, 1.46 );
setEffRotateKey( spep_2 + 10, sunder8, -45.8 );
setEffRotateKey( spep_2 + 90, sunder8, -45.8 );
setEffAlphaKey( spep_2 + 10, sunder8, 255 );

sunder12 = entryEffectLife( spep_2 + 12,  9015, 78, 0x100, -1, 0, 98.3, 202.8 );
setEffMoveKey( spep_2 + 12, sunder12, 98.3, 202.8 , 0 );
setEffScaleKey( spep_2 + 12, sunder12, 0.76, 1.6 );
setEffRotateKey( spep_2 + 12, sunder12, -142.3 );
setEffRotateKey( spep_2 + 90, sunder12, -142.3 );
setEffAlphaKey( spep_2 + 12, sunder12, 255 );

sunder16 = entryEffectLife( spep_2 + 16,  9015, 74, 0x100, -1, 0, 88, -231.2 );
setEffMoveKey( spep_2 + 16, sunder16, 88, -231.2 , 0 );
setEffScaleKey( spep_2 + 16, sunder16, 0.61, 1.54 );
setEffRotateKey( spep_2 + 16, sunder16, 140 );
setEffRotateKey( spep_2 + 90, sunder16, 140 );
setEffAlphaKey( spep_2 + 16, sunder16, 255 );

sunder18 = entryEffectLife( spep_2 + 18,  9015, 72, 0x100, -1, 0, 65.8, 215.8 );
setEffMoveKey( spep_2 + 18, sunder18, 65.8, 215.8 , 0 );
setEffScaleKey( spep_2 + 18, sunder18, 0.76, 1.6 );
setEffRotateKey( spep_2 + 18, sunder18, -142.3 );
setEffRotateKey( spep_2 + 90, sunder18, -142.3 );
setEffAlphaKey( spep_2 + 18, sunder18, 255 );

-- ** オーラ波 ** --
aurawave = entryEffectLife( spep_2+ 0,  9008, 24, 0x100, -1, 0, -5.7, -94.4 - 50 );
setEffMoveKey( spep_2+ 0, aurawave, -5.7, -94.4 - 50 , 0 );
setEffMoveKey( spep_2+ 24, aurawave, -5.7, -94.4 - 50 , 0 );
setEffScaleKey( spep_2+ 0, aurawave, 1.1, 0.52 );
setEffScaleKey( spep_2+ 16, aurawave, 1.5, 1.3 );
setEffScaleKey( spep_2+ 24, aurawave, 1.5, 1.6 );
setEffRotateKey( spep_2+ 0, aurawave, 0 );
setEffRotateKey( spep_2+ 24, aurawave, 0 );
setEffAlphaKey( spep_2+ 0, aurawave, 255 );
setEffAlphaKey( spep_2+ 2, aurawave, 237 );
setEffAlphaKey( spep_2+ 4, aurawave, 219 );
setEffAlphaKey( spep_2+ 6, aurawave, 200 );
setEffAlphaKey( spep_2+ 8, aurawave, 182 );
setEffAlphaKey( spep_2+ 10, aurawave, 164 );
setEffAlphaKey( spep_2+ 12, aurawave, 146 );
setEffAlphaKey( spep_2+ 14, aurawave, 128 );
setEffAlphaKey( spep_2+ 16, aurawave, 114 );
setEffAlphaKey( spep_2+ 18, aurawave, 99 );
setEffAlphaKey( spep_2+ 20, aurawave, 84 );
setEffAlphaKey( spep_2+ 22, aurawave, 68 );
setEffAlphaKey( spep_2+ 24, aurawave, 51 );

aurawave2 = entryEffectLife( spep_2+ 14,  9008, 24, 0x100, -1, 0, -5.6, -100.3 - 50 );
setEffMoveKey( spep_2+ 14, aurawave2, -5.6, -100.3 - 50 , 0 );
setEffMoveKey( spep_2+ 38, aurawave2, -5.6, -100.3 - 50 , 0 );
setEffScaleKey( spep_2+ 14, aurawave2, 1.1, 0.52 );
setEffScaleKey( spep_2+ 30, aurawave2, 1.5, 1.3 );
setEffScaleKey( spep_2+ 38, aurawave2, 1.5, 1.6 );
setEffRotateKey( spep_2+ 14, aurawave2, 0 );
setEffRotateKey( spep_2+ 38, aurawave2, 0 );
setEffAlphaKey( spep_2+ 14, aurawave2, 255 );
setEffAlphaKey( spep_2+ 16, aurawave2, 237 );
setEffAlphaKey( spep_2+ 18, aurawave2, 219 );
setEffAlphaKey( spep_2+ 20, aurawave2, 200 );
setEffAlphaKey( spep_2+ 22, aurawave2, 182 );
setEffAlphaKey( spep_2+ 24, aurawave2, 164 );
setEffAlphaKey( spep_2+ 26, aurawave2, 146 );
setEffAlphaKey( spep_2+ 28, aurawave2, 128 );
setEffAlphaKey( spep_2+ 30, aurawave2, 114 );
setEffAlphaKey( spep_2+ 32, aurawave2, 99 );
setEffAlphaKey( spep_2+ 34, aurawave2, 84 );
setEffAlphaKey( spep_2+ 36, aurawave2, 68 );
setEffAlphaKey( spep_2+ 38, aurawave2, 51 );

aurawave3 = entryEffectLife( spep_2+ 40,  9008, 24, 0x100, -1, 0, -5.7, -94.4 - 50 );
setEffMoveKey( spep_2+ 40, aurawave3, -5.7, -94.4 - 50 , 0 );
setEffMoveKey( spep_2+ 64, aurawave3, -5.7, -94.4 - 50 , 0 );
setEffScaleKey( spep_2+ 40, aurawave3, 1.1, 0.52 );
setEffScaleKey( spep_2+ 56, aurawave3, 1.5, 1.3 );
setEffScaleKey( spep_2+ 64, aurawave3, 1.5, 1.86 );
setEffRotateKey( spep_2+ 40, aurawave3, 0 );
setEffRotateKey( spep_2+ 64, aurawave3, 0 );
setEffAlphaKey( spep_2+ 40, aurawave3, 255 );
setEffAlphaKey( spep_2+ 42, aurawave3, 237 );
setEffAlphaKey( spep_2+ 44, aurawave3, 219 );
setEffAlphaKey( spep_2+ 46, aurawave3, 200 );
setEffAlphaKey( spep_2+ 48, aurawave3, 182 );
setEffAlphaKey( spep_2+ 50, aurawave3, 164 );
setEffAlphaKey( spep_2+ 52, aurawave3, 146 );
setEffAlphaKey( spep_2+ 54, aurawave3, 128 );
setEffAlphaKey( spep_2+ 56, aurawave3, 114 );
setEffAlphaKey( spep_2+ 58, aurawave3, 99 );
setEffAlphaKey( spep_2+ 60, aurawave3, 84 );
setEffAlphaKey( spep_2+ 62, aurawave3, 68 );
setEffAlphaKey( spep_2+ 64, aurawave3, 51 );

aurawave4 = entryEffectLife( spep_2+ 54,  9008, 24, 0x100, -1, 0, -5.6, -100.3 - 50 );
setEffMoveKey( spep_2+ 54, aurawave4, -5.6, -100.3 - 50 , 0 );
setEffMoveKey( spep_2+ 78, aurawave4, -5.6, -100.3 - 50 , 0 );
setEffScaleKey( spep_2+ 54, aurawave4, 1.1, 0.52 );
setEffScaleKey( spep_2+ 70, aurawave4, 1.5, 1.3 );
setEffScaleKey( spep_2+ 78, aurawave4, 1.5, 1.6 );
setEffRotateKey( spep_2+ 54, aurawave4, 0 );
setEffRotateKey( spep_2+ 78, aurawave4, 0 );
setEffAlphaKey( spep_2+ 54, aurawave4, 255 );
setEffAlphaKey( spep_2+ 56, aurawave4, 237 );
setEffAlphaKey( spep_2+ 58, aurawave4, 219 );
setEffAlphaKey( spep_2+ 60, aurawave4, 200 );
setEffAlphaKey( spep_2+ 62, aurawave4, 182 );
setEffAlphaKey( spep_2+ 64, aurawave4, 164 );
setEffAlphaKey( spep_2+ 66, aurawave4, 146 );
setEffAlphaKey( spep_2+ 68, aurawave4, 128 );
setEffAlphaKey( spep_2+ 70, aurawave4, 114 );
setEffAlphaKey( spep_2+ 72, aurawave4, 99 );
setEffAlphaKey( spep_2+ 74, aurawave4, 84 );
setEffAlphaKey( spep_2+ 76, aurawave4, 68 );
setEffAlphaKey( spep_2+ 78, aurawave4, 51 );

aurawave5 = entryEffectLife( spep_2+ 80,  9008, 24, 0x100, -1, 0, -5.7, -94.4 - 50 );
setEffMoveKey( spep_2+ 80, aurawave5, -5.7, -94.4 - 50 , 0 );
setEffMoveKey( spep_2+ 104, aurawave5, -5.7, -94.4 - 50 , 0 );
setEffScaleKey( spep_2+ 80, aurawave5, 1.1, 0.52 );
setEffScaleKey( spep_2+ 96, aurawave5, 1.5, 1.3 );
setEffScaleKey( spep_2+ 104, aurawave5, 1.5, 1.6 );
setEffRotateKey( spep_2+ 80, aurawave5, 0 );
setEffRotateKey( spep_2+ 104, aurawave5, 0 );
setEffAlphaKey( spep_2+ 80, aurawave5, 255 );
setEffAlphaKey( spep_2+ 82, aurawave5, 237 );
setEffAlphaKey( spep_2+ 84, aurawave5, 219 );
setEffAlphaKey( spep_2+ 86, aurawave5, 200 );
setEffAlphaKey( spep_2+ 88, aurawave5, 182 );
setEffAlphaKey( spep_2+ 90, aurawave5, 164 );
setEffAlphaKey( spep_2+ 92, aurawave5, 146 );
setEffAlphaKey( spep_2+ 94, aurawave5, 128 );
setEffAlphaKey( spep_2+ 96, aurawave5, 114 );
setEffAlphaKey( spep_2+ 98, aurawave5, 99 );
setEffAlphaKey( spep_2+ 100, aurawave5, 84 );
setEffAlphaKey( spep_2+ 102, aurawave5, 68 );
setEffAlphaKey( spep_2+ 104, aurawave5, 51 );

aurawave6 = entryEffectLife( spep_2+ 94,  9008, 24, 0x100, -1, 0, -5.6, -100.3 - 50 );
setEffMoveKey( spep_2+ 94, aurawave6, -5.6, -100.3 - 50 , 0 );
setEffMoveKey( spep_2+ 118, aurawave6, -5.6, -100.3 - 50 , 0 );
setEffScaleKey( spep_2+ 94, aurawave6, 1.1, 0.52 );
setEffScaleKey( spep_2+ 110, aurawave6, 1.5, 1.3 );
setEffScaleKey( spep_2+ 118, aurawave6, 1.5, 1.6 );
setEffRotateKey( spep_2+ 94, aurawave6, 0 );
setEffRotateKey( spep_2+ 118, aurawave6, 0 );
setEffAlphaKey( spep_2+ 94, aurawave6, 255 );
setEffAlphaKey( spep_2+ 96, aurawave6, 237 );
setEffAlphaKey( spep_2+ 98, aurawave6, 219 );
setEffAlphaKey( spep_2+ 100, aurawave6, 200 );
setEffAlphaKey( spep_2+ 102, aurawave6, 182 );
setEffAlphaKey( spep_2+ 104, aurawave6, 164 );
setEffAlphaKey( spep_2+ 106, aurawave6, 146 );
setEffAlphaKey( spep_2+ 108, aurawave6, 128 );
setEffAlphaKey( spep_2+ 110, aurawave6, 114 );
setEffAlphaKey( spep_2+ 112, aurawave6, 99 );
setEffAlphaKey( spep_2+ 114, aurawave6, 84 );
setEffAlphaKey( spep_2+ 116, aurawave6, 68 );
setEffAlphaKey( spep_2+ 118, aurawave6, 51 );

aurawave7 = entryEffectLife( spep_2+ 120,  9008, 24, 0x100, -1, 0, -5.7, -94.4 - 50 );
setEffMoveKey( spep_2+ 120, aurawave7, -5.8, -96.2 - 50 , 0 );
setEffMoveKey( spep_2+ 122, aurawave7, -5.9, -80 - 50 , 0 );
setEffMoveKey( spep_2+ 124, aurawave7, -6, -75 - 50 , 0 );
setEffMoveKey( spep_2+ 126, aurawave7, -6.1, -60 - 50 , 0 );
setEffMoveKey( spep_2+ 128, aurawave7, -6.2, -50 - 50 , 0 );
setEffMoveKey( spep_2+ 130, aurawave7, -6.3, -40 - 50 , 0 );
setEffMoveKey( spep_2+ 132, aurawave7, -6.4, -30 - 50 , 0 );
setEffMoveKey( spep_2+ 134, aurawave7, -6.5, -20 - 50 , 0 );
setEffMoveKey( spep_2+ 136, aurawave7, -6.6, -10 - 50 , 0 );
setEffMoveKey( spep_2+ 138, aurawave7, -6.7, 0 - 50 , 0 );
setEffMoveKey( spep_2+ 140, aurawave7, -6.8, 10 - 50 , 0 );
setEffMoveKey( spep_2+ 142, aurawave7, -7, 20 - 50 , 0 );
setEffMoveKey( spep_2+ 144, aurawave7, -7.4, 30 - 50 , 0 );
setEffScaleKey( spep_2+ 120, aurawave7, 1.3, 0.8 );
setEffScaleKey( spep_2+ 132, aurawave7, 1.9, 1.5 );
setEffScaleKey( spep_2+ 144, aurawave7, 2.3, 2.3 );
setEffRotateKey( spep_2+ 120, aurawave7, 0 );
setEffRotateKey( spep_2+ 144, aurawave7, 0 );
setEffAlphaKey( spep_2+ 120, aurawave7, 255 );
setEffAlphaKey( spep_2+ 122, aurawave7, 237 );
setEffAlphaKey( spep_2+ 124, aurawave7, 219 );
setEffAlphaKey( spep_2+ 126, aurawave7, 200 );
setEffAlphaKey( spep_2+ 128, aurawave7, 182 );
setEffAlphaKey( spep_2+ 130, aurawave7, 164 );
setEffAlphaKey( spep_2+ 132, aurawave7, 146 );
setEffAlphaKey( spep_2+ 134, aurawave7, 128 );
setEffAlphaKey( spep_2+ 136, aurawave7, 114 );
setEffAlphaKey( spep_2+ 138, aurawave7, 99 );
setEffAlphaKey( spep_2+ 140, aurawave7, 84 );
setEffAlphaKey( spep_2+ 142, aurawave7, 68 );
setEffAlphaKey( spep_2+ 144, aurawave7, 51 );

aurawave8 = entryEffectLife( spep_2+ 134,  9008, 24, 0x100, -1, 0,  -6.4, -115.1 - 50 );
setEffMoveKey( spep_2+ 134, aurawave8, -6.4, -115.1 - 50 , 0 );
setEffMoveKey( spep_2+ 158, aurawave8, -6.4, -115.1 - 50 , 0 );
setEffScaleKey( spep_2+ 134, aurawave8, 1.3, 0.8 );
setEffScaleKey( spep_2+ 150, aurawave8, 2.4, 2.1 );
setEffScaleKey( spep_2+ 158, aurawave8, 3.1, 3.1 );
setEffRotateKey( spep_2+ 134, aurawave8, 0 );
setEffRotateKey( spep_2+ 158, aurawave8, 0 );
setEffAlphaKey( spep_2+ 134, aurawave8, 255 );
setEffAlphaKey( spep_2+ 136, aurawave8, 237 );
setEffAlphaKey( spep_2+ 138, aurawave8, 219 );
setEffAlphaKey( spep_2+ 140, aurawave8, 200 );
setEffAlphaKey( spep_2+ 142, aurawave8, 182 );
setEffAlphaKey( spep_2+ 144, aurawave8, 164 );
setEffAlphaKey( spep_2+ 146, aurawave8, 146 );
setEffAlphaKey( spep_2+ 148, aurawave8, 128 );
setEffAlphaKey( spep_2+ 150, aurawave8, 114 );
setEffAlphaKey( spep_2+ 152, aurawave8, 99 );
setEffAlphaKey( spep_2+ 154, aurawave8, 84 );
setEffAlphaKey( spep_2+ 156, aurawave8, 68 );
setEffAlphaKey( spep_2+ 158, aurawave8, 51 );

aurawave9 = entryEffectLife( spep_2+ 160,  9008, 24, 0x100, -1, 0,  -8.5, -141.7 - 50 );
setEffMoveKey( spep_2+ 160, aurawave9, -8.5, -141.7 - 50 , 0 );
setEffMoveKey( spep_2+ 184, aurawave9, -8.5, -141.7 - 50 , 0 );
setEffScaleKey( spep_2+ 160, aurawave9, 1.3, 0.8 );
setEffScaleKey( spep_2+ 176, aurawave9, 2.4, 2.1 );
setEffScaleKey( spep_2+ 184, aurawave9, 3.1, 3.1 );
setEffRotateKey( spep_2+ 160, aurawave9, 0 );
setEffRotateKey( spep_2+ 184, aurawave9, 0 );
setEffAlphaKey( spep_2+ 160, aurawave9, 255 );
setEffAlphaKey( spep_2+ 162, aurawave9, 237 );
setEffAlphaKey( spep_2+ 164, aurawave9, 219 );
setEffAlphaKey( spep_2+ 166, aurawave9, 200 );
setEffAlphaKey( spep_2+ 168, aurawave9, 182 );
setEffAlphaKey( spep_2+ 170, aurawave9, 164 );
setEffAlphaKey( spep_2+ 172, aurawave9, 146 );
setEffAlphaKey( spep_2+ 174, aurawave9, 128 );
setEffAlphaKey( spep_2+ 176, aurawave9, 114 );
setEffAlphaKey( spep_2+ 178, aurawave9, 99 );
setEffAlphaKey( spep_2+ 180, aurawave9, 84 );
setEffAlphaKey( spep_2+ 182, aurawave9, 68 );
setEffAlphaKey( spep_2+ 184, aurawave9, 51 );

aurawave10 = entryEffectLife( spep_2+ 174,  9008, 24, 0x100, -1, 0,  -10.8, -153 - 50 );
setEffMoveKey( spep_2+ 174, aurawave10, -10.8, -153 - 50 , 0 );
setEffMoveKey( spep_2+ 198, aurawave10, -10.8, -153 - 50 , 0 );
setEffScaleKey( spep_2+ 174, aurawave10, 1.3, 0.8 );
setEffScaleKey( spep_2+ 190, aurawave10, 2.4, 2.1 );
setEffScaleKey( spep_2+ 198, aurawave10, 3.1, 3.1 );
setEffRotateKey( spep_2+ 174, aurawave10, 0 );
setEffRotateKey( spep_2+ 194, aurawave10, 0 );
setEffAlphaKey( spep_2+ 174, aurawave10, 255 );
setEffAlphaKey( spep_2+ 176, aurawave10, 237 );
setEffAlphaKey( spep_2+ 178, aurawave10, 219 );
setEffAlphaKey( spep_2+ 180, aurawave10, 200 );
setEffAlphaKey( spep_2+ 182, aurawave10, 182 );
setEffAlphaKey( spep_2+ 184, aurawave10, 164 );
setEffAlphaKey( spep_2+ 186, aurawave10, 146 );
setEffAlphaKey( spep_2+ 188, aurawave10, 128 );
setEffAlphaKey( spep_2+ 190, aurawave10, 114 );
setEffAlphaKey( spep_2+ 192, aurawave10, 99 );
setEffAlphaKey( spep_2+ 194, aurawave10, 84 );

aurawave11 = entryEffectLife( spep_2+ 200,  9008, 24, 0x100, -1, 0, -8.5, -141.7 - 50 );
setEffMoveKey( spep_2+ 200, aurawave11, -8.5, -141.7 - 50 , 0 );
setEffMoveKey( spep_2+ 224, aurawave11, -8.5, -141.7 - 50 , 0 );
setEffScaleKey( spep_2+ 200, aurawave11, 1.3, 0.8 );
setEffScaleKey( spep_2+ 216, aurawave11, 2.4, 2.1 );
setEffScaleKey( spep_2+ 224, aurawave11, 3.1, 3.1 );
setEffRotateKey( spep_2+ 200, aurawave11, 0 );
setEffRotateKey( spep_2+ 224, aurawave11, 0 );
setEffAlphaKey( spep_2+ 200, aurawave11, 255 );
setEffAlphaKey( spep_2+ 202, aurawave11, 237 );
setEffAlphaKey( spep_2+ 204, aurawave11, 219 );
setEffAlphaKey( spep_2+ 206, aurawave11, 200 );
setEffAlphaKey( spep_2+ 208, aurawave11, 182 );
setEffAlphaKey( spep_2+ 210, aurawave11, 164 );
setEffAlphaKey( spep_2+ 212, aurawave11, 146 );
setEffAlphaKey( spep_2+ 214, aurawave11, 128 );
setEffAlphaKey( spep_2+ 216, aurawave11, 114 );
setEffAlphaKey( spep_2+ 218, aurawave11, 99 );
setEffAlphaKey( spep_2+ 220, aurawave11, 84 );
setEffAlphaKey( spep_2+ 222, aurawave11, 68 );
setEffAlphaKey( spep_2+ 224, aurawave11, 51 );

aurawave12 = entryEffectLife( spep_2+ 214,  9008, 24, 0x100, -1, 0, -10.8, -153 - 50 );
setEffMoveKey( spep_2+ 214, aurawave12, -10.8, -153 - 50 , 0 );
setEffMoveKey( spep_2+ 238, aurawave12, -10.8, -153 - 50 , 0 );
setEffScaleKey( spep_2+ 214, aurawave12, 1.3, 0.8 );
setEffScaleKey( spep_2+ 230, aurawave12, 2.4, 2.1 );
setEffScaleKey( spep_2+ 238, aurawave12, 3.1, 3.1 );
setEffRotateKey( spep_2+ 214, aurawave12, 0 );
setEffRotateKey( spep_2+ 238, aurawave12, 0 );
setEffAlphaKey( spep_2+ 214, aurawave12, 255 );
setEffAlphaKey( spep_2+ 216, aurawave12, 237 );
setEffAlphaKey( spep_2+ 218, aurawave12, 219 );
setEffAlphaKey( spep_2+ 220, aurawave12, 200 );
setEffAlphaKey( spep_2+ 222, aurawave12, 182 );
setEffAlphaKey( spep_2+ 224, aurawave12, 164 );
setEffAlphaKey( spep_2+ 226, aurawave12, 146 );
setEffAlphaKey( spep_2+ 228, aurawave12, 128 );
setEffAlphaKey( spep_2+ 230, aurawave12, 114 );
setEffAlphaKey( spep_2+ 232, aurawave12, 99 );
setEffAlphaKey( spep_2+ 234, aurawave12, 128 );
setEffAlphaKey( spep_2+ 236, aurawave12, 114 );
setEffAlphaKey( spep_2+ 238, aurawave12, 68 );


-- ** ラベル ** --
splb = entryEffectLife( spep_2 + 8,  9014, 128, 0, -1, 0, 722, 388,  100 );
setEffMoveKey( spep_2 + 8, splb, 722, 388 , 0 );
setEffMoveKey( spep_2 + 10, splb, 578, 388 , 0 );
setEffMoveKey( spep_2 + 12, splb, 434, 388 , 0 );
setEffMoveKey( spep_2 + 14, splb, 290, 388 , 0 );
setEffMoveKey( spep_2 + 16, splb, 146, 388 , 0 );
setEffMoveKey( spep_2 + 18, splb, 2, 388 , 0 );
setEffMoveKey( spep_2 + 126, splb, 2, 388 , 0 );
setEffMoveKey( spep_2 + 128, splb, -146, 388 , 0 );
setEffMoveKey( spep_2 + 130, splb, -294, 388 , 0 );
setEffMoveKey( spep_2 + 132, splb, -442, 388 , 0 );
setEffMoveKey( spep_2 + 134, splb, -590, 388 , 0 );
setEffMoveKey( spep_2 + 136, splb, -738, 388 , 0 );
setEffScaleKey( spep_2 + 8, splb, 1, 1 );
setEffRotateKey( spep_2 + 8, splb, 0 );
setEffAlphaKey( spep_2 + 8, splb, 255 );

-- ** カットイン ** --
speff = entryEffect( spep_2 + 120 + 40, 1504, 0, -1, 0, 0, 0,  100); -- eff_005 (カットイン)
setEffReplaceTexture( speff, 3, 2); -- カットイン差し替え

ctgogogo = entryEffectLife( spep_2 + 118 + 40,  10008, 60, 0x100, -1, 0, -186, 254,  120 );
setEffMoveKey( spep_2 + 118 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 120 + 40, ctgogogo, -190, 250 , 0 );
setEffMoveKey( spep_2 + 122 + 40, ctgogogo, -182, 258 , 0 );
setEffMoveKey( spep_2 + 124 + 40, ctgogogo, -182, 250 , 0 );
setEffMoveKey( spep_2 + 126 + 40, ctgogogo, -190, 258 , 0 );
setEffMoveKey( spep_2 + 128 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 130 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 132 + 40, ctgogogo, -190, 250 , 0 );
setEffMoveKey( spep_2 + 134 + 40, ctgogogo, -182, 258 , 0 );
setEffMoveKey( spep_2 + 136 + 40, ctgogogo, -182, 250 , 0 );
setEffMoveKey( spep_2 + 138 + 40, ctgogogo, -190, 258 , 0 );
setEffMoveKey( spep_2 + 140 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 142 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 144 + 40, ctgogogo, -190, 250 , 0 );
setEffMoveKey( spep_2 + 146 + 40, ctgogogo, -182, 258 , 0 );
setEffMoveKey( spep_2 + 148 + 40, ctgogogo, -182, 250 , 0 );
setEffMoveKey( spep_2 + 150 + 40, ctgogogo, -190, 258 , 0 );
setEffMoveKey( spep_2 + 152 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 154 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 156 + 40, ctgogogo, -190, 250 , 0 );
setEffMoveKey( spep_2 + 158 + 40, ctgogogo, -182, 258 , 0 );
setEffMoveKey( spep_2 + 160 + 40, ctgogogo, -182, 250 , 0 );
setEffMoveKey( spep_2 + 162 + 40, ctgogogo, -190, 258 , 0 );
setEffMoveKey( spep_2 + 164 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 166 + 40, ctgogogo, -186, 254 , 0 );
setEffMoveKey( spep_2 + 168 + 40, ctgogogo, -190, 250 , 0 );
setEffMoveKey( spep_2 + 170 + 40, ctgogogo, -182, 258 , 0 );
setEffMoveKey( spep_2 + 172 + 40, ctgogogo, -182, 250 , 0 );
setEffMoveKey( spep_2 + 174 + 40, ctgogogo, -190, 258 , 0 );
setEffMoveKey( spep_2 + 176 + 40, ctgogogo, -186, 254 , 0 );
setEffScaleKey( spep_2 + 118 + 40, ctgogogo, 1.5, 1.5 );
setEffScaleKey( spep_2 + 178 + 40, ctgogogo, 1.5, 1.5 );
setEffRotateKey( spep_2 + 118 + 40, ctgogogo, 0 );
setEffRotateKey( spep_2 + 178 + 40, ctgogogo, 0 );
setEffAlphaKey( spep_2 + 118 + 40, ctgogogo, 255 );
setEffAlphaKey( spep_2 + 178 + 40, ctgogogo, 255 );

aurabg3 = entryEffectLife( spep_2 + 190  + 40 + 20,  9016, 6, 0x80, -1, 0, 0, 0 );  -- カットインあけに表示
setEffMoveKey( spep_2 + 190 + 40 + 20,  aurabg3,  0,  0,  0);
setEffMoveKey( spep_2 + 196 + 40 + 20,  aurabg3,  0,  0,  0);
setEffScaleKey( spep_2 + 190 + 40 + 20,  aurabg3,  1.0,  1.0);
setEffScaleKey( spep_2 + 196 + 40 + 20,  aurabg3,  1.0,  1.0);
setEffRotateKey(  spep_2 + 190 + 40 + 20,  aurabg3,  0);
setEffRotateKey(  spep_2 + 196 + 40 + 20,  aurabg3,  0);
setEffAlphaKey(  spep_2 + 190 + 40 + 20,  aurabg3,  255);
setEffAlphaKey(  spep_2 + 196 + 40 + 20,  aurabg3,  255);

-- ** バトルキャラ ** --
setDisp( spep_2 + 0, 0, 1 );
setDisp( spep_2 + 388 + 40, 0, 0 );
changeAnime( spep_2 + 0, 0, 17 );
setMoveKey( spep_2 + 0, 0, 0, 20 , 0 );
setMoveKey( spep_2 + 78 + 40, 0, 0, 20 , 0 );
setMoveKey( spep_2 + 80 + 40, 0, 0, 20.4 , 0 );
setMoveKey( spep_2 + 82 + 40, 0, 0, 20.7 , 0 );
setMoveKey( spep_2 + 84 + 40, 0, 0, 21.1 , 0 );
setMoveKey( spep_2 + 86 + 40, 0, 0, 21.5 , 0 );
setMoveKey( spep_2 + 88 + 40, 0, 0, 21.8 , 0 );
setMoveKey( spep_2 + 90 + 40, 0, 0, 22.2 , 0 );
setMoveKey( spep_2 + 92 + 40, 0, 0, 22.6 , 0 );
setMoveKey( spep_2 + 94 + 40, 0, 0, 22.9 , 0 );
setMoveKey( spep_2 + 96 + 40, 0, 0, 23.3 , 0 );
setMoveKey( spep_2 + 98 + 40, 0, 0, 23.7 , 0 );
setMoveKey( spep_2 + 100 + 40, 0, 0, 24 , 0 );
setMoveKey( spep_2 + 102 + 40, 0, 0, 24.4 , 0 );
setMoveKey( spep_2 + 104 + 40, 0, 0, 26 , 0 );
setMoveKey( spep_2 + 106 + 40, 0, 0, 27.7 , 0 );
setMoveKey( spep_2 + 108 + 40, 0, 0, 29.3 , 0 );
setMoveKey( spep_2 + 110 + 40, 0, 0, 31 , 0 );
setMoveKey( spep_2 + 112 + 40, 0, 4.9, 34.9 , 0 );
setMoveKey( spep_2 + 114 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 116 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 118 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 120 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 122 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 124 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 126 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 128 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 130 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 132 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 134 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 136 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 138 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 140 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 142 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 144 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 146 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 148 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 150 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 152 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 154 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 156 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 158 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 160 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 162 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 164 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 166 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 168 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 170 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 172 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 174 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 176 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 178 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 180 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 182 + 40, 0, 2.5, 32.4 , 0 );
setMoveKey( spep_2 + 184 + 40, 0, -2.4, 27.5 , 0 );
setMoveKey( spep_2 + 186 + 40, 0, -2.4, 32.4 , 0 );
setMoveKey( spep_2 + 188 + 40, 0, 2.5, 27.5 , 0 );
setMoveKey( spep_2 + 190 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 194 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 196 + 40, 0, 0, 35 , 0 );
setMoveKey( spep_2 + 198 + 40, 0, 0, 40 , 0 );
setMoveKey( spep_2 + 200 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 202 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 204 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 206 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 208 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 210 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 212 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 214 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 216 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 218 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 220 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 222 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 224 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 226 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 228 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 230 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 232 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 234 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 236 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 238 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 240 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 242 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 244 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 246 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 248 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 250 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 252 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 254 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 256 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 258 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 260 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 262 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 264 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 266 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 268 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 270 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 272 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 274 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 276 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 278 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 280 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 282 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 284 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 286 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 288 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 290 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 292 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 294 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 296 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 298 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 300 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 302 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 304 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 306 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 308 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 310 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 312 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 314 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 316 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 318 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 320 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 322 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 324 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 326 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 328 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 330 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 332 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 334 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 336 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 338 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 340 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 342 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 344 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 346 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 348 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 350 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 352 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 354 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 356 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 358 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 360 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 362 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 364 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 366 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 368 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 370 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 372 + 20 , 0, -4, 34 , 0 );
setMoveKey( spep_2 + 374 + 20 , 0, 4, 26 , 0 );
setMoveKey( spep_2 + 376 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 378 + 40, 0, 4, 34 , 0 );
setMoveKey( spep_2 + 380 + 40, 0, -4, 26 , 0 );
setMoveKey( spep_2 + 382 + 40, 0, -4, 34 , 0 );
setMoveKey( spep_2 + 384 + 40, 0, 4, 26 , 0 );
setMoveKey( spep_2 + 386 + 40, 0, 0, 30 , 0 );
setMoveKey( spep_2 + 388 + 40, 0, 0, 30 , 0 );
setScaleKey( spep_2 + 0 + 40, 0, 1, 1 );
setScaleKey( spep_2 + 78 + 40, 0, 1, 1 );
setScaleKey( spep_2 + 80 + 40, 0, 1.02, 1.02 );
setScaleKey( spep_2 + 82 + 40, 0, 1.04, 1.04 );
setScaleKey( spep_2 + 84 + 40, 0, 1.06, 1.06 );
setScaleKey( spep_2 + 86 + 40, 0, 1.07, 1.07 );
setScaleKey( spep_2 + 88 + 40, 0, 1.09, 1.09 );
setScaleKey( spep_2 + 90 + 40, 0, 1.11, 1.11 );
setScaleKey( spep_2 + 92 + 40, 0, 1.13, 1.13 );
setScaleKey( spep_2 + 94 + 40, 0, 1.15, 1.15 );
setScaleKey( spep_2 + 96 + 40, 0, 1.17, 1.17 );
setScaleKey( spep_2 + 98 + 40, 0, 1.18, 1.18 );
setScaleKey( spep_2 + 100 + 40, 0, 1.2, 1.2 );
setScaleKey( spep_2 + 102 + 40, 0, 1.22, 1.22 );
setScaleKey( spep_2 + 104 + 40, 0, 1.3, 1.3 );
setScaleKey( spep_2 + 106 + 40, 0, 1.39, 1.39 );
setScaleKey( spep_2 + 108 + 40, 0, 1.47, 1.47 );
setScaleKey( spep_2 + 110 + 40, 0, 1.55, 1.55 );
--setScaleKey( spep_2 + 112, 0, 1.5, 1.5 );
--setScaleKey( spep_2 + 194, 0, 1.5, 1.5 );
--setScaleKey( spep_2 + 196, 0, 1.75, 1.75 );
--setScaleKey( spep_2 + 198, 0, 2, 2 );
setScaleKey( spep_2 + 388 + 40, 0, 1.55, 1.55 );
setRotateKey( spep_2 + 0, 0, 0 );
setRotateKey( spep_2 + 388 + 40, 0, 0 );


-- ** コネクタ ** --
view7 = entryCharaView(spep_2 + 0, GOKU_CONNECTOR_ID, 0, 0, -212, 20 , 0 );
view14 = entryCharaView(spep_2 + 0, CHO_CONNECTOR_ID, 0, 0, 206.1, 20 , 0 );

setEnableAura( spep_2 + 0,  view14,  0);
setEnableAura( spep_2 + 0,  view7,  0);

setMoveKey( spep_2 - 1, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 0, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 1, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 2, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 3, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 4, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 5, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 6, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 - 1, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 0, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 1, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 2, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 3, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 4, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 5, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 6, view7, -212, 20 , 0 );

-- ** 超コネクタ ** --
setDisp( spep_2 + 0, view14, 1 );
setDisp( spep_2 + 106 + 40, view14, 0 );
changeAnime( spep_2 + 0, view14, 17 );
setMoveKey( spep_2 + 0, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 78 + 40, view14, 206.1, 20 , 0 );
setMoveKey( spep_2 + 80 + 40, view14, 207.5, 20 , 0 );
setMoveKey( spep_2 + 82 + 40, view14, 211.6, 20 , 0 );
setMoveKey( spep_2 + 84 + 40, view14, 218.6, 20 , 0 );
setMoveKey( spep_2 + 86 + 40, view14, 228.3, 20 , 0 );
setMoveKey( spep_2 + 88 + 40, view14, 240.8, 20 , 0 );
setMoveKey( spep_2 + 90 + 40, view14, 256, 20 , 0 );
setMoveKey( spep_2 + 92 + 40, view14, 274, 20 , 0 );
setMoveKey( spep_2 + 94 + 40, view14, 294.8, 20 , 0 );
setMoveKey( spep_2 + 96 + 40, view14, 318.4, 20 , 0 );
setMoveKey( spep_2 + 98 + 40, view14, 344.7, 20 , 0 );
setMoveKey( spep_2 + 100 + 40, view14, 373.8, 20 , 0 );
setMoveKey( spep_2 + 102 + 40, view14, 405.7, 20 , 0 );
setMoveKey( spep_2 + 104 + 40, view14, 440.4, 20 , 0 );
setMoveKey( spep_2 + 106 + 40, view14, 477.8, 20 , 0 );
setScaleKey( spep_2 + 0, view14, 0.8, 0.8 );
setScaleKey( spep_2 + 106 + 40, view14, 0.8, 0.8 );
setRotateKey( spep_2 + 0, view14, 0 );
setRotateKey( spep_2 + 106 + 40, view14, 0 );

-- ** 極コネクタ ** --
setDisp( spep_2 + 0, view7, 1 );
setDisp( spep_2 + 106 + 40 , view7, 0 );
changeAnime( spep_2 + 0, view7, 17 );
setMoveKey( spep_2 + 0, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 78 + 40, view7, -212, 20 , 0 );
setMoveKey( spep_2 + 80 + 40, view7, -213.3, 20 , 0 );
setMoveKey( spep_2 + 82 + 40, view7, -217.3, 20 , 0 );
setMoveKey( spep_2 + 84 + 40, view7, -223.9, 20 , 0 );
setMoveKey( spep_2 + 86 + 40, view7, -233.2, 20 , 0 );
setMoveKey( spep_2 + 88 + 40, view7, -245.1, 20 , 0 );
setMoveKey( spep_2 + 90 + 40, view7, -259.6, 20 , 0 );
setMoveKey( spep_2 + 92 + 40, view7, -276.8, 20 , 0 );
setMoveKey( spep_2 + 94 + 40, view7, -296.7, 20 , 0 );
setMoveKey( spep_2 + 96 + 40, view7, -319.2, 20 , 0 );
setMoveKey( spep_2 + 98 + 40, view7, -344.3, 20 , 0 );
setMoveKey( spep_2 + 100 + 40, view7, -372.1, 20 , 0 );
setMoveKey( spep_2 + 102 + 40, view7, -402.5, 20 , 0 );
setMoveKey( spep_2 + 104 + 40, view7, -435.6, 20 , 0 );
setMoveKey( spep_2 + 106 + 40, view7, -471.3, 20 , 0 );
setScaleKey( spep_2 + 0, view7, 0.8, 0.8 );
setScaleKey( spep_2 + 106 + 40, view7, 0.8, 0.8 );
setRotateKey( spep_2 + 0, view7, 0 );
setRotateKey( spep_2 + 106 + 40, view7, 0 );

-- ** サポーター ** --
view1 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[1], 0,  0, 228.7, 421.9 , 0 );
view2 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[2], 0,  0, 158.2, 247.9 , 0 );
view3 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[3], 0,  0, 35.9, 411.9 , 0 );
view4 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[4], 0,  0, -37.8, 267.9 , 0 );
view5 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[5], 0,  0, -159.9, 431.9 , 0 );
view6 = entryCharaView(spep_2 + 0 , TEAM_CARD_IDS[6], 0,  0, -235.3, 247.9 , 0 );

view8 = entryCharaView(spep_2 + 0, TEAM_CARD_IDS[7], 0,  0, 228.7, -424.1 , 0 );
view9 = entryCharaView(spep_2 + 0,  TEAM_CARD_IDS[8], 0,  0, 158.2, -252.1 , 0 );
view10 = entryCharaView(spep_2 + 0, TEAM_CARD_IDS[9],  0, 0, 35.9, -394.1 , 0 );
view11 = entryCharaView(spep_2 + 0, TEAM_CARD_IDS[10],  0, 0, -37.8, -272.1 , 0 );
view13 = entryCharaView(spep_2 + 0, TEAM_CARD_IDS[11],  0,  0, -159.9, -414.1 , 0 );
view12 = entryCharaView(spep_2 + 0, TEAM_CARD_IDS[12],  0,  0, -235.3, -252.1 , 0 );

setDisp(spep_2 + 0, view1,  0);
setDisp(spep_2 + 0, view2,  0);
setDisp(spep_2 + 0, view3,  0);
setDisp(spep_2 + 0, view4,  0);
setDisp(spep_2 + 0, view5,  0);
setDisp(spep_2 + 0, view6,  0);
setDisp(spep_2 + 0, view8,  0);
setDisp(spep_2 + 0, view9,  0);
setDisp(spep_2 + 0, view10,  0);
setDisp(spep_2 + 0, view11,  0);
setDisp(spep_2 + 0, view12,  0);
setDisp(spep_2 + 0, view13,  0);

setEnableAura( spep_2 + 0,  0,  0);
setEnableAura( spep_2 + 0,  view1,  0);
setEnableAura( spep_2 + 0,  view2,  0);
setEnableAura( spep_2 + 0,  view3,  0);
setEnableAura( spep_2 + 0,  view4,  0);
setEnableAura( spep_2 + 0,  view5,  0);
setEnableAura( spep_2 + 0,  view6,  0);
setEnableAura( spep_2 + 0,  view8,  0);
setEnableAura( spep_2 + 0,  view9,  0);
setEnableAura( spep_2 + 0,  view10,  0);
setEnableAura( spep_2 + 0,  view11,  0);
setEnableAura( spep_2 + 0,  view12,  0);
setEnableAura( spep_2 + 0,  view13,  0);
setEnableAura( spep_2 + 0,  view14,  0);

--ボーナスキャラクターに選ばれたカードかどうか？
function isBonusCharacter(characterId)
	return characterId == BONUS_CHARACTER_CARD_IDS[1] or characterId == BONUS_CHARACTER_CARD_IDS[2] or characterId == BONUS_CHARACTER_CARD_IDS[3]
end

if (not isBonusCharacter(TEAM_CARD_IDS[1])) then
	 --超1番目のキャラクターの処理
	setDisp( spep_2 + 0, view1, 1 );
	setDisp( spep_2 + 106 + 40, view1, 0 );
	changeAnime( spep_2 + 0, view1, 17 );
	setMoveKey( spep_2 + 0, view1, 228.7, 421.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view1, 228.7, 421.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view1, 228.7, 423.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view1, 228.7, 429.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view1, 228.7, 440 , 0 );
	setMoveKey( spep_2 + 86 + 40, view1, 228.7, 454.1 , 0 );
	setMoveKey( spep_2 + 88 + 40, view1, 228.7, 472.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view1, 228.7, 494.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view1, 228.7, 520.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view1, 228.7, 550.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view1, 228.7, 585.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view1, 228.7, 623.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view1, 228.7, 665.8 , 0 );
	setMoveKey( spep_2 + 102 + 40, view1, 228.7, 712.2 , 0 );
	setMoveKey( spep_2 + 104 + 40, view1, 228.7, 762.6 , 0 );
	setMoveKey( spep_2 + 106 + 40, view1, 228.7, 817.1 , 0 );
	setScaleKey( spep_2 + 0, view1, 0.45, 0.45 );
	setScaleKey( spep_2 + 106 + 40, view1, 0.45, 0.45 );
	setRotateKey( spep_2 + 0, view1, 0 );
	setRotateKey( spep_2 + 106 + 40, view1, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[2])) then
	 --超2番目のキャラクターの処理
	setDisp( spep_2 + 0, view2, 1 );
	setDisp( spep_2 + 106 + 40, view2, 0 );
	changeAnime( spep_2 + 0, view2, 17 );
	setMoveKey( spep_2 + 0, view2, 158.2, 247.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view2, 158.2, 247.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view2, 158.2, 249.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view2, 158.2, 256 , 0 );
	setMoveKey( spep_2 + 84 + 40, view2, 158.2, 266 , 0 );
	setMoveKey( spep_2 + 86 + 40, view2, 158.2, 280.2 , 0 );
	setMoveKey( spep_2 + 88 + 40, view2, 158.2, 298.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view2, 158.2, 320.5 , 0 );
	setMoveKey( spep_2 + 92 + 40, view2, 158.2, 346.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view2, 158.2, 376.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view2, 158.2, 411.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view2, 158.2, 449.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view2, 158.2, 491.9 , 0 );
	setMoveKey( spep_2 + 102 + 40, view2, 158.2, 538.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view2, 158.2, 588.7 , 0 );
	setMoveKey( spep_2 + 106 + 40, view2, 158.2, 643.1 , 0 );
	setScaleKey( spep_2 + 0, view2, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view2, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view2, 0 );
	setRotateKey( spep_2 + 106 + 40, view2, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[3])) then
	--超3番目のキャラクターの処理
	setDisp( spep_2 + 0, view3, 1 );
	setDisp( spep_2 + 106 + 40, view3, 0 );
	changeAnime( spep_2 + 0, view3, 17 );
	setMoveKey( spep_2 + 0, view3, 35.9, 411.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view3, 35.9, 411.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view3, 35.9, 413.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view3, 35.9, 419.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view3, 35.9, 430 , 0 );
	setMoveKey( spep_2 + 86 + 40, view3, 35.9, 444.1 , 0 );
	setMoveKey( spep_2 + 88 + 40, view3, 35.9, 462.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view3, 35.9, 484.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view3, 35.9, 510.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view3, 35.9, 540.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view3, 35.9, 575.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view3, 35.9, 613.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view3, 35.9, 655.8 , 0 );
	setMoveKey( spep_2 + 102 + 40, view3, 35.9, 702.2 , 0 );
	setMoveKey( spep_2 + 104 + 40, view3, 35.9, 752.6 , 0 );
	setMoveKey( spep_2 + 106 + 40, view3, 35.9, 807.1 , 0 );
	setScaleKey( spep_2 + 0, view3, 0.45, 0.45 );
	setScaleKey( spep_2 + 106 + 40, view3, 0.45, 0.45 );
	setRotateKey( spep_2 + 0, view3, 0 );
	setRotateKey( spep_2 + 106 + 40, view3, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[4])) then
	--超4番目のキャラクターの処理
	setDisp( spep_2 + 0, view4, 1 );
	setDisp( spep_2 + 106 + 40, view4, 0 );
	changeAnime( spep_2 + 0, view4, 17);
	setMoveKey( spep_2 + 0, view4, -37.8, 267.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view4, -37.8, 267.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view4, -37.8, 269.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view4, -37.8, 276 , 0 );
	setMoveKey( spep_2 + 84 + 40, view4, -37.8, 286 , 0 );
	setMoveKey( spep_2 + 86 + 40, view4, -37.8, 300.2 , 0 );
	setMoveKey( spep_2 + 88 + 40, view4, -37.8, 318.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view4, -37.8, 340.5 , 0 );
	setMoveKey( spep_2 + 92 + 40, view4, -37.8, 366.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view4, -37.8, 396.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view4, -37.8, 431.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view4, -37.8, 469.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view4, -37.8, 511.9 , 0 );
	setMoveKey( spep_2 + 102 + 40, view4, -37.8, 558.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view4, -37.8, 608.7 , 0 );
	setMoveKey( spep_2 + 106 + 40, view4, -37.8, 663.1 , 0 );
	setScaleKey( spep_2 + 0, view4, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view4, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view4, 0 );
	setRotateKey( spep_2 + 106 + 40, view4, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[5])) then
	--超5番目のキャラクターの処理
	setDisp( spep_2 + 0, view5, 1 );
	setDisp( spep_2 + 106 + 40, view5, 0 );
	changeAnime( spep_2 + 0, view5, 17 );
	setMoveKey( spep_2 + 0, view5, -159.9, 431.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view5, -159.9, 431.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view5, -159.9, 433.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view5, -159.9, 439.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view5, -159.9, 450 , 0 );
	setMoveKey( spep_2 + 86 + 40, view5, -159.9, 464.1 , 0 );
	setMoveKey( spep_2 + 88 + 40, view5, -159.9, 482.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view5, -159.9, 504.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view5, -159.9, 530.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view5, -159.9, 560.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view5, -159.9, 595.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view5, -159.9, 633.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view5, -159.9, 675.8 , 0 );
	setMoveKey( spep_2 + 102 + 40, view5, -159.9, 722.2 , 0 );
	setMoveKey( spep_2 + 104 + 40, view5, -159.9, 772.6 , 0 );
	setMoveKey( spep_2 + 106 + 40, view5, -159.9, 827.1 , 0 );
	setScaleKey( spep_2 + 0, view5, 0.45, 0.45 );
	setScaleKey( spep_2 + 106 + 40, view5, 0.45, 0.45 );
	setRotateKey( spep_2 + 0, view5, 0 );
	setRotateKey( spep_2 + 106 + 40, view5, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[6])) then
	--超6番目のキャラクターの処理
	setDisp( spep_2 + 0, view6, 1 );
	setDisp( spep_2 + 106 + 40, view6, 0 );
	changeAnime( spep_2 + 0, view6, 17);
	setMoveKey( spep_2 + 0, view6, -235.3, 247.9 , 0 );
	setMoveKey( spep_2 + 78 + 40, view6, -235.3, 247.9 , 0 );
	setMoveKey( spep_2 + 80 + 40, view6, -235.3, 249.9 , 0 );
	setMoveKey( spep_2 + 82 + 40, view6, -235.3, 256 , 0 );
	setMoveKey( spep_2 + 84 + 40, view6, -235.3, 266 , 0 );
	setMoveKey( spep_2 + 86 + 40, view6, -235.3, 280.2 , 0 );
	setMoveKey( spep_2 + 88 + 40, view6, -235.3, 298.3 , 0 );
	setMoveKey( spep_2 + 90 + 40, view6, -235.3, 320.5 , 0 );
	setMoveKey( spep_2 + 92 + 40, view6, -235.3, 346.7 , 0 );
	setMoveKey( spep_2 + 94 + 40, view6, -235.3, 376.9 , 0 );
	setMoveKey( spep_2 + 96 + 40, view6, -235.3, 411.2 , 0 );
	setMoveKey( spep_2 + 98 + 40, view6, -235.3, 449.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view6, -235.3, 491.9 , 0 );
	setMoveKey( spep_2 + 102 + 40, view6, -235.3, 538.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view6, -235.3, 588.7 , 0 );
	setMoveKey( spep_2 + 106 + 40, view6, -235.3, 643.1 , 0 );
	setScaleKey( spep_2 + 0, view6, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view6, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view6, 0 );
	setRotateKey( spep_2 + 106 + 40, view6, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[7])) then
	 --極1番目のキャラクターの処理
	 setDisp( spep_2 + 0, view8, 1 );
	 setDisp( spep_2 + 106 + 40, view8, 0 );
     changeAnime( spep_2 + 0, view8, 17 );
     setMoveKey( spep_2 + 0, view8, 228.7, -424.1 , 0 );
     setMoveKey( spep_2 + 78 + 40, view8, 228.7, -424.1 , 0 );
     setMoveKey( spep_2 + 80 + 40, view8, 228.7, -426.1 , 0 );
     setMoveKey( spep_2 + 82 + 40, view8, 228.7, -431.9 , 0 );
     setMoveKey( spep_2 + 84 + 40, view8, 228.7, -441.7 , 0 );
     setMoveKey( spep_2 + 86 + 40, view8, 228.7, -455.4 , 0 );
     setMoveKey( spep_2 + 88 + 40, view8, 228.7, -472.9 , 0 );
     setMoveKey( spep_2 + 90 + 40, view8, 228.7, -494.4 , 0 );
     setMoveKey( spep_2 + 92 + 40, view8, 228.7, -519.8 , 0 );
     setMoveKey( spep_2 + 94 + 40, view8, 228.7, -549.1 , 0 );
     setMoveKey( spep_2 + 96 + 40, view8, 228.7, -582.3 , 0 );
     setMoveKey( spep_2 + 98 + 40, view8, 228.7, -619.5 , 0 );
     setMoveKey( spep_2 + 100 + 40, view8, 228.7, -660.5 , 0 );
     setMoveKey( spep_2 + 102 + 40, view8, 228.7, -705.4 , 0 );
     setMoveKey( spep_2 + 104 + 40, view8, 228.7, -754.3 , 0 );
     setMoveKey( spep_2 + 106 + 40, view8, 228.7, -807 , 0 );
     setScaleKey( spep_2 + 0, view8, 0.45, 0.45 );
     setScaleKey( spep_2 + 106 + 40, view8, 0.45, 0.45 );
     setRotateKey( spep_2 + 0, view8, 0 );
     setRotateKey( spep_2 + 106 + 40, view8, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[8])) then
	--2番目のキャラクターの処理
	setDisp( spep_2 + 0, view9, 1 );
	setDisp( spep_2 + 106 + 40, view9, 0 );
	changeAnime( spep_2 + 0, view9, 17 );
	setMoveKey( spep_2 + 0, view9, 158.2, -252.1 , 0 );
	setMoveKey( spep_2 + 78 + 40, view9, 158.2, -252.1 , 0 );
	setMoveKey( spep_2 + 80 + 40, view9, 158.2, -254.1 , 0 );
	setMoveKey( spep_2 + 82 + 40, view9, 158.2, -259.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view9, 158.2, -269.7 , 0 );
	setMoveKey( spep_2 + 86 + 40, view9, 158.2, -283.3 , 0 );
	setMoveKey( spep_2 + 88 + 40, view9, 158.2, -300.9 , 0 );
	setMoveKey( spep_2 + 90 + 40, view9, 158.2, -322.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view9, 158.2, -347.8 , 0 );
	setMoveKey( spep_2 + 94 + 40, view9, 158.2, -377.1 , 0 );
	setMoveKey( spep_2 + 96 + 40, view9, 158.2, -410.3 , 0 );
	setMoveKey( spep_2 + 98 + 40, view9, 158.2, -447.4 , 0 );
	setMoveKey( spep_2 + 100 + 40, view9, 158.2, -488.4 , 0 );
	setMoveKey( spep_2 + 102 + 40, view9, 158.2, -533.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view9, 158.2, -582.2 , 0 );
	setMoveKey( spep_2 + 106 + 40, view9, 158.2, -634.9 , 0 );
	setScaleKey( spep_2 + 0, view9, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view9, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view9, 0 );
	setRotateKey( spep_2 + 106 + 40, view9, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[9])) then
	--3番目のキャラクターの処理
	setDisp( spep_2 + 0, view10, 1 );
	setDisp( spep_2 + 106 + 40, view10, 0 );
	changeAnime( spep_2 + 0, view10, 17 );
	setMoveKey( spep_2 + 0, view10, 35.9, -394.1 , 0 );
	setMoveKey( spep_2 + 78 + 40, view10, 35.9, -394.1 , 0 );
	setMoveKey( spep_2 + 80 + 40, view10, 35.9, -396.1 , 0 );
	setMoveKey( spep_2 + 82 + 40, view10, 35.9, -401.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view10, 35.9, -411.7 , 0 );
	setMoveKey( spep_2 + 86 + 40, view10, 35.9, -425.4 , 0 );
	setMoveKey( spep_2 + 88 + 40, view10, 35.9, -442.9 , 0 );
	setMoveKey( spep_2 + 90 + 40, view10, 35.9, -464.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view10, 35.9, -489.8 , 0 );
	setMoveKey( spep_2 + 94 + 40, view10, 35.9, -519.1 , 0 );
	setMoveKey( spep_2 + 96 + 40, view10, 35.9, -552.3 , 0 );
	setMoveKey( spep_2 + 98 + 40, view10, 35.9, -589.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view10, 35.9, -630.5 , 0 );
	setMoveKey( spep_2 + 102 + 40, view10, 35.9, -675.4 , 0 );
	setMoveKey( spep_2 + 104 + 40, view10, 35.9, -724.3 , 0 );
	setMoveKey( spep_2 + 106 + 40, view10, 35.9, -777 , 0 );
	setScaleKey( spep_2 + 0, view10, 0.45, 0.45 );
	setScaleKey( spep_2 + 106 + 40, view10, 0.45, 0.45 );
	setRotateKey( spep_2 + 0, view10, 0 );
	setRotateKey( spep_2 + 106 + 40, view10, 0 );
end

if (not isBonusCharacter(TEAM_CARD_IDS[10])) then
	--4番目のキャラクターの処理

	setDisp( spep_2 + 0, view11, 1 );
	setDisp( spep_2 + 106 + 40, view11, 0 );
	changeAnime( spep_2 + 0, view11,17 );
	setMoveKey( spep_2 + 0, view11, -37.8, -272.1 , 0 );
	setMoveKey( spep_2 + 78 + 40, view11, -37.8, -272.1 , 0 );
	setMoveKey( spep_2 + 80 + 40, view11, -37.8, -274.1 , 0 );
	setMoveKey( spep_2 + 82 + 40, view11, -37.8, -279.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view11, -37.8, -289.7 , 0 );
	setMoveKey( spep_2 + 86 + 40, view11, -37.8, -303.3 , 0 );
	setMoveKey( spep_2 + 88 + 40, view11, -37.8, -320.9 , 0 );
	setMoveKey( spep_2 + 90 + 40, view11, -37.8, -342.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view11, -37.8, -367.8 , 0 );
	setMoveKey( spep_2 + 94 + 40, view11, -37.8, -397.1 , 0 );
	setMoveKey( spep_2 + 96 + 40, view11, -37.8, -430.3 , 0 );
	setMoveKey( spep_2 + 98 + 40, view11, -37.8, -467.4 , 0 );
	setMoveKey( spep_2 + 100 + 40, view11, -37.8, -508.4 , 0 );
	setMoveKey( spep_2 + 102 + 40, view11, -37.8, -553.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view11, -37.8, -602.2 , 0 );
	setMoveKey( spep_2 + 106 + 40, view11, -37.8, -654.9 , 0 );
	setScaleKey( spep_2 + 0, view11, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view11, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view11, 0 );
	setRotateKey( spep_2 + 106 + 40, view11, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[11])) then
	--6番目のキャラクターの処理
	setDisp( spep_2 + 0, view13, 1 );
	setDisp( spep_2 + 106 + 40, view13, 0 );
	changeAnime( spep_2 + 0, view13, 17 );
	setMoveKey( spep_2 + 0, view13, -159.9, -414.1 , 0 );
	setMoveKey( spep_2 + 78 + 40, view13, -159.9, -414.1 , 0 );
	setMoveKey( spep_2 + 80 + 40, view13, -159.9, -416.1 , 0 );
	setMoveKey( spep_2 + 82 + 40, view13, -159.9, -421.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view13, -159.9, -431.7 , 0 );
	setMoveKey( spep_2 + 86 + 40, view13, -159.9, -445.4 , 0 );
	setMoveKey( spep_2 + 88 + 40, view13, -159.9, -462.9 , 0 );
	setMoveKey( spep_2 + 90 + 40, view13, -159.9, -484.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view13, -159.9, -509.8 , 0 );
	setMoveKey( spep_2 + 94 + 40, view13, -159.9, -539.1 , 0 );
	setMoveKey( spep_2 + 96 + 40, view13, -159.9, -572.3 , 0 );
	setMoveKey( spep_2 + 98 + 40, view13, -159.9, -609.5 , 0 );
	setMoveKey( spep_2 + 100 + 40, view13, -159.9, -650.5 , 0 );
	setMoveKey( spep_2 + 102 + 40, view13, -159.9, -695.4 , 0 );
	setMoveKey( spep_2 + 104 + 40, view13, -159.9, -744.3 , 0 );
	setMoveKey( spep_2 + 106 + 40, view13, -159.9, -7970 , 0 );
	setScaleKey( spep_2 + 0, view13, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view13, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view13, 0 );
	setRotateKey( spep_2 + 106 + 40, view13, 0 );
end
if (not isBonusCharacter(TEAM_CARD_IDS[12])) then
	--5番目のキャラクターの処理
	setDisp( spep_2 + 0, view12, 1 );
	setDisp( spep_2 + 106 + 40, view12, 0 );
	changeAnime( spep_2 + 0, view12, 17 );
	setMoveKey( spep_2 + 0, view12, -235.3, -252.1 , 0 );
	setMoveKey( spep_2 + 78 + 40, view12, -235.3, -252.1 , 0 );
	setMoveKey( spep_2 + 80 + 40, view12, -235.3, -254.1 , 0 );
	setMoveKey( spep_2 + 82 + 40, view12, -235.3, -259.9 , 0 );
	setMoveKey( spep_2 + 84 + 40, view12, -235.3, -269.7 , 0 );
	setMoveKey( spep_2 + 86 + 40, view12, -235.3, -283.3 , 0 );
	setMoveKey( spep_2 + 88 + 40, view12, -235.3, -300.9 , 0 );
	setMoveKey( spep_2 + 90 + 40, view12, -235.3, -322.4 , 0 );
	setMoveKey( spep_2 + 92 + 40, view12, -235.3, -347.8 , 0 );
	setMoveKey( spep_2 + 94 + 40, view12, -235.3, -377.1 , 0 );
	setMoveKey( spep_2 + 96 + 40, view12, -235.3, -410.3 , 0 );
	setMoveKey( spep_2 + 98 + 40, view12, -235.3, -447.4 , 0 );
	setMoveKey( spep_2 + 100 + 40, view12, -235.3, -488.4 , 0 );
	setMoveKey( spep_2 + 102 + 40, view12, -235.3, -533.3 , 0 );
	setMoveKey( spep_2 + 104 + 40, view12, -235.3, -582.2 , 0 );
	setMoveKey( spep_2 + 106 + 40, view12, -235.3, -634.9 , 0 );
	setScaleKey( spep_2 + 0, view12, 0.5, 0.5 );
	setScaleKey( spep_2 + 106 + 40, view12, 0.5, 0.5 );
	setRotateKey( spep_2 + 0, view12, 0 );
	setRotateKey( spep_2 + 106 + 40, view12, 0 );
end

-- ** SE ** --
playSe( spep_2 + 0,  1036);
setSeVolume( spep_2 + 0,  1036,  71);
playSe( spep_2 + 18,  23);
setSeVolume( spep_2 + 18,  23,  63);
playSe( spep_2 + 18,  1042);
playSe( spep_2 + 24,  1036);
setSeVolume( spep_2 + 24,  1036,  71);
playSe( spep_2 + 48,  1036);
setSeVolume( spep_2 + 48,  1036,  71);
playSe( spep_2 + 72,  1036);
setSeVolume( spep_2 + 72,  1036,  71);
playSe( spep_2 + 72 + 20 ,  1036);
setSeVolume( spep_2 + 72 + 20 ,  1036,  71);
playSe( spep_2 + 72 + 40 ,  1036);
setSeVolume( spep_2 + 72 + 40 ,  1036,  71);
playSe( spep_2 + 72 + 40,  1072);
playSe( spep_2 + 96+ 40,  1036);
setSeVolume( spep_2 + 96+ 40,  1036,  71);
playSe( spep_2 + 120+ 40, 1036);
setSeVolume( spep_2 + 120+ 40,  1036,  71);
playSe( spep_2 + 130+ 40, 1018);
playSe( spep_2 + 144+ 40, 1036);
setSeVolume( spep_2 + 144+ 40,  1036,  71);
playSe( spep_2 + 168+ 40,  1036);
setSeVolume( spep_2 + 168+ 40,  1036,  71);
playSe( spep_2 + 192+ 40,  1036);
setSeVolume( spep_2 + 192+ 40,  1036,  71);
playSe( spep_2 + 207+ 40,  1035);
playSe( spep_2 + 207+ 40,  1043);
setSeVolume( spep_2 + 207,  1043,  89);
playSe( spep_2 + 216+ 40,  1036);
setSeVolume( spep_2 + 216+ 40,  1036,  71);
playSe( spep_2 + 240+ 40,  1036);
setSeVolume( spep_2 + 240+ 40,  1036,  71);
playSe( spep_2 + 263+ 40,  1036);
setSeVolume( spep_2 + 263+ 40,  1036,  71);
playSe( spep_2 + 286+ 40,  1036);
setSeVolume( spep_2 + 286+ 40,  1036,  71);
playSe( spep_2 + 309+ 40,  1036);
setSeVolume( spep_2 + 309+ 40,  1036,  71);
playSe( spep_2 + 332+ 40,  1036);
setSeVolume( spep_2 + 332+ 40,  1036,  71);
playSe( spep_2 + 347+ 40,  45);
playSe( spep_2 + 355+ 40,  1036);
setSeVolume( spep_2 + 355+ 40,  1036,  71);
playSe( spep_2 + 378+ 40,  1036);
setSeVolume( spep_2 + 378+ 40,  1036,  71);

--entryFadeBg( spep_2 + 0,  0,  388,  0,  254,  248,  160,  200);  --黄色
entryFadeBg( spep_2 + 0,  0,  388+ 60,  0,  0,  0,  0,  200);  --黒色

endPhase(spep_2 + 388+ 60);
